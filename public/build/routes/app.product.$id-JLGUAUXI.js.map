{
  "version": 3,
  "sources": ["../../../app/routes/app.product.$id.tsx", "../../../app/components/Tables/ProductItems.tsx", "../../../app/components/Form/Product/ItemMetafieldEditorForm.tsx", "../../../app/graphql/products/productQuery.ts", "../../../app/components/Form/Product/ItemMetafieldForm.tsx", "../../../app/graphql/metafields/metafieldSetMutation.ts", "../../../app/graphql/products/productUpdate.ts", "../../../app/components/Form/Product/DuplicateForm.tsx", "../../../node_modules/react-dnd/src/core/DndContext.ts", "../../../node_modules/redux/es/redux.js", "../../../node_modules/@react-dnd/invariant/src/index.ts", "../../../node_modules/dnd-core/src/utils/js_utils.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/types.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/drop.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts", "../../../node_modules/dnd-core/src/utils/matchesType.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/hover.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts", "../../../node_modules/dnd-core/src/actions/dragDrop/index.ts", "../../../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts", "../../../node_modules/dnd-core/src/utils/coords.ts", "../../../node_modules/dnd-core/src/utils/dirtiness.ts", "../../../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts", "../../../node_modules/@react-dnd/asap/src/makeRequestCall.ts", "../../../node_modules/@react-dnd/asap/src/AsapQueue.ts", "../../../node_modules/@react-dnd/asap/src/RawTask.ts", "../../../node_modules/@react-dnd/asap/src/TaskFactory.ts", "../../../node_modules/@react-dnd/asap/src/asap.ts", "../../../node_modules/dnd-core/src/actions/registry.ts", "../../../node_modules/dnd-core/src/contracts.ts", "../../../node_modules/dnd-core/src/interfaces.ts", "../../../node_modules/dnd-core/src/utils/getNextUniqueId.ts", "../../../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts", "../../../node_modules/dnd-core/src/utils/equality.ts", "../../../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts", "../../../node_modules/dnd-core/src/reducers/dragOffset.ts", "../../../node_modules/dnd-core/src/reducers/dragOperation.ts", "../../../node_modules/dnd-core/src/reducers/refCount.ts", "../../../node_modules/dnd-core/src/reducers/stateId.ts", "../../../node_modules/dnd-core/src/reducers/index.ts", "../../../node_modules/dnd-core/src/createDragDropManager.ts", "../../../node_modules/react-dnd/src/core/DndProvider.tsx", "../../../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts", "../../../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts", "../../../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts", "../../../node_modules/react-dnd-html5-backend/src/NativeTypes.ts", "../../../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts", "../../../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts", "../../../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts", "../../../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts", "../../../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts", "../../../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts", "../../../node_modules/react-dnd-html5-backend/src/OptionsReader.ts", "../../../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts", "../../../node_modules/react-dnd-html5-backend/src/index.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.product.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.product.$id.tsx\");\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Await, useActionData, useFetcher, useLoaderData, useNavigate, useSubmit } from \"@remix-run/react\";\nimport { Box, Card, Layout, Page, Text, TextField, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { Suspense, lazy, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport ProductItems from \"~/components/Tables/ProductItems\";\nimport ProductProperties from \"~/components/Tables/ProductProperties\";\nimport { getProductIDString } from \"~/constants\";\nimport { productQuery } from \"~/graphql/products/productQuery\";\nimport { authenticate } from \"~/shopify.server\";\nimport ItemMetafieldForm from \"~/components/Form/Product/ItemMetafieldForm\";\nimport { get, numberGenerator, toHTML } from \"~/utils\";\nimport PropertyMetafieldForm from \"~/components/Form/Product/PropertyMetafieldForm\";\nimport ImageGrid from \"~/components/ImageGrid\";\nimport ImageForm from \"~/components/Form/Product/ImageForm\";\nimport { createVariables, metafieldSetMutation } from \"~/graphql/metafields/metafieldSetMutation\";\nimport SaveAppBar from \"~/components/Form/SaveAppBar\";\nimport { createUpdateProductVariables, productSaveUpdateMutation } from \"~/graphql/products/productUpdate\";\nimport DuplicateForm from \"~/components/Form/Product/DuplicateForm\";\nimport mkecss from \"@uiw/react-md-editor/markdown-editor.css\";\nimport mkdn from \"@uiw/react-markdown-preview/markdown.css\";\nimport { useFormik } from \"formik\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { parseJSONWithData } from \"~/utils/metaobjects\";\nconst MDEditor = lazy(_c = () => import(\"@uiw/react-md-editor\"));\n_c2 = MDEditor;\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: mkecss\n}, {\n  rel: \"stylesheet\",\n  href: mkdn\n}];\nexport async function loader({\n  request,\n  params\n}) {\n  const {\n    admin\n  } = await authenticate.admin(request);\n  const id = numberGenerator();\n  const data = await productQuery({\n    graphql: admin.graphql,\n    id: getProductIDString(params.id)\n  });\n  let productdescription = parseJSONWithData(_.get(data, \"data.product.productdescription.value\"));\n  let productItems = [];\n  let productProperties = [];\n  if (_.get(data, \"data.product.items.value\")) {\n    productItems = JSON.parse(_.get(data, \"data.product.items.value\", \"{}\"));\n  }\n  if (_.get(data, \"data.product.properties.value\")) {\n    productProperties = JSON.parse(_.get(data, \"data.product.properties.value\", \"{}\"));\n  }\n  return json({\n    product: _.get(data, \"data.product\"),\n    productdescription,\n    productItems: _.map(_.get(productItems, \"data\", []), (it, index) => ({\n      id: id + index + 1,\n      ...it\n    })),\n    productProperties: _.map(_.get(productProperties, \"data\", []), (it, index) => ({\n      id: index + id + 1,\n      ...it\n    }))\n  }, {\n    headers: {\n      \"Cache-Control\": \"no-store, no-cache, must-revalidate\"\n    }\n  });\n}\nexport async function action({\n  request,\n  params\n}) {\n  const {\n    session,\n    admin\n  } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData())\n  };\n  const productId = getProductIDString(params.id);\n  const variables = createVariables({\n    ownerId: _.get(data, \"ownerId\"),\n    properties: _.get(data, \"properties\"),\n    items: _.get(data, \"items\"),\n    additionalmedia: _.get(data, \"additionalmedia\"),\n    mainmedia: _.get(data, \"mainmedia\"),\n    productdescription: JSON.stringify({\n      data: _.get(data, \"productdescription\")\n    })\n  });\n  const response = await metafieldSetMutation({\n    graphql: admin.graphql,\n    variables\n  });\n  const productVariables = createUpdateProductVariables({\n    productId,\n    title: _.get(data, \"title\"),\n    descriptionHtml: _.get(data, \"description\")\n  });\n  const res = await productSaveUpdateMutation({\n    graphql: admin.graphql,\n    variables: productVariables\n  });\n  return json({\n    data: res\n  });\n}\nexport default function ProductPage() {\n  _s();\n  const {\n    product,\n    productItems,\n    productProperties,\n    productdescription\n  } = useLoaderData();\n  const [formDirty, setFormDirty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const actionData = useActionData();\n  const activatorRef = useRef(null);\n  const itemFetcher = useFetcher();\n  const [itemDefinitions, setItemDefinitions] = useState([]);\n  const handleItemDefinitionsChange = useCallback(values => {\n    setItemDefinitions(values);\n  }, []);\n  useEffect(() => {\n    if (itemFetcher.data) {\n      const o = _.map(_.get(itemFetcher.data, \"data.metaobjects.edges\"), item => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\")\n        };\n      });\n      handleItemDefinitionsChange(o);\n    }\n  }, [itemFetcher.data, loading]);\n  const propertiesFetcher = useFetcher();\n  const [standardProperties, setStandardProperties] = useState([]);\n  const handleSetPropertiesChange = useCallback(values => {\n    setStandardProperties(values);\n  }, []);\n  useEffect(() => {\n    if (propertiesFetcher.data) {\n      const o = _.map(_.get(propertiesFetcher.data, \"data.metaobjects.edges\"), item => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\")\n        };\n      });\n      handleSetPropertiesChange(o);\n    }\n  }, [propertiesFetcher.data]);\n  const handlePropertiesChange = useCallback(values => {\n    formik.setFieldValue(\"properties\", values);\n    setFormDirty(true);\n  }, []);\n  const handleLoadingChange = useCallback(value => setLoading(value), []);\n  useEffect(() => {\n    handleLoadingChange(false);\n    setFormDirty(false);\n    if (initialValues == formik.values) {\n      setFormDirty(false);\n    }\n  }, [actionData]);\n  const images = useMemo(() => {\n    if (_.get(product, \"additionalmedia.value\")) {\n      return JSON.parse(_.get(product, \"additionalmedia.value\", \"[]\"));\n    }\n    return [];\n  }, []);\n  const fetcher = useFetcher();\n  const fetcher2 = useFetcher();\n  const navigate = useNavigate();\n  const setAdditionalMedia = values => {\n    formik.setFieldValue(\"additionalMedia\", values);\n    handleFormDirty();\n  };\n  const submit = useSubmit();\n  const handleFormDirty = useCallback(() => setFormDirty(true), []);\n  const initialValues = {\n    items: productItems,\n    properties: productProperties,\n    title: _.get(product, \"title\"),\n    description: _.get(product, \"description\"),\n    mainMedia: _.get(product, \"mainMedia.value\", \"\") ? [_.get(product, \"mainMedia.value\", \"\")] : [],\n    additionalMedia: images,\n    id: _.get(product, \"id\"),\n    productdescription: productdescription || \"\"\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: async values => {\n      setLoading(true);\n      const data = {\n        title: _.get(values, \"title\"),\n        description: _.get(values, \"description\"),\n        ownerId: _.get(product, \"id\"),\n        properties: JSON.stringify({\n          data: _.get(values, \"properties\")\n        }),\n        items: JSON.stringify({\n          data: _.get(values, \"items\")\n        }),\n        additionalmedia: JSON.stringify(_.get(values, \"additionalMedia\")),\n        mainmedia: _.get(values, \"mainMedia\"),\n        productdescription: _.get(values, \"productdescription\")\n      };\n      submit(data, {\n        method: \"post\"\n      });\n    }\n  });\n  useEffect(() => {\n    setLoading(false);\n  }, [formDirty]);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  const addItem = item => {\n    handleFormDirty();\n    const items = _.get(formik, \"values.items\", []);\n    const _item = _.findIndex(items, it => it.id === item.id);\n    let newItem = item;\n    if (_item) {\n      newItem = {\n        ...item,\n        id: numberGenerator() + numberGenerator()\n      };\n    }\n    formik.setFieldValue(\"items\", [item, ...items]);\n  };\n  const removeItem = id => {\n    const items = _.get(formik, \"values.items\", []);\n    formik.setFieldValue(\"items\", items?.filter(it => _.get(it, \"id\") !== id));\n    handleFormDirty();\n  };\n  const onEditItem = item => {\n    const items = _.get(formik, \"values.items\", []);\n    const index = _.findIndex(items, _item => _item?.id == item.id);\n    formik.setFieldValue(`items[${index}]`, item);\n    handleFormDirty();\n  };\n  const handleItemsChange = useCallback(values => {\n    formik.setFieldValue(`items`, values);\n    setFormDirty(true);\n  }, []);\n  const addProperty = item => {\n    const otherProperties = _.get(formik, \"values.properties\", []);\n    formik.setFieldValue(\"properties\", [item, ...otherProperties]);\n    handleFormDirty();\n  };\n  const removeProperty = id => {\n    formik.setFieldValue(\"properties\", get(formik, \"values.properties\", [])?.filter(it => _.get(it, \"id\") !== id));\n    handleFormDirty();\n  };\n  const onEditProperty = (item, idx) => {\n    const index = _.findIndex(get(formik, \"values.properties\", []), prop => prop?.id === item?.id);\n    formik.setFieldValue(`properties[${index}]`, item);\n    handleFormDirty();\n  };\n  const removeAdditionalImages = image => {\n    formik.setFieldValue(\"additionalMedia\", [...get(formik, \"values.additionalMedia\")?.filter(it => it !== image)]);\n    handleFormDirty();\n  };\n  const onAddMainMedia = value => {\n    formik.setFieldValue(\"mainMedia\", [value]);\n    handleFormDirty();\n  };\n  const onAddAdditionalMedia = image => {\n    formik.setFieldValue(\"additionalMedia\", [image, ...get(formik, \"values.additionalMedia\", [])]);\n    handleFormDirty();\n  };\n  return <DndProvider backend={HTML5Backend}>\n      <Page backAction={{\n      content: \"Products\",\n      url: \"/app/products\"\n    }} title={_.get(product, \"title\", \"\")} subtitle=\"product\" compactTitle secondaryActions={[{\n      content: \"Duplicate\",\n      accessibilityLabel: \"Secondary action label\",\n      onAction: () => {\n        activatorRef.current?.querySelector(\"button\")?.click();\n      }\n    }]}>\n\n\n        <Layout>\n          <Layout.Section>\n            {formDirty ? <SaveAppBar loading={loading} saveAction={formik.submitForm} discardAction={() => {\n            navigate(\"/app/products\");\n          }} /> : null}\n            <Card>\n              <DuplicateForm modalTitle={\"Duplicate\"} product={product} activatorRef={activatorRef} />\n\n              <VerticalStack gap=\"3\">\n                <TextField label=\"Title\" value={get(formik, \"values.title\")} onChange={e => {\n                formik.setFieldValue(\"title\", e);\n                handleFormDirty();\n              }} autoComplete=\"off\" />\n\n\n                <Suspense>\n                  <Await resolve={get(formik, \"values.productdescription\")}>\n                    {value => <>\n                        <label>{\"Description\"}</label>\n                        <div data-color-mode=\"light\">\n                          <MDEditor value={value?.includes(\"children\") ? toHTML(value) : value} name={\"productdescription\"} onChange={e => {\n                        formik.setFieldValue(\"productdescription\", e);\n                        handleFormDirty();\n                      }} />\n\n                          <Box padding=\"2\"></Box>\n                        </div>\n                      </>}\n\n                  </Await>\n                </Suspense>\n\n                <Suspense>\n                  <Await resolve={get(formik, \"values.description\")}>\n                    {value => <>\n                        <label>\n                          {\"Original Description (not editable - to be removed in future)\"}\n\n                        </label>\n                        <div data-color-mode=\"light\">\n                          <MDEditor value={value?.includes(\"children\") ? toHTML(value) : value} name={\"description\"} onChange={e => {\n\n                        // formik.setFieldValue(\"productdescription\", e);\n                        // handleFormDirty();\n                      }} />\n                          <Box padding=\"2\"></Box>\n                        </div>\n                      </>}\n                  </Await>\n                </Suspense>\n\n                <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Items\n                  </Text>\n\n                  <ItemMetafieldForm activatorTitle=\"Add Item\" fetcher={fetcher} onAdd={addItem} values={{}} />\n\n                </div>\n                <ProductItems fetcher={fetcher} onEdit={onEditItem} items={get(formik, \"values.items\")} onRemove={removeItem} handleItemChange={handleItemsChange} itemDefinitions={itemDefinitions} formik={formik} />\n\n                <Box padding={\"5\"} />\n                <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Properties\n                  </Text>\n\n                  <PropertyMetafieldForm activatorTitle=\"Add Property\" standardProperties={standardProperties} onAdd={addProperty} values={{}} />\n\n                </div>\n\n                <ProductProperties fetcher={fetcher2} onEdit={onEditProperty} onAdd={addProperty} onRemove={removeProperty} properties={get(formik, \"values.properties\")} handleItemChange={handlePropertiesChange} standardProperties={standardProperties} />\n\n                <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Main Media\n                  </Text>\n\n                  <ImageForm activatorTitle={`${get(formik, \"values.mainMedia\", [])?.length ? \"Edit\" : \"Add\"} Main Media`} onAdd={onAddMainMedia} />\n\n                </div>\n                <ImageGrid images={get(formik, \"values.mainMedia\", [])} onRemove={image => {\n                formik.setFieldValue(\"mainMedia\", []);\n                handleFormDirty();\n              }} setImages={values => {\n                formik.setFieldValue(\"mainMedia\", values);\n                handleFormDirty();\n              }} />\n\n\n                <div style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Additional Media\n                  </Text>\n\n                  <ImageForm onAdd={onAddAdditionalMedia} activatorTitle={`Add More Media`} />\n\n                </div>\n                <ImageGrid images={get(formik, \"values.additionalMedia\", [])} onRemove={removeAdditionalImages} setImages={setAdditionalMedia} />\n\n              </VerticalStack>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </Page>\n    </DndProvider>;\n}\n_s(ProductPage, \"1CzNfw2366eTpK2tC5EVymUk2v4=\", false, function () {\n  return [useLoaderData, useActionData, useFetcher, useFetcher, useFetcher, useFetcher, useNavigate, useSubmit, useFormik];\n});\n_c3 = ProductPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MDEditor$lazy\");\n$RefreshReg$(_c2, \"MDEditor\");\n$RefreshReg$(_c3, \"ProductPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Tables/ProductItems.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Tables/ProductItems.tsx\");\n  import.meta.hot.lastModified = \"1711100662281.3127\";\n}\n// REMIX HMR END\n\nimport { IndexTable, LegacyCard, VerticalStack, ButtonGroup, Button } from \"@shopify/polaris\";\nimport { get, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport EditIcon from \"../Icons/EditIcon\";\nimport { sortableContainer, sortableElement, arrayMove } from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport ItemMetafieldEditorForm from \"../Form/Product/ItemMetafieldEditorForm\";\nconst ProductItems = ({\n  items,\n  loading: isLoading,\n  onRemove,\n  onEdit,\n  fetcher,\n  handleItemChange,\n  itemDefinitions,\n  formik\n}) => {\n  _s();\n  const resourceName = {\n    singular: \"Item\",\n    plural: \"Items\"\n  };\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const handleSetItem = useCallback(value => {\n    setItem(value);\n  }, [item]);\n  useEffect(() => {\n    if (get(item, \"name\")) {\n      handleOpen();\n    }\n  }, [item]);\n  const SortableItem = sortableElement(({\n    id,\n    name,\n    ranking,\n    qty,\n    item\n  }, index) => <IndexTable.Row id={item?.id} key={`${index}-${item?.id}-${name}`} position={index}>\n        <IndexTable.Cell>\n          <ButtonGroup segmented>\n            <Button size=\"micro\">\n              <DragHandle />\n            </Button>\n\n            <Button size=\"micro\" onClick={() => {\n          onRemove(id);\n        }}>\n              <DeleteIcon />\n            </Button>\n\n            <Button size=\"micro\">\n              <DragHandle />\n            </Button>\n            \n            <Button size=\"micro\" onClick={() => {\n          handleSetItem({\n            id,\n            name,\n            qty,\n            ranking,\n            item\n          });\n        }}>\n              <EditIcon />\n            </Button>\n          </ButtonGroup>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{truncate(name)}</IndexTable.Cell>\n        <IndexTable.Cell>{item?.name}</IndexTable.Cell>\n\n        <IndexTable.Cell>{ranking}</IndexTable.Cell>\n        <IndexTable.Cell>{qty}</IndexTable.Cell>\n      </IndexTable.Row>);\n  const SortableContainer = sortableContainer(({\n    children\n  }) => {\n    return <IndexTable resourceName={resourceName} itemCount={items?.length || 0} selectable={false} headings={[{\n      title: \"\"\n    }, {\n      title: \"Name\"\n    }, {\n      title: \"Item definition\"\n    }, {\n      title: \"Ranking\"\n    }, {\n      title: \"Quantity\"\n    }]}>\n        {children}\n      </IndexTable>;\n  });\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    const _items = arrayMove(items, oldIndex, newIndex);\n    handleItemChange(_items);\n    formik.setFieldValue(\"items\", _items);\n  };\n  const {\n    active,\n    handleClose,\n    handleOpen\n  } = useHandleToggleModal();\n  return <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <ItemMetafieldEditorForm activatorTitle={\"\"} active={active} handleToggle={active ? handleClose : handleOpen} fetcher={fetcher} onAdd={onEdit} itemDefinitions={itemDefinitions} values={item} />\n      <VerticalStack>\n        <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n          {items?.map((value, index) => <SortableItem key={`item-${value?.id}-${value?.qty}-${new Date().toString()}`} index={index} item={_.get(value, \"item\")} name={value?.name} id={_.get(value, \"id\")} ranking={_.get(value, \"ranking\")} qty={_.get(value, \"qty\")} />)}\n        </SortableContainer>\n      </VerticalStack>\n    </LegacyCard>;\n};\n_s(ProductItems, \"UoXdpr4GYdADyOYgpcqNNJOOVIw=\", false, function () {\n  return [useHandleToggleModal];\n});\n_c = ProductItems;\nexport default ProductItems;\nvar _c;\n$RefreshReg$(_c, \"ProductItems\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Form/Product/ItemMetafieldEditorForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Form/Product/ItemMetafieldEditorForm.tsx\");\n  import.meta.hot.lastModified = \"1709719980704.8286\";\n}\n// REMIX HMR END\n\nimport { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport SelectField from \"../Fields/SelectField\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { numberGenerator } from \"~/utils\";\nconst ItemMetafieldEditorForm = ({\n  fetcher,\n  activatorTitle,\n  onAdd,\n  values,\n  active,\n  handleToggle\n}) => {\n  _s();\n  // const [active, setActive] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState(_.get(values, \"item.id\") ? [_.get(values, \"item.id\")] : []);\n  const [ranking, handleSetRanking] = useState(\"Key\");\n  const setRanking = useCallback(value => handleSetRanking(value), []);\n  const [name, handleSetName] = useState(_.get(values, \"name\", \"\"));\n  const setName = useCallback(value => handleSetName(value), [values]);\n  const [qty, setQty] = useState(_.get(values, \"qty\", \"\"));\n  const [errors, handleSetErrors] = useState({});\n  const setErrors = useCallback(value => handleSetErrors(value), []);\n  const [item, handleSetItem] = useState(_.get(values, \"item\"));\n  const setItem = useCallback(value => handleSetItem(value), []);\n  useEffect(() => {\n    if (_.get(values, \"name\")) {\n      setName(_.get(values, \"name\"));\n    }\n    if (_.get(values, \"qty\")) {\n      setQty(_.get(values, \"qty\"));\n    }\n    if (_.get(values, \"ranking\")) {\n      setRanking(_.get(values, \"ranking\"));\n    }\n    if (_.get(values, \"item\")) {\n      handleSetItem(_.get(values, \"item\"));\n    }\n  }, [values]);\n  const onSubmit = () => {\n    setErrors({});\n    if (!name) {\n      setErrors({\n        ...errors,\n        name: FIELD_REQUIRED\n      });\n    }\n    if (!ranking) {\n      setErrors({\n        ...errors,\n        ranking: FIELD_REQUIRED\n      });\n    }\n    if (!qty) {\n      setErrors({\n        ...errors,\n        qty: FIELD_REQUIRED\n      });\n    }\n    if (!item?.id) {\n      setErrors({\n        ...errors,\n        item: FIELD_REQUIRED\n      });\n    }\n    if (Object.keys(errors).length) {\n      return;\n    }\n    onAdd({\n      id: _.get(values, \"id\") || numberGenerator(),\n      name,\n      ranking,\n      qty,\n      meta: {},\n      item\n    });\n    handleToggle();\n  };\n  const handleRankingChange = useCallback(value => setRanking(value), []);\n  const handleNameChange = useCallback(newValue => setName(newValue), []);\n  const handleQtyChange = useCallback(newValue => setQty(newValue), []);\n  const raking = [{\n    label: \"Key\",\n    value: \"Key\"\n  }, {\n    label: \"Main\",\n    value: \"Main\"\n  }, {\n    label: \"Details\",\n    value: \"Details\"\n  }];\n  useEffect(() => {\n    if (!_.get(selectedOptions, \"[0]\")) return;\n    const option = _.find(_.get(fetcher.data, \"data.metaobjects.edges\"), item => {\n      return _.get(item, \"node.id\") === _.get(selectedOptions, \"[0]\");\n    });\n    const propertyBase = {\n      name: _.get(option, \"node.displayName\"),\n      id: _.get(option, \"node.id\"),\n      metaobject_type: _.get(option, \"node.id\")\n    };\n    setItem(propertyBase);\n  }, [selectedOptions]);\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), item => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\")\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data, loading]);\n  const onSearch = _.debounce(function (data) {\n    try {\n      search(data);\n    } catch (error) {\n      console.log(\"error :>> \", error);\n    }\n  }, 1000);\n  const search = useCallback(data => {\n    fetcher.load(`/app/search-metaobjects/item_definition?query=${_.get(data, \"query\")}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`);\n  }, []);\n  const activator = <div style={{\n    display: \"none\"\n  }}>\n      <Button size=\"micro\" onClick={handleToggle}>\n        {activatorTitle}\n      </Button>\n    </div>;\n  if (!values?.name) {\n    return null;\n  }\n  return <div>\n      <Modal activator={activator} open={active} onClose={handleToggle} title=\"Item\" primaryAction={{\n      content: \"Ok\",\n      onAction: onSubmit\n    }} secondaryActions={[{\n      content: \"Cancel\",\n      onAction: handleToggle\n    }]}>\n        <Modal.Section>\n          <Box>\n            <TextField label=\"Name\" value={name} onChange={handleNameChange} autoComplete=\"off\" error={errors.name} />\n            <Box padding=\"2\"></Box>\n            <Select label=\"Ranking\" options={raking} onChange={handleRankingChange} value={ranking} error={errors.ranking} />\n            <Box padding=\"2\"></Box>\n            <TextField label=\"Qty\" value={qty} type=\"number\" onChange={handleQtyChange} autoComplete=\"off\" error={errors.qty} />\n            <Box padding=\"2\"></Box>\n            <SelectField onSearch={onSearch} label={\"Select Item (Type First Letters to Search)\"} options={options} loading={loading} selectedOptions={selectedOptions} setSelectedOptions={setSelectedOptions} error={errors.item} placeholder={_.get(values, \"item.name\") || \"search..\"} />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>;\n};\n_s(ItemMetafieldEditorForm, \"TA/VYOodUjcTjhMbWIT/L0YnS9I=\");\n_c = ItemMetafieldEditorForm;\nexport default ItemMetafieldEditorForm;\nvar _c;\n$RefreshReg$(_c, \"ItemMetafieldEditorForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/graphql/products/productQuery.ts\"\n);\nimport.meta.hot.lastModified = \"1709719980720.3718\";\n}\n// REMIX HMR END\n\nexport const productQuery = async ({ graphql, id }) => {\n  const response = await graphql(query, { variables: { id } });\n  return response.json();\n};\n\nconst query = `\n\nquery Product($id: ID!) {\n    product(id: $id) {\n      title\n      id\n      descriptionHtml\n      description\n      properties: metafield(namespace: \"custom\", key: \"properties\") {\n        key\n        value\n      }\n      items: metafield(namespace: \"custom\", key: \"items\") {\n        key\n        value\n      }\n      productProperty: metafield(namespace: \"custom\", key: \"productproperty\") {\n        key\n        value\n      }\n      bom: metafield(namespace: \"custom\", key: \"bom\") {\n        key\n        value\n      }\n      mainMedia: metafield(namespace: \"custom\", key: \"mainmedia\") {\n        key\n        value\n      }\n      additionalmedia: metafield(namespace: \"custom\", key: \"additionalmedia\") {\n        key\n        value\n      }\n      productdescription: metafield(namespace: \"custom\", key: \"productdescription\") {\n        key\n        value\n      }\n    }\n  }\n  `;\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Form/Product/ItemMetafieldForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Form/Product/ItemMetafieldForm.tsx\");\n  import.meta.hot.lastModified = \"1709719980705.0195\";\n}\n// REMIX HMR END\n\nimport { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport SelectField from \"../Fields/SelectField\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { numberGenerator } from \"~/utils\";\nconst ItemMetafieldForm = ({\n  fetcher,\n  activatorTitle,\n  onAdd,\n  values\n}) => {\n  _s();\n  const [active, setActive] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState(_.get(values, \"item.id\") ? [_.get(values, \"item.id\")] : []);\n  const [ranking, handleSetRanking] = useState(\"Key\");\n  const setRanking = useCallback(value => handleSetRanking(value), []);\n  const [name, handleSetName] = useState(_.get(values, \"name\", \"\"));\n  const setName = useCallback(value => handleSetName(value), []);\n  const [qty, setQty] = useState(_.get(values, \"qty\", \"\"));\n  const [errors, handleSetErrors] = useState({});\n  const setErrors = useCallback(value => handleSetErrors(value), []);\n  const [item, handleSetItem] = useState(_.get(values, \"item\"));\n  const setItem = useCallback(value => handleSetItem(value), []);\n  const onSubmit = () => {\n    setErrors({});\n    if (!name) {\n      setErrors({\n        ...errors,\n        name: FIELD_REQUIRED\n      });\n    }\n    if (!ranking) {\n      setErrors({\n        ...errors,\n        ranking: FIELD_REQUIRED\n      });\n    }\n    if (!qty) {\n      setErrors({\n        ...errors,\n        qty: FIELD_REQUIRED\n      });\n    }\n    if (!item?.id) {\n      setErrors({\n        ...errors,\n        item: FIELD_REQUIRED\n      });\n    }\n    if (Object.keys(errors).length) {\n      return;\n    }\n    onAdd({\n      id: _.get(values, \"id\") || numberGenerator(),\n      name,\n      ranking,\n      qty,\n      meta: {},\n      item\n    });\n    handleChange();\n    setRanking(\"Key\");\n    setName(\"\");\n    setItem({});\n    setQty(\"\");\n  };\n  const handleRankingChange = useCallback(value => setRanking(value), []);\n  const handleNameChange = useCallback(newValue => setName(newValue), []);\n  const handleQtyChange = useCallback(newValue => setQty(newValue), []);\n  const raking = [{\n    label: \"Key\",\n    value: \"Key\"\n  }, {\n    label: \"Main\",\n    value: \"Main\"\n  }, {\n    label: \"Details\",\n    value: \"Details\"\n  }];\n  useEffect(() => {\n    if (!_.get(selectedOptions, \"[0]\")) return;\n    const option = _.find(_.get(fetcher.data, \"data.metaobjects.edges\"), item => {\n      return _.get(item, \"node.id\") === _.get(selectedOptions, \"[0]\");\n    });\n    const propertyBase = {\n      name: _.get(option, \"node.displayName\"),\n      id: _.get(option, \"node.id\"),\n      metaobject_type: _.get(option, \"node.id\")\n    };\n    setItem(propertyBase);\n  }, [selectedOptions]);\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), item => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\")\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data, loading]);\n  const onSearch = _.debounce(function (data) {\n    try {\n      search(data);\n    } catch (error) {\n      console.log('error :>> ', error);\n    }\n  }, 1000);\n  const search = useCallback(data => {\n    fetcher.load(`/app/search-metaobjects/item_definition?query=${_.get(data, \"query\")}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`);\n  }, []);\n  const handleChange = useCallback(() => setActive(!active), [active]);\n  const activator = <Button size=\"micro\" onClick={handleChange}>\n      {activatorTitle}\n    </Button>;\n  return <div>\n      <Modal activator={activator} open={active} onClose={handleChange} title=\"Item\" primaryAction={{\n      content: \"Ok\",\n      onAction: onSubmit\n    }} secondaryActions={[{\n      content: \"Cancel\",\n      onAction: handleChange\n    }]}>\n        <Modal.Section>\n          <Box>\n            <TextField label=\"Name\" value={name} onChange={handleNameChange} autoComplete=\"off\" error={errors.name} />\n            <Box padding=\"2\"></Box>\n            <Select label=\"Ranking\" options={raking} onChange={handleRankingChange} value={ranking} error={errors.ranking} />\n            <Box padding=\"2\"></Box>\n            <TextField label=\"Qty\" value={qty} type=\"number\" onChange={handleQtyChange} autoComplete=\"off\" error={errors.qty} />\n            <Box padding=\"2\"></Box>\n            <SelectField onSearch={onSearch} label={\"Select Item (Type First Letters to Search)\"} options={options} loading={loading} selectedOptions={selectedOptions} setSelectedOptions={setSelectedOptions} error={errors.item} placeholder={_.get(values, \"item.name\") || \"search..\"} />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>;\n};\n_s(ItemMetafieldForm, \"0iHgjDMa5mBPD35LhBuSu1GBBlM=\");\n_c = ItemMetafieldForm;\nexport default ItemMetafieldForm;\nvar _c;\n$RefreshReg$(_c, \"ItemMetafieldForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/graphql/metafields/metafieldSetMutation.ts\"\n);\nimport.meta.hot.lastModified = \"1709719980717.6897\";\n}\n// REMIX HMR END\n\nexport const metafieldSetMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, {\n    variables,\n  });\n  return response.json();\n};\nexport const createVariables = ({\n  ownerId,\n  properties,\n  items,\n  additionalmedia,\n  mainmedia,\n  productdescription,\n}) => {\n  return {\n    metafields: [\n      {\n        namespace: \"custom\",\n        key: \"productdescription\",\n        type: \"json\",\n        value: productdescription,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"properties\",\n        type: \"json\",\n        value: properties,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"items\",\n        type: \"json\",\n        value: items,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"additionalmedia\",\n        type: \"list.url\",\n        value: additionalmedia,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"mainmedia\",\n        type: \"url\",\n        value: mainmedia,\n        ownerId,\n      },\n    ],\n  };\n};\n\nconst query = `\nmutation MetafieldsSet($metafields: [MetafieldsSetInput!]!) {\n  metafieldsSet(metafields: $metafields) {\n    metafields {\n      id\n      namespace\n      key\n      value\n      __typename\n    }\n    userErrors {\n      field\n      message\n      elementIndex\n      __typename\n    }\n    __typename\n  }\n}\n\n`;\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/graphql/products/productUpdate.ts\"\n);\nimport.meta.hot.lastModified = \"1709719980720.7405\";\n}\n// REMIX HMR END\n\nexport const productSaveUpdateMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, { variables });\n  return response.json();\n};\n\nexport const createUpdateProductVariables = ({\n  productId,\n  title,\n  descriptionHtml,\n}) => {\n  return {\n    shouldQueryMarkets: true,\n    shouldQueryMarketsPro: false,\n    shouldQueryB2bCatalogs: true,\n    shouldMutateInventory: true,\n    includeProductPublicationStatus: false,\n\n    product: {\n      title,\n      descriptionHtml,\n      id: productId,\n    },\n    productId,\n    skipProductUpdate: false,\n    shouldBulkUpdateVariants: true,\n    publicationsToPublish: [],\n    publicationsToUnpublish: [],\n    shouldPublish: false,\n    shouldUnpublish: false,\n    inventoryItemAdjustments: [],\n  };\n};\n\nconst query = `\n\n\nmutation ProductSaveUpdate($product: ProductInput!, $productId: ID!, $publicationsToPublish: [PublicationInput!]!, $publicationsToUnpublish: [PublicationInput!]!, $shouldPublish: Boolean!, $shouldUnpublish: Boolean!,  $shouldQueryMarkets: Boolean = false, $shouldQueryMarketsPro: Boolean = false, $shouldQueryB2bCatalogs: Boolean = false, $variantsToBulkUpdate: [ProductVariantsBulkInput!] = [], $shouldBulkUpdateVariants: Boolean!, $skipProductUpdate: Boolean!) {\n  productUpdate(input: $product) @skip(if: $skipProductUpdate) {\n    product {\n      id\n      ...OrganizationCardProductDetails\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n  productVariantsBulkUpdate(\n    productId: $productId\n    variants: $variantsToBulkUpdate\n  ) @include(if: $shouldBulkUpdateVariants) {\n    productVariants {\n      ...VariantsCardVariant\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n  publishablePublish(id: $productId, input: $publicationsToPublish) @include(if: $shouldPublish) {\n    publishable @skip(if: $shouldUnpublish) {\n      ... on Product {\n        id\n        onlineStoreUrl\n        resourceMarketPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: MARKET\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarkets) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceCountryPublications: resourcePublicationsV2(\n          first: 250\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarketsPro) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceMerchantOfRecordPublications: resourcePublicationsV2(\n          first: 1\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarketsPro) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceB2bCatalogPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: COMPANY_LOCATION\n          onlyPublished: false\n        ) @include(if: $shouldQueryB2bCatalogs) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n  publishableUnpublish(id: $productId, input: $publicationsToUnpublish) @include(if: $shouldUnpublish) {\n    publishable {\n      ... on Product {\n        id\n        onlineStoreUrl\n        resourceMarketPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: MARKET\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarkets) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceCountryPublications: resourcePublicationsV2(\n          first: 250\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarketsPro) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceB2bCatalogPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: COMPANY_LOCATION\n          onlyPublished: false\n        ) @include(if: $shouldQueryB2bCatalogs) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrganizationCardProductDetails on Product {\n  tags\n  vendor\n  smartCollections: collections(first: 250, query: \"collection_type:smart\") {\n    ...OrganizationCardCollectionConnection\n    __typename\n  }\n  customCollections: collections(first: 250, query: \"collection_type:custom\") {\n    ...OrganizationCardCollectionConnection\n    __typename\n  }\n  __typename\n}\n\nfragment OrganizationCardCollectionConnection on CollectionConnection {\n  edges {\n    node {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment VariantsCardVariant on ProductVariant {\n  id\n  barcode\n  price\n  compareAtPrice\n  requiresShipping\n  inventoryQuantity\n  position\n  sku\n  taxable\n  weight\n  weightUnit\n  fulfillmentService {\n    serviceName\n    handle\n    id\n    __typename\n  }\n  inventoryItem {\n    id\n    locationsCount\n    __typename\n  }\n  ...InventoryItemVariantWithFirstInventoryLevel\n  inventoryPolicy\n  image {\n    id\n    src: url\n    altText\n    __typename\n  }\n  selectedOptions {\n    name\n    value\n    __typename\n  }\n  taxCode\n  __typename\n}\n\nfragment InventoryItemVariantWithFirstInventoryLevel on ProductVariant {\n  inventoryItem {\n    id\n    tracked\n    trackedEditable {\n      locked\n      reason\n      __typename\n    }\n    unitCost {\n      amount\n      currencyCode\n      __typename\n    }\n    countryCodeOfOrigin\n    provinceCodeOfOrigin\n    harmonizedSystemCode\n    __typename\n  }\n  __typename\n}`", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Form/Product/DuplicateForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Form/Product/DuplicateForm.tsx\");\n  import.meta.hot.lastModified = \"1709719980703.4841\";\n}\n// REMIX HMR END\n\nimport { Box, Button, InlineError, Modal, Text, TextField } from \"@shopify/polaris\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport * as _ from \"lodash\";\nimport { useActionData, useLocation, useSubmit } from \"@remix-run/react\";\nconst DuplicateForm = ({\n  modalTitle,\n  product,\n  activatorRef\n}) => {\n  _s();\n  const actionErrors = useActionData()?.errors || {};\n  const location = useLocation();\n  const [title, setTitle] = useState(`Copy of - ${_.get(product, \"title\")}`);\n  const [errors, setErrors] = useState({});\n  const [laoding, setLoading] = useState(false);\n  const handleLoadingChange = useCallback(value => setLoading(value), []);\n  const handleValueChange = useCallback(value => setTitle(value), []);\n  const handleSetErrors = useCallback(value => setErrors(value), []);\n  const [active, setActive] = useState(false);\n  const submit = useSubmit();\n  const handleOpen = useCallback(() => setActive(true), []);\n  const handleClose = useCallback(() => {\n    setActive(false);\n  }, []);\n  useEffect(() => {\n    setLoading(false);\n  }, [active]);\n  useEffect(() => {\n    handleClose();\n  }, [location]);\n  const handleSubmit = async () => {\n    handleSetErrors({});\n    handleLoadingChange(true);\n    if (!title) {\n      return handleSetErrors({\n        title: FIELD_REQUIRED\n      });\n    }\n    const data = {\n      title,\n      productId: _.get(product, \"id\")\n    };\n    await submit(data, {\n      method: \"post\",\n      action: \"/app/product/duplicate\"\n    });\n  };\n  return <div>\n      <div style={{\n      height: 0,\n      display: \"none\"\n    }} ref={activatorRef}>\n        <Button onClick={handleOpen}>~</Button>\n      </div>\n      <Modal small open={active} onClose={handleClose} title={modalTitle} primaryAction={{\n      content: \"Ok\",\n      onAction: handleSubmit,\n      loading: laoding\n    }} secondaryActions={[{\n      content: \"Cancel\",\n      onAction: handleClose\n    }]}>\n        <Modal.Section>\n          <Box>\n            {Object.keys(actionErrors).length ? <InlineError message={JSON.stringify(actionErrors)} fieldID=\"errors\" /> : null}\n            <TextField label=\"Title\" value={title} onChange={handleValueChange} autoComplete=\"off\" error={errors.title} />\n            <Box padding=\"2\"></Box>\n\n            <Text variant=\"bodyLg\" as=\"p\">\n              All product details will be copied from the original product.\n            </Text>\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>;\n};\n_s(DuplicateForm, \"MkuG4tOhx6+un0bQSXcymIWnx1Y=\", false, function () {\n  return [useActionData, useLocation, useSubmit];\n});\n_c = DuplicateForm;\nexport default DuplicateForm;\nvar _c;\n$RefreshReg$(_c, \"DuplicateForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n", "import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing \u201Cwhat changed\u201D. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n", "/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n", "// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n", "export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n", "import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n", "import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n", "import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n", "import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n", "import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n", "import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n", "// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n", "/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n", "// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n", "import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n", "import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n", "import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n", "export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n", "let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n", "import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n", "import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n", "import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n", "// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n", "import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n", "import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n", "export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n", "export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n", "import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n", "import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n", "import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n", "export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n", "import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n", "import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n", "import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n"],
  "mappings": "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",
  "names": ["init_esm", "_", "import_react", "init_esm", "import_react", "_", "init_esm", "item", "import_jsx_dev_runtime", "_s", "item", "_c", "init_esm", "import_react", "_", "import_jsx_dev_runtime", "_s", "item", "_c", "init_esm", "import_react", "_", "import_jsx_dev_runtime", "_s", "_c", "import_react", "DndContext", "createContext", "dragDropManager", "undefined", "randomString", "subscribe", "invariant", "condition", "format", "args", "isProduction", "undefined", "Error", "error", "argIndex", "replace", "name", "framesToPop", "process", "get", "obj", "path", "defaultValue", "split", "reduce", "a", "c", "without", "items", "item", "filter", "i", "isObject", "input", "xor", "itemsA", "itemsB", "map", "Map", "insertItem", "item", "set", "has", "get", "forEach", "result", "count", "key", "push", "intersection", "filter", "t", "indexOf", "INIT_COORDS", "BEGIN_DRAG", "PUBLISH_DRAG_SOURCE", "HOVER", "DROP", "END_DRAG", "setClientOffset", "clientOffset", "sourceClientOffset", "type", "INIT_COORDS", "payload", "ResetCoordinatesAction", "type", "INIT_COORDS", "payload", "clientOffset", "sourceClientOffset", "createBeginDrag", "manager", "beginDrag", "sourceIds", "options", "publishSource", "getSourceClientOffset", "monitor", "getMonitor", "registry", "getRegistry", "dispatch", "setClientOffset", "verifyInvariants", "sourceId", "getDraggableSource", "Error", "verifyGetSourceClientOffsetIsFunction", "source", "getSource", "item", "undefined", "verifyItemIsObject", "pinSource", "itemType", "getSourceType", "BEGIN_DRAG", "isSourcePublic", "invariant", "isDragging", "forEach", "isObject", "i", "length", "canDragSource", "_defineProperty", "createDrop", "manager", "drop", "options", "monitor", "getMonitor", "registry", "getRegistry", "verifyInvariants", "targetIds", "getDroppableTargets", "forEach", "targetId", "index", "dropResult", "determineDropResult", "action", "type", "DROP", "payload", "dispatch", "invariant", "isDragging", "didDrop", "target", "getTarget", "undefined", "verifyDropResultType", "getDropResult", "isObject", "getTargetIds", "filter", "canDropOnTarget", "reverse", "createEndDrag", "manager", "endDrag", "monitor", "getMonitor", "registry", "getRegistry", "verifyIsDragging", "sourceId", "getSourceId", "source", "getSource", "unpinSource", "type", "END_DRAG", "invariant", "isDragging", "matchesType", "targetType", "draggedItemType", "Array", "isArray", "some", "t", "createHover", "manager", "hover", "targetIdsArg", "clientOffset", "verifyTargetIdsIsArray", "targetIds", "slice", "monitor", "getMonitor", "registry", "getRegistry", "draggedItemType", "getItemType", "removeNonMatchingTargetIds", "checkInvariants", "hoverAllTargets", "type", "HOVER", "payload", "invariant", "Array", "isArray", "isDragging", "didDrop", "i", "length", "targetId", "lastIndexOf", "target", "getTarget", "targetType", "getTargetType", "matchesType", "splice", "forEach", "createPublishDragSource", "manager", "publishDragSource", "monitor", "getMonitor", "isDragging", "type", "PUBLISH_DRAG_SOURCE", "createDragDropActions", "manager", "beginDrag", "createBeginDrag", "publishDragSource", "createPublishDragSource", "hover", "createHover", "drop", "createDrop", "endDrag", "createEndDrag", "DragDropManagerImpl", "receiveBackend", "backend", "getMonitor", "monitor", "getBackend", "getRegistry", "registry", "getActions", "manager", "dispatch", "store", "bindActionCreator", "actionCreator", "args", "action", "apply", "actions", "createDragDropActions", "Object", "keys", "reduce", "boundActions", "key", "isSetUp", "handleRefCountChange", "shouldSetUp", "getState", "refCount", "setup", "teardown", "subscribe", "add", "a", "b", "x", "y", "subtract", "getSourceClientOffset", "state", "clientOffset", "initialClientOffset", "initialSourceClientOffset", "getDifferenceFromInitialOffset", "NONE", "ALL", "__IS_NONE__", "__IS_ALL__", "areDirty", "dirtyIds", "handlerIds", "commonIds", "intersection", "length", "DragDropMonitorImpl", "subscribeToStateChange", "listener", "options", "handlerIds", "invariant", "Array", "isArray", "prevStateId", "store", "getState", "stateId", "handleChange", "state", "currentStateId", "canSkipListener", "areDirty", "dirtyHandlerIds", "subscribe", "subscribeToOffsetChange", "previousState", "dragOffset", "nextState", "canDragSource", "sourceId", "source", "registry", "getSource", "isDragging", "canDrag", "canDropOnTarget", "targetId", "target", "getTarget", "didDrop", "targetType", "getTargetType", "draggedItemType", "getItemType", "matchesType", "canDrop", "Boolean", "isDraggingSource", "isSourcePublic", "sourceType", "getSourceType", "isOverTarget", "shallow", "targetIds", "getTargetIds", "length", "index", "indexOf", "dragOperation", "itemType", "getItem", "item", "getSourceId", "getDropResult", "dropResult", "getInitialClientOffset", "initialClientOffset", "getInitialSourceClientOffset", "initialSourceClientOffset", "getClientOffset", "clientOffset", "getSourceClientOffset", "getDifferenceFromInitialOffset", "scope", "global", "self", "BrowserMutationObserver", "MutationObserver", "WebKitMutationObserver", "makeRequestCallFromTimer", "callback", "requestCall", "timeoutHandle", "setTimeout", "handleTimer", "intervalHandle", "setInterval", "clearTimeout", "clearInterval", "makeRequestCallFromMutationObserver", "toggle", "observer", "node", "document", "createTextNode", "observe", "characterData", "data", "makeRequestCall", "AsapQueue", "enqueueTask", "task", "queue", "q", "requestFlush", "length", "flushing", "pendingErrors", "index", "capacity", "flush", "currentIndex", "call", "scan", "newLength", "registerPendingError", "err", "push", "requestErrorThrow", "makeRequestCall", "makeRequestCallFromTimer", "shift", "RawTask", "call", "task", "error", "onError", "release", "TaskFactory", "create", "task", "tasks", "freeTasks", "t", "length", "pop", "RawTask", "onError", "asapQueue", "AsapQueue", "taskFactory", "TaskFactory", "registerPendingError", "asap", "task", "enqueueTask", "create", "ADD_SOURCE", "ADD_TARGET", "REMOVE_SOURCE", "REMOVE_TARGET", "addSource", "sourceId", "type", "payload", "addTarget", "targetId", "removeSource", "removeTarget", "validateSourceContract", "source", "invariant", "canDrag", "beginDrag", "endDrag", "validateTargetContract", "target", "canDrop", "hover", "drop", "validateType", "type", "allowArray", "Array", "isArray", "forEach", "t", "HandlerRole", "SOURCE", "TARGET", "nextUniqueId", "getNextUniqueId", "getNextHandlerId", "role", "id", "getNextUniqueId", "toString", "HandlerRole", "SOURCE", "TARGET", "Error", "parseRoleFromHandlerId", "handlerId", "mapContainsValue", "map", "searchValue", "entries", "isDone", "done", "value", "next", "HandlerRegistryImpl", "addSource", "type", "source", "validateType", "validateSourceContract", "sourceId", "addHandler", "store", "dispatch", "addTarget", "target", "validateTargetContract", "targetId", "containsHandler", "handler", "dragSources", "dropTargets", "getSource", "includePinned", "invariant", "isSourceId", "isPinned", "pinnedSourceId", "pinnedSource", "get", "getTarget", "isTargetId", "getSourceType", "types", "getTargetType", "removeSource", "asap", "delete", "removeTarget", "pinSource", "unpinSource", "set", "Map", "strictEquality", "a", "b", "areCoordsEqual", "offsetA", "offsetB", "x", "y", "areArraysEqual", "isEqual", "length", "i", "reduce", "_state", "NONE", "action", "type", "HOVER", "ADD_SOURCE", "ADD_TARGET", "REMOVE_TARGET", "REMOVE_SOURCE", "BEGIN_DRAG", "PUBLISH_DRAG_SOURCE", "END_DRAG", "DROP", "ALL", "targetIds", "prevTargetIds", "payload", "result", "xor", "didChange", "length", "areArraysEqual", "prevInnermostTargetId", "innermostTargetId", "push", "_defineProperty", "initialState", "initialSourceClientOffset", "initialClientOffset", "clientOffset", "reduce", "state", "action", "payload", "type", "INIT_COORDS", "BEGIN_DRAG", "sourceClientOffset", "HOVER", "areCoordsEqual", "_objectSpread", "END_DRAG", "DROP", "_defineProperty", "initialState", "itemType", "item", "sourceId", "targetIds", "dropResult", "didDrop", "isSourcePublic", "reduce", "state", "action", "payload", "type", "BEGIN_DRAG", "_objectSpread", "PUBLISH_DRAG_SOURCE", "HOVER", "REMOVE_TARGET", "indexOf", "targetId", "without", "DROP", "END_DRAG", "reduce", "state", "action", "type", "ADD_SOURCE", "ADD_TARGET", "REMOVE_SOURCE", "REMOVE_TARGET", "reduce", "state", "_defineProperty", "reduce", "state", "action", "dirtyHandlerIds", "type", "payload", "_objectSpread", "prevTargetIds", "get", "dragOffset", "refCount", "dragOperation", "stateId", "createDragDropManager", "backendFactory", "globalContext", "undefined", "backendOptions", "debugMode", "store", "makeStoreInstance", "monitor", "DragDropMonitorImpl", "HandlerRegistryImpl", "manager", "DragDropManagerImpl", "backend", "receiveBackend", "reduxDevTools", "window", "__REDUX_DEVTOOLS_EXTENSION__", "createStore", "reduce", "name", "instanceId", "import_react", "refCount", "INSTANCE_SYM", "Symbol", "for", "DndProvider", "memo", "children", "props", "manager", "isGlobalInstance", "getDndContextValue", "useEffect", "context", "getGlobalContext", "_jsx", "DndContext", "Provider", "value", "getDndContextValue", "props", "manager", "dragDropManager", "createSingletonDndContext", "backend", "context", "options", "debugMode", "isGlobalInstance", "getGlobalContext", "ctx", "INSTANCE_SYM", "createDragDropManager", "global", "window", "memoize", "fn", "result", "memoized", "without", "items", "item", "filter", "i", "union", "itemsA", "itemsB", "set", "Set", "insertItem", "add", "forEach", "key", "push", "EnterLeaveCounter", "enter", "enteringNode", "previousLength", "entered", "length", "isNodeEntered", "node", "isNodeInDocument", "contains", "union", "filter", "leave", "leavingNode", "without", "reset", "NativeDragSource", "initializeExposedProperties", "Object", "keys", "config", "exposeProperties", "forEach", "property", "defineProperty", "item", "configurable", "enumerable", "get", "console", "warn", "loadDataTransfer", "dataTransfer", "newProperties", "propertyFn", "value", "matchesTypes", "defineProperties", "canDrag", "beginDrag", "isDragging", "monitor", "handle", "getSourceId", "endDrag", "FILE", "URL", "TEXT", "HTML", "getDataFromDataTransfer", "dataTransfer", "typesToTry", "defaultValue", "result", "reduce", "resultSoFar", "typeToTry", "getData", "nativeTypesConfig", "FILE", "exposeProperties", "files", "dataTransfer", "Array", "prototype", "slice", "call", "items", "matchesTypes", "HTML", "html", "getDataFromDataTransfer", "URL", "urls", "split", "TEXT", "text", "createNativeDragSource", "type", "dataTransfer", "config", "nativeTypesConfig", "Error", "result", "NativeDragSource", "loadDataTransfer", "matchNativeItemType", "dataTransferTypes", "Array", "prototype", "slice", "call", "types", "Object", "keys", "filter", "nativeItemType", "typeConfig", "matchesTypes", "some", "t", "indexOf", "isFirefox", "memoize", "test", "navigator", "userAgent", "isSafari", "Boolean", "window", "safari", "MonotonicInterpolant", "interpolate", "x", "xs", "ys", "c1s", "c2s", "c3s", "i", "length", "low", "high", "mid", "Math", "floor", "xHere", "max", "diff", "diffSq", "indexes", "push", "sort", "a", "b", "dys", "dxs", "ms", "dx", "dy", "m2", "mNext", "dxNext", "common", "m", "c1", "invDx", "ELEMENT_NODE", "getNodeClientOffset", "node", "el", "nodeType", "parentElement", "top", "left", "getBoundingClientRect", "x", "y", "getEventClientOffset", "e", "clientX", "clientY", "isImageNode", "document", "nodeName", "isFirefox", "documentElement", "contains", "getDragPreviewSize", "isImage", "dragPreview", "sourceWidth", "sourceHeight", "dragPreviewWidth", "width", "dragPreviewHeight", "height", "isSafari", "window", "devicePixelRatio", "getDragPreviewOffset", "sourceNode", "clientOffset", "anchorPoint", "offsetPoint", "dragPreviewNode", "dragPreviewNodeOffsetFromClient", "offsetFromDragPreview", "offsetWidth", "offsetHeight", "anchorX", "anchorY", "calculateYOffset", "interpolantY", "MonotonicInterpolant", "interpolate", "calculateXOffset", "interpolantX", "offsetX", "offsetY", "isManualOffsetX", "isManualOffsetY", "OptionsReader", "window", "globalContext", "undefined", "document", "rootElement", "optionsArgs", "options", "ownerDocument", "_defineProperty", "HTML5BackendImpl", "profile", "sourcePreviewNodes", "size", "sourcePreviewNodeOptions", "sourceNodeOptions", "sourceNodes", "dragStartSourceIds", "length", "dropTargetIds", "dragEnterTargetIds", "dragOverTargetIds", "window", "options", "document", "rootElement", "setup", "root", "undefined", "__isReactDndBackendSetUp", "Error", "addEventListeners", "teardown", "removeEventListeners", "clearCurrentDragSourceNode", "asyncEndDragFrameId", "cancelAnimationFrame", "connectDragPreview", "sourceId", "node", "set", "delete", "connectDragSource", "handleDragStart", "e", "handleSelectStart", "setAttribute", "addEventListener", "removeEventListener", "connectDropTarget", "targetId", "handleDragEnter", "handleDragOver", "handleDrop", "target", "handleTopDragStart", "handleTopDragStartCapture", "handleTopDragEndCapture", "handleTopDragEnter", "handleTopDragEnterCapture", "handleTopDragLeaveCapture", "handleTopDragOver", "handleTopDragOverCapture", "handleTopDrop", "handleTopDropCapture", "getCurrentSourceNodeOptions", "monitor", "getSourceId", "get", "_objectSpread", "dropEffect", "altKeyPressed", "getCurrentDropEffect", "isDraggingNativeItem", "getCurrentSourcePreviewNodeOptions", "anchorX", "anchorY", "captureDraggingState", "itemType", "getItemType", "Object", "keys", "NativeTypes", "some", "key", "beginDragNativeItem", "type", "dataTransfer", "currentNativeSource", "createNativeDragSource", "currentNativeHandle", "registry", "addSource", "actions", "beginDrag", "setCurrentDragSourceNode", "currentDragSourceNode", "MOUSE_MOVE_TIMEOUT", "mouseMoveTimeoutTimer", "setTimeout", "endDragIfSourceWasRemovedFromDOM", "clearTimeout", "defaultPrevented", "unshift", "_e", "manager", "globalContext", "Map", "lastClientOffset", "hoverRafId", "getSourceClientOffset", "source", "getNodeClientOffset", "endDragNativeItem", "endDrag", "removeSource", "isNodeInDocument", "Boolean", "body", "contains", "isDragging", "cancelHover", "scheduleHover", "requestAnimationFrame", "hover", "clientOffset", "getEventClientOffset", "publishSource", "nativeType", "matchNativeItemType", "setDragImage", "sourceNode", "dragPreview", "offsetX", "offsetY", "anchorPoint", "offsetPoint", "dragPreviewOffset", "getDragPreviewOffset", "x", "y", "setData", "err", "publishDragSource", "types", "hasAttribute", "preventDefault", "loadDataTransfer", "isFirstEnter", "enterLeaveCounter", "enter", "altKey", "canDrop", "canDropOnTarget", "isLastLeave", "leave", "reset", "drop", "dragDrop", "tagName", "isContentEditable", "OptionsReader", "getActions", "getMonitor", "getRegistry", "EnterLeaveCounter", "HTML5Backend", "createBackend", "manager", "context", "options", "HTML5BackendImpl", "import_jsx_dev_runtime", "_s", "_c", "_c2", "_s", "_a", "_c3", "_c", "_c2"]
}
