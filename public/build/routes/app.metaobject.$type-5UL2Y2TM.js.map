{
  "version": 3,
  "sources": ["../../../app/routes/app.metaobject.$type.tsx", "../../../app/components/Tables/MetaObjects.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.metaobject.$type.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.metaobject.$type.tsx\");\n  import.meta.hot.lastModified = \"1713578110847.4268\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { Box, Card, Layout, Page, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Button } from \"@shopify/polaris\";\nimport MetaObjects from \"~/components/Tables/MetaObjects\";\nimport { getMetaobjects } from \"~/graphql/metaobjects/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseDefinitionType } from \"~/utils\";\nexport async function loader({\n  request,\n  params\n}) {\n  const {\n    admin,\n    session\n  } = await authenticate.admin(request);\n  const query = new URL(request.url);\n  let after = query.searchParams?.get(\"after\") || \"\";\n  let before = query.searchParams?.get(\"before\") || \"\";\n  let rest = {};\n  if (before) {\n    rest[\"before\"] = before;\n  } else if (after) {\n    rest[\"after\"] = after;\n  }\n  const metaobjects = await getMetaobjects({\n    graphql: admin.graphql,\n    type: params.type,\n    ...rest\n  });\n  return json({\n    metaobjects,\n    definitionType: parseDefinitionType(params.type),\n    type: params.type,\n    graphql: admin.graphql\n  });\n}\nexport default function MetaobjectsPage() {\n  _s();\n  const {\n    metaobjects,\n    definitionType,\n    type,\n    graphql\n  } = useLoaderData();\n  const [active, setActive] = useState(true);\n  const [edges, setEdges] = useState(_.get(metaobjects, \"data.metaobjects.edges\", []));\n  const [pageInfo, setPageInfo] = useState(_.get(metaobjects, \"data.metaobjects.pageInfo\", {}));\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n  const onSearch = async data => {\n    fetcher.load(`/app/search-metaobjects/${type}?query=${_.get(data, \"query\")}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`);\n  };\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.metaobjects.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.metaobjects.pageInfo\", {}));\n    }\n  }, [fetcher]);\n  const toggleActive = useCallback(() => setActive(active => !active), []);\n  const handleExportedAction = useCallback(() => console.log(\"Exported action\"), []);\n  const activator = <Button onClick={toggleActive} disclosure>\n      More actions\n    </Button>;\n  return <Page backAction={{\n    content: \"Products\",\n    url: \"/app/metaobjects\"\n  }} title={definitionType} subtitle=\"Definition\" compactTitle>\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <VerticalStack gap=\"3\">\n              <MetaObjects edges={edges} pageInfo={pageInfo} type={type} onSearch={onSearch} loading={loading} />\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>;\n}\n_s(MetaobjectsPage, \"Y/1+eKJU51v7TDOdbwnvVLaZTfU=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c = MetaobjectsPage;\nfunction Code({\n  children\n}) {\n  return <Box as=\"span\" padding=\"025\" paddingInlineStart=\"1\" paddingInlineEnd=\"1\" background=\"bg-subdued\" borderWidth=\"1\" borderColor=\"border\" borderRadius=\"1\">\n      <code>{children}</code>\n    </Box>;\n}\n_c2 = Code;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetaobjectsPage\");\n$RefreshReg$(_c2, \"Code\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Tables/MetaObjects.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Tables/MetaObjects.tsx\");\n  import.meta.hot.lastModified = \"1713578110838.4685\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport { IndexTable, LegacyCard, Badge, Pagination, VerticalStack, HorizontalGrid, IndexFilters, useSetIndexFiltersMode } from \"@shopify/polaris\";\nimport { dateFormatter, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\nconst MetaObjects = ({\n  edges,\n  pageInfo,\n  type,\n  onSearch,\n  loading: isLoading\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const resourceName = {\n    singular: \"metaobject\",\n    plural: \"metaobjects\"\n  };\n  const [loading, setLoading] = useState(false);\n  const handleNavigation = next => {\n    let rest = {};\n    setLoading(true);\n    if (next) {\n      rest[\"after\"] = pageInfo.endCursor;\n    } else {\n      rest[\"before\"] = pageInfo.startCursor;\n    }\n    if (queryValue !== undefined && queryValue !== null) {\n      rest[\"query\"] = queryValue;\n    }\n    onSearch(rest);\n  };\n  const [queryValue, setQueryValue] = useState(null);\n  const handleFiltersQueryChange = useCallback(value => setQueryValue(value), []);\n  useEffect(() => {\n    if (queryValue !== undefined && queryValue !== null) {\n      onSearch({\n        query: queryValue\n      });\n    }\n  }, [queryValue]);\n  const [selected] = useState(0);\n  const onHandleCancel = () => {};\n  const {\n    mode,\n    setMode\n  } = useSetIndexFiltersMode();\n  useEffect(() => {\n    setLoading(false);\n  }, [edges]);\n  const rowMarkup = edges.map(({\n    node: {\n      id,\n      definition,\n      capabilities,\n      displayName,\n      handle,\n      type,\n      updatedAt\n    }\n  }, index) => <IndexTable.Row onNavigation={() => {}} id={id} key={id} position={index}>\n        <IndexTable.Cell>\n          {/* <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"span\">\n            <Link to={`qrcodes/${{ id }}`}>{truncate(displayName)}</Link>\n           </Text> */}\n          {truncate(displayName)}\n        </IndexTable.Cell>\n        <IndexTable.Cell>{definition.name}</IndexTable.Cell>\n        <IndexTable.Cell>{definition.access.storefront}</IndexTable.Cell>\n\n        <IndexTable.Cell>\n          <Badge size=\"small\">{capabilities.publishable.status}</Badge>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{dateFormatter(updatedAt)}</IndexTable.Cell>\n      </IndexTable.Row>);\n  return <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <VerticalStack>\n        <IndexFilters selected={selected} filters={[]} onClearAll={() => {}} cancelAction={{\n        onAction: onHandleCancel,\n        disabled: false,\n        loading: false\n      }} tabs={[]} queryValue={queryValue || \"\"} queryPlaceholder=\"Search ...\" onQueryChange={handleFiltersQueryChange} onQueryClear={() => {\n        setQueryValue(\"\");\n      }} mode={mode} setMode={setMode} hideFilters />\n        <IndexTable resourceName={resourceName} itemCount={edges.length} selectable={false} headings={[{\n        title: \"Display Name\"\n      }, {\n        title: \"Definition\"\n      }, {\n        title: \"Storefront access\"\n      }, {\n        title: \"Status\"\n      }, {\n        title: \"Last updated\"\n      }]}>\n          {rowMarkup}\n        </IndexTable>\n        <HorizontalGrid>\n          <div className=\"grid-container\">\n            <div className=\"pagination-wrapper\" style={{\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"center\",\n            padding: 20\n          }}>\n              <Pagination hasPrevious={pageInfo.hasPreviousPage} onPrevious={() => {\n              handleNavigation(false);\n            }} hasNext={pageInfo.hasNextPage} onNext={() => {\n              handleNavigation(true);\n            }} />\n            </div>\n          </div>\n        </HorizontalGrid>\n      </VerticalStack>\n    </LegacyCard>;\n};\n_s(MetaObjects, \"SnZl4qOGazheYiX33WnSXPTvQN0=\", false, function () {\n  return [useNavigate, useSetIndexFiltersMode];\n});\n_c = MetaObjects;\nexport default MetaObjects;\nvar _c;\n$RefreshReg$(_c, \"MetaObjects\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AASA,kBAAqB;AACrB;AACAA;AACA,QAAmB;AACnB,IAAAC,gBAAiD;AACjDD;;;ACdA;AASA;AACAE;AAGA,IAAAC,gBAAiD;AAyDzC;AAjFR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4CAA8C,EAAE;AAAA,EACzF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuC;AACvC,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AACX,MAAM;AACJ,KAAG;AACH,QAAM,WAAW,YAAY;AAC7B,QAAM,eAAe;AAAA,IACnB,UAAU;AAAA,IACV,QAAQ;AAAA,EACV;AACA,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAC5C,QAAM,mBAAmB,UAAQ;AAC/B,QAAI,OAAO,CAAC;AACZ,eAAW,IAAI;AACf,QAAI,MAAM;AACR,WAAK,OAAO,IAAI,SAAS;AAAA,IAC3B,OAAO;AACL,WAAK,QAAQ,IAAI,SAAS;AAAA,IAC5B;AACA,QAAI,eAAe,UAAa,eAAe,MAAM;AACnD,WAAK,OAAO,IAAI;AAAA,IAClB;AACA,aAAS,IAAI;AAAA,EACf;AACA,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,IAAI;AACjD,QAAM,+BAA2B,2BAAY,WAAS,cAAc,KAAK,GAAG,CAAC,CAAC;AAC9E,+BAAU,MAAM;AACd,QAAI,eAAe,UAAa,eAAe,MAAM;AACnD,eAAS;AAAA,QACP,OAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,UAAU,CAAC;AACf,QAAM,CAAC,QAAQ,QAAI,wBAAS,CAAC;AAC7B,QAAM,iBAAiB,MAAM;AAAA,EAAC;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,uBAAuB;AAC3B,+BAAU,MAAM;AACd,eAAW,KAAK;AAAA,EAClB,GAAG,CAAC,KAAK,CAAC;AACV,QAAM,YAAY,MAAM,IAAI,CAAC;AAAA,IAC3B,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAAC;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAAG,UAAU,mDAAC,WAAW,KAAX,EAAe,cAAc,MAAM;AAAA,EAAC,GAAG,IAAiB,UAAU,OAC1E;AAAA,uDAAC,WAAW,MAAX,EAIE,mBAAS,WAAW,KAJvB;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,WAAW,MAAX,EAAiB,qBAAW,QAA7B;AAAA;AAAA;AAAA;AAAA,WAAkC;AAAA,IAClC,mDAAC,WAAW,MAAX,EAAiB,qBAAW,OAAO,cAApC;AAAA;AAAA;AAAA;AAAA,WAA+C;AAAA,IAE/C,mDAAC,WAAW,MAAX,EACC,6DAAC,SAAM,MAAK,SAAS,uBAAa,YAAY,UAA9C;AAAA;AAAA;AAAA;AAAA,WAAqD,KADvD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,WAAW,MAAX,EAAiB,wBAAc,SAAS,KAAzC;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,OAbiB,IAArD;AAAA;AAAA;AAAA;AAAA,SAcT,CAAiB;AACrB,SAAO,mDAAC,cACH;AAAA,eAAW,YAAY,mDAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,WAAQ,IAAK;AAAA,IACrC,mDAAC,iBACC;AAAA,yDAAC,gBAAa,UAAoB,SAAS,CAAC,GAAG,YAAY,MAAM;AAAA,MAAC,GAAG,cAAc;AAAA,QACnF,UAAU;AAAA,QACV,UAAU;AAAA,QACV,SAAS;AAAA,MACX,GAAG,MAAM,CAAC,GAAG,YAAY,cAAc,IAAI,kBAAiB,cAAa,eAAe,0BAA0B,cAAc,MAAM;AACpI,sBAAc,EAAE;AAAA,MAClB,GAAG,MAAY,SAAkB,aAAW,QAN1C;AAAA;AAAA;AAAA;AAAA,aAM2C;AAAA,MAC3C,mDAAC,cAAW,cAA4B,WAAW,MAAM,QAAQ,YAAY,OAAO,UAAU,CAAC;AAAA,QAC/F,OAAO;AAAA,MACT,GAAG;AAAA,QACD,OAAO;AAAA,MACT,GAAG;AAAA,QACD,OAAO;AAAA,MACT,GAAG;AAAA,QACD,OAAO;AAAA,MACT,GAAG;AAAA,QACD,OAAO;AAAA,MACT,CAAC,GACI,uBAXH;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,MACA,mDAAC,kBACC,6DAAC,SAAI,WAAU,kBACb,6DAAC,SAAI,WAAU,sBAAqB,OAAO;AAAA,QAC3C,SAAS;AAAA,QACT,OAAO;AAAA,QACP,gBAAgB;AAAA,QAChB,SAAS;AAAA,MACX,GACI,6DAAC,cAAW,aAAa,SAAS,iBAAiB,YAAY,MAAM;AACrE,yBAAiB,KAAK;AAAA,MACxB,GAAG,SAAS,SAAS,aAAa,QAAQ,MAAM;AAC9C,yBAAiB,IAAI;AAAA,MACvB,KAJE;AAAA;AAAA;AAAA;AAAA,aAIC,KAVH;AAAA;AAAA;AAAA;AAAA,aAWA,KAZF;AAAA;AAAA;AAAA;AAAA,aAaA,KAdF;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA,SApCF;AAAA;AAAA;AAAA;AAAA,WAqCA;AAAA,OAvCG;AAAA;AAAA;AAAA;AAAA,SAwCL;AACJ;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa,sBAAsB;AAC7C,CAAC;AACD,KAAK;AACL,IAAO,sBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADtHtB,qBAA6B;AA4DT,IAAAC,0BAAA;AAxFpB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0CAA4C,EAAE;AAAA,EACvF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AA0Ce,SAAR,kBAAmC;AACxC,EAAAC,IAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,IAAI;AACzC,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAW,MAAI,aAAa,0BAA0B,CAAC,CAAC,CAAC;AACnF,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAW,MAAI,aAAa,6BAA6B,CAAC,CAAC,CAAC;AAC5F,QAAM,UAAU,WAAW;AAC3B,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,QAAQ,UAAU,SAAS;AAClE,QAAM,WAAW,OAAM,SAAQ;AAC7B,YAAQ,KAAK,2BAA2B,cAAgB,MAAI,MAAM,OAAO,WAAa,MAAI,MAAM,OAAO,YAAc,MAAI,MAAM,QAAQ,GAAG;AAAA,EAC5I;AACA,+BAAU,MAAM;AACd,QAAI,QAAQ,UAAU,WAAW;AAC/B,iBAAW,IAAI;AAAA,IACjB,OAAO;AACL,iBAAW,KAAK;AAAA,IAClB;AACA,QAAI,QAAQ,MAAM;AAChB,eAAW,MAAI,QAAQ,MAAM,0BAA0B,CAAC,CAAC,CAAC;AAC1D,kBAAc,MAAI,QAAQ,MAAM,6BAA6B,CAAC,CAAC,CAAC;AAAA,IAClE;AAAA,EACF,GAAG,CAAC,OAAO,CAAC;AACZ,QAAM,mBAAe,2BAAY,MAAM,UAAU,CAAAC,YAAU,CAACA,OAAM,GAAG,CAAC,CAAC;AACvE,QAAM,2BAAuB,2BAAY,MAAM,QAAQ,IAAI,iBAAiB,GAAG,CAAC,CAAC;AACjF,QAAM,YAAY,oDAAC,UAAO,SAAS,cAAc,YAAU,MAAC,4BAA1C;AAAA;AAAA;AAAA;AAAA,SAEhB;AACF,SAAO,oDAAC,QAAK,YAAY;AAAA,IACvB,SAAS;AAAA,IACT,KAAK;AAAA,EACP,GAAG,OAAO,gBAAgB,UAAS,cAAa,cAAY,MACxD,8DAAC,UACC,8DAAC,OAAO,SAAP,EACC,8DAAC,QACC,8DAAC,iBAAc,KAAI,KACjB,8DAAC,uBAAY,OAAc,UAAoB,MAAY,UAAoB,WAA/E;AAAA;AAAA;AAAA;AAAA,SAAiG,KADnG;AAAA;AAAA;AAAA;AAAA,SAEA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA,KALF;AAAA;AAAA;AAAA;AAAA,SAMA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA,KAZG;AAAA;AAAA;AAAA;AAAA,SAaL;AACJ;AACAD,IAAG,iBAAiB,gCAAgC,OAAO,WAAY;AACrE,SAAO,CAAC,eAAe,UAAU;AACnC,CAAC;AACDE,MAAK;AACL,SAAS,KAAK;AAAA,EACZ;AACF,GAAG;AACD,SAAO,oDAAC,OAAI,IAAG,QAAO,SAAQ,OAAM,oBAAmB,KAAI,kBAAiB,KAAI,YAAW,cAAa,aAAY,KAAI,aAAY,UAAS,cAAa,KACtJ,8DAAC,UAAM,YAAP;AAAA;AAAA;AAAA;AAAA,SAAgB,KADb;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACAC,OAAM;AACN,IAAID;AAAJ,IAAQC;AACR,aAAaD,KAAI,iBAAiB;AAClC,aAAaC,MAAK,MAAM;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["init_esm", "import_react", "init_esm", "import_react", "type", "import_jsx_dev_runtime", "_s", "_s", "active", "_c", "_c2"]
}
