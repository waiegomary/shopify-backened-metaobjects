{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.jsx", "../app/shopify.server.js", "../app/db.server.js", "../app/root.jsx", "../app/routes/app.search-metaobjects.$type.tsx", "../app/constants/index.ts", "../app/graphql/metaobjects/queries.ts", "../app/utils/index.ts", "../app/routes/app.search-collections.tsx", "../app/graphql/collections/queries.ts", "../app/routes/app.product.duplicate.tsx", "../app/graphql/products/productDuplicateMutation.ts", "../app/routes/app.metaobject.$type.tsx", "../app/components/Tables/MetaObjects.tsx", "../app/components/Loaders/index.tsx", "../app/routes/app.site-map.$handle.tsx", "../app/components/Form/SaveAppBar.tsx", "../app/graphql/metaobjects/metaobjectQuery.ts", "../app/utils/useStorefrontFetch.ts", "../app/utils/metaobjects.ts", "../app/graphql/metaobjects/itemDefinationMutation.ts", "../app/components/Form/SiteMap/MetaForm.tsx", "../app/components/Form/SiteMap/HeaderFrom.tsx", "../app/components/Form/SiteMap/FooterForm.tsx", "../app/components/Tables/PageMetaObject.tsx", "../app/components/Icons/DeleteIcon.tsx", "../app/components/Icons/EditIcon.tsx", "../app/components/Sorting/DragHandle.tsx", "../app/components/Icons/DragIcon.tsx", "../app/components/Form/SiteMap/PageEditor/PageForm.tsx", "../app/components/Form/SiteMap/PageEditor/SectionForm.tsx", "../app/components/Tables/BlocksMetaobject.tsx", "../app/components/Form/SiteMap/PageEditor/BlockForm.tsx", "../app/components/Form/Fields/TagSearchField.tsx", "../app/utils/useToast.tsx", "../app/components/Tables/MenuMetaobject.tsx", "../app/components/Form/SiteMap/MenuEditor/index.tsx", "../app/utils/hooks.ts", "../app/components/Accordion.tsx", "../app/components/Tables/FaqMetaObjects.tsx", "../app/components/Form/SiteMap/FaqForm.tsx", "../app/components/Form/Fields/SelectField.tsx", "../app/components/Tables/ArticleMetaobject.tsx", "../app/components/Form/SiteMap/ArticleForm.tsx", "../app/components/Tables/CollectionMetaobject.tsx", "../app/components/Form/SiteMap/CollectionForm.tsx", "../app/routes/app.article.$handle.tsx", "../app/components/Form/Product/ImageForm.tsx", "../app/components/ImageGrid.tsx", "../app/components/Loaders/FormLoader.tsx", "../app/routes/app.search-products.tsx", "../app/graphql/products/queries.ts", "../app/routes/app.item.duplicate.tsx", "../app/graphql/metaobjects/createMetaobjectMutation.ts", "../app/routes/app.item.$handle.tsx", "../app/components/Tables/ProductProperties.tsx", "../app/components/Form/Product/PropertyMetafieldEditForm.tsx", "../app/components/Form/Product/PropertyMetafieldForm.tsx", "../app/components/Form/Product/DuplicateMetaobject.tsx", "../app/routes/app._index copy.jsx", "../app/components/Tables/MetaDefinition.tsx", "../app/routes/app.items.$type.tsx", "../app/components/Loaders/PageLoader.tsx", "../app/components/Tables/ItemMetaObjects.tsx", "../app/routes/app.metaobjects.tsx", "../app/routes/app.product.$id.tsx", "../app/components/Tables/ProductItems.tsx", "../app/components/Form/Product/ItemMetafieldEditorForm.tsx", "../app/graphql/products/productQuery.ts", "../app/components/Form/Product/ItemMetafieldForm.tsx", "../app/graphql/metafields/metafieldSetMutation.ts", "../app/graphql/products/productUpdate.ts", "../app/components/Form/Product/DuplicateForm.tsx", "../node_modules/react-dnd/src/core/DndContext.ts", "../node_modules/dnd-core/src/createDragDropManager.ts", "../node_modules/@react-dnd/invariant/src/index.ts", "../node_modules/dnd-core/src/utils/js_utils.ts", "../node_modules/dnd-core/src/actions/dragDrop/types.ts", "../node_modules/dnd-core/src/actions/dragDrop/local/setClientOffset.ts", "../node_modules/dnd-core/src/actions/dragDrop/beginDrag.ts", "../node_modules/dnd-core/src/actions/dragDrop/drop.ts", "../node_modules/dnd-core/src/actions/dragDrop/endDrag.ts", "../node_modules/dnd-core/src/utils/matchesType.ts", "../node_modules/dnd-core/src/actions/dragDrop/hover.ts", "../node_modules/dnd-core/src/actions/dragDrop/publishDragSource.ts", "../node_modules/dnd-core/src/actions/dragDrop/index.ts", "../node_modules/dnd-core/src/classes/DragDropManagerImpl.ts", "../node_modules/dnd-core/src/utils/coords.ts", "../node_modules/dnd-core/src/utils/dirtiness.ts", "../node_modules/dnd-core/src/classes/DragDropMonitorImpl.ts", "../node_modules/@react-dnd/asap/src/makeRequestCall.ts", "../node_modules/@react-dnd/asap/src/AsapQueue.ts", "../node_modules/@react-dnd/asap/src/RawTask.ts", "../node_modules/@react-dnd/asap/src/TaskFactory.ts", "../node_modules/@react-dnd/asap/src/asap.ts", "../node_modules/dnd-core/src/actions/registry.ts", "../node_modules/dnd-core/src/contracts.ts", "../node_modules/dnd-core/src/interfaces.ts", "../node_modules/dnd-core/src/utils/getNextUniqueId.ts", "../node_modules/dnd-core/src/classes/HandlerRegistryImpl.ts", "../node_modules/dnd-core/src/utils/equality.ts", "../node_modules/dnd-core/src/reducers/dirtyHandlerIds.ts", "../node_modules/dnd-core/src/reducers/dragOffset.ts", "../node_modules/dnd-core/src/reducers/dragOperation.ts", "../node_modules/dnd-core/src/reducers/refCount.ts", "../node_modules/dnd-core/src/reducers/stateId.ts", "../node_modules/dnd-core/src/reducers/index.ts", "../node_modules/react-dnd/src/core/DndProvider.tsx", "../node_modules/react-dnd-html5-backend/src/utils/js_utils.ts", "../node_modules/react-dnd-html5-backend/src/EnterLeaveCounter.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/NativeDragSource.ts", "../node_modules/react-dnd-html5-backend/src/NativeTypes.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/getDataFromDataTransfer.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts", "../node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts", "../node_modules/react-dnd-html5-backend/src/BrowserDetector.ts", "../node_modules/react-dnd-html5-backend/src/MonotonicInterpolant.ts", "../node_modules/react-dnd-html5-backend/src/OffsetUtils.ts", "../node_modules/react-dnd-html5-backend/src/OptionsReader.ts", "../node_modules/react-dnd-html5-backend/src/HTML5BackendImpl.ts", "../node_modules/react-dnd-html5-backend/src/index.ts", "../app/routes/app.additional.jsx", "../app/routes/app.site-maps.tsx", "../app/components/Tables/SiteMapMetaObjects.tsx", "../app/routes/app.articles.tsx", "../app/components/Tables/Articles.tsx", "../app/routes/app.products.tsx", "../app/components/Tables/Products.tsx", "../app/routes/app._index.tsx", "../app/routes/auth.login/route.jsx", "../app/routes/auth.login/error.server.jsx", "../app/routes/webhooks.jsx", "../app/routes/_index/route.jsx", "../app/routes/auth.$.jsx", "../app/routes/app.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\n\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default async function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext,\n  _loadContext\n) {\n  addDocumentResponseHeaders(request, responseHeaders);\n\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import \"@shopify/shopify-app-remix/adapters/node\";\nimport {\n  AppDistribution,\n  DeliveryMethod,\n  shopifyApp,\n  LATEST_API_VERSION,\n} from \"@shopify/shopify-app-remix/server\";\nimport { PrismaSessionStorage } from \"@shopify/shopify-app-session-storage-prisma\";\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2023-07\";\n\nimport prisma from \"./db.server\";\n\nconst shopify = shopifyApp({\n  apiKey: process.env.SHOPIFY_API_KEY,\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\n  apiVersion: LATEST_API_VERSION,\n  scopes: process.env.SCOPES?.split(\",\"),\n  appUrl: process.env.SHOPIFY_APP_URL || \"\",\n  authPathPrefix: \"/auth\",\n  sessionStorage: new PrismaSessionStorage(prisma),\n  distribution: AppDistribution.AppStore,\n  restResources,\n  webhooks: {\n    APP_UNINSTALLED: {\n      deliveryMethod: DeliveryMethod.Http,\n      callbackUrl: \"/webhooks\",\n    },\n  },\n  hooks: {\n    afterAuth: async ({ session }) => {\n      shopify.registerWebhooks({ session });\n    },\n  },\n  ...(process.env.SHOP_CUSTOM_DOMAIN\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\n    : {}),\n});\n\nexport default shopify;\nexport const apiVersion = LATEST_API_VERSION;\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\nexport const authenticate = shopify.authenticate;\nexport const unauthenticated = shopify.unauthenticated;\nexport const login = shopify.login;\nexport const registerWebhooks = shopify.registerWebhooks;\nexport const sessionStorage = shopify.sessionStorage;\n", "import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient();\n  }\n}\n\nexport default prisma;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport default function App() {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <LiveReload />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n", "import { LoaderArgs, json } from \"@remix-run/node\";\nimport { getMetaobjects } from \"~/graphql/metaobjects/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseSearchParams } from \"~/utils\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const { admin } = await authenticate.admin(request);\n\n  let rest = parseSearchParams({\n    request,\n    params,\n    queryBuild: (e: string) => {\n      return `type:${params.type} AND display_name:${e}*`;\n    },\n  });\n\n  const metaobjects = await getMetaobjects({\n    graphql: admin.graphql,\n    type: params.type,\n    ...rest,\n  });\n  return json(metaobjects);\n}\n", "export const PAGINATION_LIMIT = 20;\nexport const IMAGE_PLACEHOLDER =\n  \"https://asset.cloudinary.com/oves/784b06f417dc5e981eaa039cab243564\";\nexport const PRODUCT_ID_PREFIX = \"gid://shopify/Product/\";\nexport const getProductIDNumber = (id: string) =>\n  id?.replace(PRODUCT_ID_PREFIX, \"\");\n\nexport const getProductIDString = (id: string) => `${PRODUCT_ID_PREFIX}${id}`;\nexport const FIELD_REQUIRED = 'Field required.'", "import * as _ from \"lodash\";\nimport { PAGINATION_LIMIT } from \"~/constants\";\n\nexport const getMetaobjects = async ({\n  graphql,\n  type,\n  before = \"\",\n  after = \"\",\n  query = \"\",\n  first=PAGINATION_LIMIT\n}) => {\n  let variables = {\n    definitionCount: 64,\n    referenceCount: 10,\n    sortKey: \"updated_at\",\n    reverse: false,\n    first: first,\n    type,\n  };\n  if (query) {\n    variables[\"query\"] = query;\n  }\n  if (before) {\n    variables[\"before\"] = before;\n    variables[\"last\"] = first;\n    delete variables[\"first\"];\n  } else if (after) {\n    variables[\"after\"] = after;\n    variables[\"first\"] = first;\n  }\n  const response = await graphql(\n    `\n      query MetaobjectIndex(\n        $query: String\n        $first: Int\n        $last: Int\n        $before: String\n        $after: String\n        $referenceCount: Int\n        $sortKey: String\n        $reverse: Boolean\n        $type: String!\n      ) {\n        metaobjects(\n          first: $first\n          last: $last\n          before: $before\n          after: $after\n          type: $type\n          query: $query\n          reverse: $reverse\n          sortKey: $sortKey\n        ) {\n          edges {\n            cursor\n            node {\n              id\n              displayName\n              handle\n              capabilities {\n                publishable {\n                  status\n                  __typename\n                }\n                __typename\n              }\n              type\n              updatedAt\n              definition {\n                id\n                name\n                access {\n                  storefront\n                  admin\n                  __typename\n                }\n                capabilities {\n                  publishable {\n                    enabled\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              referencedBy(first: $referenceCount) {\n                edges {\n                  cursor\n                  __typename\n                }\n                pageInfo {\n                  hasNextPage\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          pageInfo {\n            hasPreviousPage\n            hasNextPage\n            endCursor\n            startCursor\n            __typename\n          }\n          __typename\n        }\n      }\n    `,\n    {\n      variables,\n    }\n  );\n\n  const data = await response.json();\n  return data;\n};\n\nexport const getMetaDefinitions = async ({ graphql, definitionCount = 64 }) => {\n  const response = await graphql(\n    `\n      query MetaobjectIndex($definitionCount: Int) {\n        metaobjectDefinitions(first: $definitionCount, reverse: true) {\n          edges {\n            node {\n              id\n              type\n              name\n              metaobjectsCount\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n      }\n    `,\n    {\n      variables: {\n        definitionCount,\n      },\n    }\n  );\n  return await response.json();\n};\n", "import * as _ from \"lodash\";\nimport { PAGINATION_LIMIT } from \"~/constants\";\nexport const numberFormat = (n: string | number) => {\n  return String(n).replace(/(.)(?=(\\d{3})+$)/g, \"$1,\");\n};\nexport const get = _.get;\nexport const map = _.map;\nexport const find = _.find;\nexport const findIndex = _.findIndex;\n\nexport function isValidDate(d) {\n  return (\n    d instanceof Date &&\n    \n    !d &&\n    d !== undefined &&\n    d !== null &&\n    d !== \"null\" &&\n    d !== undefined &&\n    d !== \"undefined\"\n  );\n}\n\nexport function slugify(string: string) {\n  return string\n    ?.toString()\n    .trim()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w\\-]+/g, \"\")\n    .replace(/\\-\\-+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n/**\n *\n * @param isoDateString Input ISO 8601 date string\n * @returns Format the date as \"Month Day, Year\"\n */\nexport const dateFormatter = (isoDateString: string) => {\n  // Create a Date object from the ISO date string\n  const date = new Date(isoDateString);\n\n  // Define the month names\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  // Extract the components of the date\n  return `${\n    monthNames[date.getMonth()]\n  } ${date.getDate()}, ${date.getFullYear()}`;\n};\n\nfunction titleCase(str) {\n  var splitStr = str.toLowerCase().split(\" \");\n  for (var i = 0; i < splitStr.length; i++) {\n    // You do not need to check if i is larger than splitStr length, as your for does that for you\n    // Assign it back to the array\n    splitStr[i] =\n      splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  }\n  // Directly return the joined string\n  return splitStr.join(\" \");\n}\n\nexport const parseDefinitionType = (definition: string) => {\n  return titleCase(definition?.replace(\"_\", \" \")?.replace(\"-\", \" \"));\n};\n\nexport function logger(obj: any, text = \"Logger :>> \") {\n  console.log(text, JSON.stringify(obj, null, 2));\n}\n\nexport function truncate(str, { length = 25 } = {}) {\n  if (str) return str; // do not truncate\n  if (!str) return \"\";\n  if (str.length <= length) return str;\n  return str.slice(0, length) + \"\u2026\";\n}\n\nconst exists = (str: string) => {\n  return str && str != \"undefined\" && str !== \"null\";\n};\n\nexport function parseSearchParams({\n  params,\n  request,\n  queryBuild = (e: string) => e,\n}) {\n  const url = new URL(request.url);\n  let data = {};\n  let query = url.searchParams?.get(\"query\") || \"\";\n  let before = url.searchParams?.get(\"before\") || \"\";\n  let after = url.searchParams?.get(\"after\") || \"\";\n  let first = url.searchParams?.get(\"first\") || \"\";\n\n  if (exists(query)) {\n    data[\"query\"] = queryBuild(query);\n  }\n  if (exists(before)) {\n    data[\"before\"] = before;\n  } else if (exists(after)) {\n    data[\"after\"] = after;\n  }\n  if (exists(first)) {\n    data[\"first\"] = parseInt(first) || PAGINATION_LIMIT;\n  }\n  return data;\n}\n\nexport const numberGenerator = () => {\n  const date = new Date();\n  return (\n    date.getTime() +\n    Math.floor(Math.random() * 5) +\n    Math.floor(Math.random() * 10) +\n    Math.floor(Math.random() * 100) +\n    Math.floor(Math.random() * 100)\n  );\n};\n\nexport function paragraphToHTML(content: any) {\n  let html = \"\";\n  try {\n    const parsed = JSON.parse(content);\n\n    parsed.children.forEach((node: any) => {\n      switch (node.type) {\n        case \"paragraph\":\n          html += `<p>`;\n          node.children.forEach((item: any) => {\n            if (item.type === \"text\" && item.bold) {\n              html += `<strong>${item.value}</strong>` + \" \";\n            } else if (item.type === \"text\" && item.italic) {\n              html += `<em>${item.value}</em>` + \" \";\n            } else if (item.type === \"text\") {\n              html += `${item.value}` + \" \";\n            }\n            if (item.type === \"link\" && item.bold) {\n              html +=\n                `<a href=\"${item.url}\" target=\"${item.target}\"><strong>${item.children[0].value}</strong></a>` +\n                \" \";\n            } else if (item.type === \"link\" && item.italic) {\n              html +=\n                `<a href=\"${item.url}\" target=\"${item.target}\"><em>${item.children[0].value}</em></a>` +\n                \" \";\n            } else if (item.type === \"link\") {\n              html +=\n                `<a href=\"${item.url}\" target=\"${item.target}\">${item.children[0].value}</a>` +\n                \" \";\n            }\n          });\n          html += `</p>`;\n          break;\n      }\n    });\n  } catch (error) {}\n\n  return html;\n}\nexport function toHTML(content: any) {\n  let html = \"\";\n  try {\n    const parsed = JSON.parse(content);\n\n    parsed.children.forEach((node: any) => {\n      switch (node.type) {\n        case \"heading\":\n          html += `<h${node.level}>${node.children[0].value}</h${node.level}>`;\n          break;\n        case \"list\":\n          html += `<${\n            node.listType === \"unordered\" ? \"ul\" : \"ol\"\n          } class=\"list\">`;\n          node.children.forEach((item: any) => {\n            let temp = \"\";\n            if (_.get(item, \"children\")) {\n              temp += \"<li>\";\n              item.children.map((it) => {\n                if (it.type === \"link\") {\n                  temp +=\n                    `<a href=\"${it.url}\" target=\"${it.target}\">${it.children[0].value}</a>` +\n                    \" \";\n                } else if (it.type === \"link\" && it.italic) {\n                  temp +=\n                    `<a href=\"${it.url}\" target=\"${it.target}\"><em>${it.children[0].value}</em></a>` +\n                    \" \";\n                } else if (item.type === \"link\") {\n                  temp +=\n                    `<a href=\"${it.url}\" target=\"${it.target}\">${it.children[0].value}</a>` +\n                    \" \";\n                }\n              });\n              temp += \"</li>\";\n            }\n            if (temp?.replaceAll(\" \", \"\") != \"<li></li>\") {\n              html += temp;\n            } else {\n              html += `<li>${item.children[0].value} ${_.get(\n                item.children,\n                \"[1].value\",\n                \"\"\n              )}</li>`;\n            }\n          });\n          html += `<${node.listType === \"unordered\" ? \"/ul\" : \"/ol\"}>`;\n          break;\n        case \"paragraph\":\n          html += `<p>`;\n          node.children.forEach((item: any) => {\n            if (item.type === \"text\" && item.bold) {\n              html += `<strong>${item.value}</strong>` + \" \";\n            } else if (item.type === \"text\" && item.italic) {\n              html += `<em>${item.value}</em>` + \" \";\n            } else if (item.type === \"text\") {\n              html += `${item.value}` + \" \";\n            }\n            if (item.type === \"link\" && item.bold) {\n              html +=\n                `<a href=\"${item.url}\" target=\"${item.target}\"><strong>${item.children[0].value}</strong></a>` +\n                \" \";\n            } else if (item.type === \"link\" && item.italic) {\n              html +=\n                `<a href=\"${item.url}\" target=\"${item.target}\"><em>${item.children[0].value}</em></a>` +\n                \" \";\n            } else if (item.type === \"link\") {\n              html +=\n                `<a href=\"${item.url}\" target=\"${item.target}\">${item.children[0].value}</a>` +\n                \" \";\n            }\n          });\n          html += `</p>`;\n          break;\n      }\n    });\n  } catch (error) {}\n\n  return html;\n}\n", "import { LoaderArgs, json } from \"@remix-run/node\";\nimport { collectionsQuery } from \"~/graphql/collections/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseSearchParams } from \"~/utils\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const { admin } = await authenticate.admin(request);\n  let rest = parseSearchParams({\n    request,\n    params,\n    queryBuild: (e: string) => {\n      return `${e}`;\n    },\n  });\n\n  const res = await collectionsQuery({\n    graphql: admin.graphql,\n    ...rest,\n  });\n  return json(res);\n}\n", "export const collectionsQuery = async ({ graphql, query: searchQuery = \"\" }) => {\n  const variables = {\n    collectionsFirst: 50,\n    collectionsLast: null,\n    before: null,\n    after: null,\n    sortKey: \"UPDATED_AT\",\n    reverse: true,\n    query: searchQuery,\n    savedSearchId: null,\n  };\n  const response = await graphql(query, {\n    variables,\n  });\n  return response.json();\n};\n\nconst query = `query CollectionList_collections_1($collectionsFirst: Int, $collectionsLast: Int, $before: String, $after: String, $sortKey: CollectionSortKeys, $reverse: Boolean, $query: String, $savedSearchId: ID) {\n    collections(\n      first: $collectionsFirst\n      after: $after\n      last: $collectionsLast\n      before: $before\n      sortKey: $sortKey\n      reverse: $reverse\n      query: $query\n      savedSearchId: $savedSearchId\n    ) {\n      edges {\n        cursor\n        node {\n          id\n          title\n          productsCount\n          sortOrder\n        }\n        __typename\n      }\n    }\n  }`;\n", "import {\n  createDuplicateProductVariables,\n  duplicateProductMutation,\n} from \"~/graphql/products/productDuplicateMutation\";\nimport { authenticate } from \"~/shopify.server\";\nimport * as _ from \"lodash\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getProductIDNumber } from \"~/constants\";\n\nexport async function action({ request, params }) {\n  const { admin } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData()),\n  };\n\n  const variables = createDuplicateProductVariables({\n    newTitle: _.get(data, \"title\"),\n    productId: _.get(data, \"productId\"),\n  });\n  const response = await duplicateProductMutation({\n    graphql: admin.graphql,\n    variables,\n  });\n  const newProductId = getProductIDNumber(\n    _.get(response, \"data.productDuplicate.newProduct.id\")\n  );\n  const errors = _.get(response, \"data.productDuplicate.userErrors.length\");\n  if (errors) {\n    return json({ errors }, { status: 422 });\n  }\n  return redirect(\n    `/app/product/${\n      newProductId || getProductIDNumber(_.get(data, \"productId\"))\n    }`\n  );\n}\n", "export const duplicateProductMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, { variables });\n  return response.json();\n};\n\nexport const createDuplicateProductVariables = ({ newTitle, productId }) => {\n  return {\n    productId,\n    newTitle,\n    includeImages: false,\n    newStatus: \"DRAFT\",\n  };\n};\n\nconst query = `\nmutation DuplicateProduct($productId: ID!, $newTitle: String!, $includeImages: Boolean, $newStatus: ProductStatus) {\n  productDuplicate(\n    productId: $productId\n    newTitle: $newTitle\n    includeImages: $includeImages\n    newStatus: $newStatus\n  ) {\n    imageJob {\n      id\n      __typename\n    }\n    newProduct {\n      id\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n}\n`;\n", "import { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  VerticalStack,\n} from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Button, Popover, ActionList } from \"@shopify/polaris\";\nimport MetaObjects from \"~/components/Tables/MetaObjects\";\nimport { getMetaobjects } from \"~/graphql/metaobjects/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseDefinitionType } from \"~/utils\";\n\nexport async function loader({ request, params }) {\n  const { admin, session } = await authenticate.admin(request);\n  const query = new URL(request.url);\n  let after = query.searchParams?.get(\"after\") || \"\";\n  let before = query.searchParams?.get(\"before\") || \"\";\n  let rest = {};\n  if (before) {\n    rest[\"before\"] = before;\n  } else if (after) {\n    rest[\"after\"] = after;\n  }\n  const metaobjects = await getMetaobjects({\n    graphql: admin.graphql,\n    type: params.type,\n    ...rest,\n  });\n\n  return json({\n    metaobjects,\n    definitionType: parseDefinitionType(params.type),\n    type: params.type,\n    graphql: admin.graphql,\n  });\n}\nexport default function MetaobjectsPage() {\n  const { metaobjects, definitionType, type, graphql } = useLoaderData();\n\n  const [active, setActive] = useState(true);\n  const [edges, setEdges] = useState(\n    _.get(metaobjects, \"data.metaobjects.edges\", [])\n  );\n  const [pageInfo, setPageInfo] = useState(\n    _.get(metaobjects, \"data.metaobjects.pageInfo\", {})\n  );\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n\n  const onSearch = async (data) => {\n    fetcher.load(\n      `/app/search-metaobjects/${type}?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.metaobjects.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.metaobjects.pageInfo\", {}));\n    }\n  }, [fetcher]);\n\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n\n  const handleExportedAction = useCallback(\n    () => console.log(\"Exported action\"),\n    []\n  );\n  const activator = (\n    <Button onClick={toggleActive} disclosure>\n      More actions\n    </Button>\n  );\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app/metaobjects\" }}\n      title={definitionType}\n      subtitle=\"Definition\"\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <VerticalStack gap=\"3\">\n              <MetaObjects\n                edges={edges}\n                pageInfo={pageInfo}\n                type={type}\n                onSearch={onSearch}\n                loading={loading}\n              />\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"1\"\n      paddingInlineEnd=\"1\"\n      background=\"bg-subdued\"\n      borderWidth=\"1\"\n      borderColor=\"border\"\n      borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import { Link, useNavigate } from \"@remix-run/react\";\nimport {\n  IndexTable,\n  LegacyCard,\n  useIndexResourceState,\n  Text,\n  Badge,\n  Pagination,\n  VerticalStack,\n  HorizontalGrid,\n  IndexFilters,\n  useSetIndexFiltersMode,\n} from \"@shopify/polaris\";\nimport { IMetaobjectResponse } from \"~/types\";\nimport { dateFormatter, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst MetaObjects = ({\n  edges,\n  pageInfo,\n  type,\n  onSearch,\n  loading: isLoading,\n}: IMetaobjectResponse) => {\n  const navigate = useNavigate();\n\n  const resourceName = {\n    singular: \"metaobject\",\n    plural: \"metaobjects\",\n  };\n  const [loading, setLoading] = useState(false);\n\n  const handleNavigation = (next: boolean) => {\n    let rest = {};\n    setLoading(true);\n    if (next) {\n      rest[\"after\"] = pageInfo.endCursor;\n    } else {\n      rest[\"before\"] = pageInfo.startCursor;\n    }\n\n    if (queryValue !== undefined && queryValue !== null) {\n      rest[\"query\"] = queryValue;\n    }\n    onSearch(rest);\n  };\n  const [queryValue, setQueryValue] = useState(null);\n  const handleFiltersQueryChange = useCallback(\n    (value: string) => setQueryValue(value),\n    []\n  );\n\n  useEffect(() => {\n    if (queryValue !== undefined && queryValue !== null) {\n      onSearch({ query: queryValue });\n    }\n  }, [queryValue]);\n  const [selected] = useState(0);\n  const onHandleCancel = () => {};\n\n  const { mode, setMode } = useSetIndexFiltersMode();\n\n  useEffect(() => {\n    setLoading(false);\n  }, [edges]);\n  const rowMarkup = edges.map(\n    (\n      {\n        node: {\n          id,\n          definition,\n          capabilities,\n          displayName,\n          handle,\n          type,\n          updatedAt,\n        },\n      },\n      index\n    ) => (\n      <IndexTable.Row onNavigation={() => {}} id={id} key={id} position={index}>\n        <IndexTable.Cell>\n          {/* <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"span\">\n            <Link to={`qrcodes/${{ id }}`}>{truncate(displayName)}</Link>\n          </Text> */}\n          {truncate(displayName)}\n        </IndexTable.Cell>\n        <IndexTable.Cell>{definition.name}</IndexTable.Cell>\n        <IndexTable.Cell>{definition.access.storefront}</IndexTable.Cell>\n\n        <IndexTable.Cell>\n          <Badge size=\"small\">{capabilities.publishable.status}</Badge>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{dateFormatter(updatedAt)}</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <VerticalStack>\n        <IndexFilters\n          selected={selected}\n          filters={[]}\n          onClearAll={() => {}}\n          cancelAction={{\n            onAction: onHandleCancel,\n            disabled: false,\n            loading: false,\n          }}\n          tabs={[]}\n          queryValue={queryValue || \"\"}\n          queryPlaceholder=\"Search ...\"\n          onQueryChange={handleFiltersQueryChange}\n          onQueryClear={() => {\n            setQueryValue(\"\");\n          }}\n          mode={mode}\n          setMode={setMode}\n          hideFilters\n        />\n        <IndexTable\n          resourceName={resourceName}\n          itemCount={edges.length}\n          selectable={false}\n          headings={[\n            { title: \"Display Name\" },\n            { title: \"Definition\" },\n            { title: \"Storefront access\" },\n            { title: \"Status\" },\n            { title: \"Last updated\" },\n          ]}\n        >\n          {rowMarkup}\n        </IndexTable>\n        <HorizontalGrid>\n          <div className=\"grid-container\">\n            <div\n              className=\"pagination-wrapper\"\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                padding: 20,\n              }}\n            >\n              <Pagination\n                hasPrevious={pageInfo.hasPreviousPage}\n                onPrevious={() => {\n                  handleNavigation(false);\n                }}\n                hasNext={pageInfo.hasNextPage}\n                onNext={() => {\n                  handleNavigation(true);\n                }}\n              />\n            </div>\n          </div>\n        </HorizontalGrid>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default MetaObjects;\n", "import { Frame, Loading } from \"@shopify/polaris\";\n\nfunction Loader() {\n  return (\n    <div style={{ height: \"1px\" }}>\n      <Frame>\n        <Loading />\n      </Frame>\n    </div>\n  );\n}\n\nexport default Loader;\n", "import { json } from \"@remix-run/node\";\nimport {\n  Await,\n  useActionData,\n  useFetcher,\n  useLoaderData,\n  useNavigate,\n  useSubmit } from\n\"@remix-run/react\";\nimport { Card, Layout, Page, TextField, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { Suspense, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { authenticate } from \"~/shopify.server\";\nimport { get } from \"~/utils\";\nimport SaveAppBar from \"~/components/Form/SaveAppBar\";\nimport { getMetaobjectQuery } from \"~/graphql/metaobjects/metaobjectQuery\";\nimport useStorefrontFetch from \"~/utils/useStorefrontFetch\";\nimport {\n  createFieldValue,\n  findValueFromFields,\n  getFieldData,\n  getSiteMetadataFieldData } from\n\"~/utils/metaobjects\";\nimport {\n  createItemDefinitionVariables,\n  updateItemDefinitionMutation } from\n\"~/graphql/metaobjects/itemDefinationMutation\";\nimport MetaForm from \"~/components/Form/SiteMap/MetaForm\";\nimport mkecss from \"@uiw/react-md-editor/markdown-editor.css\";\nimport mkdn from \"@uiw/react-markdown-preview/markdown.css\";\nimport { useFormik } from \"formik\";\nimport HeaderFrom from \"~/components/Form/SiteMap/HeaderFrom\";\nimport FooterForm from \"~/components/Form/SiteMap/FooterForm\";\nimport PageMetaObject from \"~/components/Tables/PageMetaObject\";\nimport styles from \"../components/Views/styles.css\";\nimport MenuMetaobject from \"~/components/Tables/MenuMetaobject\";\nimport Accordion from \"~/components/Accordion\";\nimport FaqMetaObjects from \"~/components/Tables/FaqMetaObjects\";\nimport ArticleMetaobject from \"~/components/Tables/ArticleMetaobject\";\nimport CollectionMetaobject from \"~/components/Tables/CollectionMetaobject\";\n\nexport const links = () => [\n{ rel: \"stylesheet\", href: mkecss },\n{ rel: \"stylesheet\", href: mkdn },\n{ rel: \"stylesheet\", href: styles }];\n\n\nexport async function loader({ request, params }) {\n  const response = await useStorefrontFetch(\n    JSON.stringify({\n      query: getMetaobjectQuery,\n      variables: {\n        metaobjectHandleInput: {\n          handle: params.handle,\n          type: \"site_map\"\n        }\n      }\n    })\n  );\n  const data = await response.json();\n  const metaobject = _.get(data, \"data.metaobject\");\n  const articles = getSiteMetadataFieldData(metaobject, \"articles\") || [];\n  const meta = getSiteMetadataFieldData(metaobject, \"meta\");\n  const pages = getSiteMetadataFieldData(metaobject, \"pages\");\n  const menu = getSiteMetadataFieldData(metaobject, \"menu\");\n  const header = getSiteMetadataFieldData(metaobject, \"header\");\n  const footer = getSiteMetadataFieldData(metaobject, \"footer\");\n  const faq = getSiteMetadataFieldData(metaobject, \"faq\") || [];\n  const product_collections =\n  getSiteMetadataFieldData(metaobject, \"product_collections\") || [];\n\n  let name = findValueFromFields(metaobject, \"name\");\n  let domain = findValueFromFields(metaobject, \"domain\");\n\n  const _metaobject = {\n    id: _.get(metaobject, \"id\"),\n    name,\n    domain,\n    articles,\n    meta,\n    pages,\n    menu,\n    header,\n    footer,\n    faq,\n    product_collections,\n    handle: params.handle\n  };\n\n  return json(\n    {\n      name,\n      domain,\n      articles,\n      meta,\n      pages,\n      menu,\n      header,\n      footer,\n      faq,\n      product_collections,\n      metaobject: _metaobject,\n      type: \"site_meta\"\n    },\n    {\n      headers: {\n        \"Cache-Control\": \"no-store, no-cache, must-revalidate\"\n      }\n    }\n  );\n}\n\nexport async function action({ request, params }) {\n  const { admin } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData())\n  };\n  const id = _.get(data, \"id\");\n  const handle = _.get(data, \"handle\");\n  let fields: {key: string;value: string;}[] = [\n  {\n    key: \"name\",\n    value: _.get(data, \"name\")\n  },\n  {\n    key: \"domain\",\n    value: _.get(data, \"domain\")\n  },\n  {\n    key: \"documents\",\n    value: \"\"\n  },\n  {\n    key: \"contacts\",\n    value: \"\"\n  },\n  {\n    key: \"keywords\",\n    value: \"\"\n  },\n  {\n    key: \"teams\",\n    value: \"\"\n  }];\n\n  [\n  \"articles\",\n  \"meta\",\n  \"menu\",\n  \"pages\",\n  \"header\",\n  \"footer\",\n  \"faq\",\n  \"product_collections\"].\n  map((it) => {\n    fields.push(createFieldValue(it, data));\n  });\n  const variables = createItemDefinitionVariables({\n    id,\n    handle,\n    fields\n  });\n  const response = await updateItemDefinitionMutation({\n    graphql: admin.graphql,\n    variables\n  });\n  return json({ data: _.get(response, \"data\") });\n}\n\nexport default function SiteMetaPage() {\n  const {\n    metaobject,\n    articles,\n    meta,\n    pages,\n    menu,\n    header,\n    footer = {},\n    faq,\n    product_collections\n  } = useLoaderData();\n  const [formDirty, setFormDirty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const actionData = useActionData();\n  const faqFetcher = useFetcher();\n  const collectionFetcher = useFetcher();\n  const articleFetcher = useFetcher();\n  const navigate = useNavigate();\n  const handleLoadingChange = useCallback((value) => setLoading(value), []);\n\n  const submit = useSubmit();\n\n  const initialValues = useMemo(\n    () => ({\n      id: _.get(metaobject, \"id\"),\n      handle: _.get(metaobject, \"handle\"),\n      name: _.get(metaobject, \"name\"),\n      domain: _.get(metaobject, \"domain\"),\n      articles,\n      meta,\n      pages,\n      menu,\n      header,\n      footer,\n      faq,\n      product_collections,\n      collections: []\n    }),\n    [\n    metaobject,\n    articles,\n    meta,\n    pages,\n    header,\n    footer,\n    faq,\n    product_collections]\n\n  );\n\n  const formik = useFormik({\n    initialValues,\n    validateOnChange: false,\n    onSubmit: (values) => {\n      handleLoadingChange(true);\n\n      const data = {\n        id: _.get(metaobject, \"id\"),\n        handle: _.get(metaobject, \"handle\"),\n        name: values.name,\n        domain: values.domain,\n        menu: getFieldData(get(values, \"menu\")),\n        meta: getFieldData(get(values, \"meta\")),\n        pages: getFieldData(get(values, \"pages\")),\n        header: getFieldData(get(values, \"header\")),\n        footer: getFieldData(get(values, \"footer\", {})),\n        faq: getFieldData(get(values, \"faq\", {})),\n        product_collections: getFieldData(get(values, \"product_collections\")),\n        articles: getFieldData(get(values, \"articles\"))\n      };\n\n      submit(data, { method: \"post\" });\n    }\n  });\n\n  const { values } = useMemo(() => formik, [formik]);\n\n  useEffect(() => {\n    handleLoadingChange(false);\n    setFormDirty(false);\n    formik.resetForm({ values: values });\n  }, [actionData]);\n\n  return (\n    <Page\n      backAction={{ content: \"Sites\", url: \"/app/site-maps\" }}\n      title={_.get(metaobject, \"name\", \"\")}\n      subtitle=\"Site Map\"\n      compactTitle\n      secondaryActions={[\n      values.domain ?\n      {\n        content: \"Preview\",\n        accessibilityLabel: \"Secondary action label\",\n        onAction: () => {\n          const newTab = window.open(values.domain, \"_blank\");\n          if (newTab) {\n            newTab.focus();\n          }\n        }\n      } :\n      {}]}>\n\n\n      <Layout>\n        <Layout.Section>\n          <Card>\n            {formDirty || loading || formik.dirty ?\n            <SaveAppBar\n              saveAction={formik.handleSubmit}\n              loading={loading}\n              discardAction={() => {\n                navigate(`/app/site-maps`);\n              }} /> :\n\n            null}\n            <VerticalStack gap=\"3\">\n              <TextField\n                label=\"Name\"\n                name=\"name\"\n                value={values.name}\n                onChange={(value) => {\n                  formik.setFieldValue(\"name\", value);\n                }}\n                autoComplete=\"off\" />\n\n              <TextField\n                label=\"Domain\"\n                name=\"domain\"\n                value={values.domain}\n                onChange={(value) => {\n                  formik.setFieldValue(\"domain\", value);\n                }}\n                autoComplete=\"off\" />\n\n              <Accordion title=\"Metadata\">\n                <div className=\"section\">\n                  <MetaForm formik={formik} />\n                </div>\n              </Accordion>\n\n              <Accordion title=\"Header\">\n                <div className=\"section\">\n                  <Suspense>\n                    <Await resolve={formik}>\n                      {(value) => <HeaderFrom formik={value} />}\n                    </Await>\n                  </Suspense>\n                </div>\n              </Accordion>\n\n              <Accordion title=\"Footer\">\n                <div className=\"section\">\n                  <Suspense>\n                    <Await resolve={formik}>\n                      {(value) => <FooterForm formik={value} />}\n                    </Await>\n                  </Suspense>\n                </div>\n              </Accordion>\n\n              <Accordion title=\"FAQs\">\n                <div className=\"section\">\n                  <Suspense>\n                    <Await resolve={formik}>\n                      {(value) =>\n                      <FaqMetaObjects\n                        faqFetcher={faqFetcher}\n                        formik={value} />}\n\n\n                    </Await>\n                  </Suspense>\n                </div>\n              </Accordion>\n\n              <Accordion title=\"Articles\">\n                <div className=\"section\">\n                  <Suspense>\n                    <Await resolve={formik}>\n                      {(value) =>\n                      <ArticleMetaobject\n                        faqFetcher={articleFetcher}\n                        formik={value} />}\n\n\n                    </Await>\n                  </Suspense>\n                </div>\n              </Accordion>\n\n              <Accordion title=\"Products\">\n                <div className=\"section\">\n                  <Suspense>\n                    <Await resolve={formik}>\n                      {(value) =>\n                      <CollectionMetaobject\n                        faqFetcher={collectionFetcher}\n                        formik={value} />}\n\n\n                    </Await>\n                  </Suspense>\n                </div>\n              </Accordion>\n              <Accordion title=\"Pages\">\n                <div className=\"section\">\n                  <PageMetaObject fetcher={collectionFetcher} formik={formik} />\n                </div>\n              </Accordion>\n              <Accordion title=\"Menu\">\n                <div className=\"section\">\n                  <MenuMetaobject formik={formik} />\n                </div>\n              </Accordion>\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>);\n\n}", "import { Frame, ContextualSaveBar } from \"@shopify/polaris\";\n\nconst SaveAppBar = ({ saveAction, discardAction, loading=false }) => {\n  return (\n    <div style={{ height: \"0px\" }}>\n      <Frame\n        logo={{\n          width: 124,\n          contextualSaveBarSource:\n            \"https://res.cloudinary.com/oves/image/upload/v1657359850/logos/oves_logo_words_h50_w3axpd.png\",\n        }}\n      >\n        <ContextualSaveBar\n          \n          message=\"Unsaved changes\"\n          saveAction={{\n            onAction: saveAction,\n            loading: loading,\n            disabled: false,\n          }}\n          discardAction={{\n            onAction: discardAction,\n          }}\n        />\n      </Frame>\n    </div>\n  );\n};\n\nexport default SaveAppBar;\n", "\n\n\nexport const getMetaobjectQuery = `\nfragment Media on Media {\n    mediaContentType\n    alt\n    __typename\n   \n    ... on MediaImage {\n      id\n      __typename\n      image {\n        url\n        width\n        height\n      }\n    }\n    ... on Video {\n      id\n      __typename\n      sources {\n        mimeType\n        url\n      }\n    }\n    ... on Model3d {\n      id\n      __typename\n      sources {\n        mimeType\n        url\n        __typename\n      }\n    }\n    ... on ExternalVideo {\n      id\n      embedUrl\n      host\n      __typename\n    }\n  }\n\n\nfragment MultiMetaObjectContentFragment on Metaobject {\n  id\n  type\n  handle\n  __typename\n  fields {\n    __typename\n    type\n    value\n    key\n    \n    reference {\n      ... on Metaobject {\n        __typename\n        id\n        handle\n        fields {\n          __typename\n          value\n          type\n          key\n        }\n        type\n      }\n      ...Media\n    }\n    references(first: 100) {\n      nodes {\n        __typename\n        ... on Metaobject {\n          __typename\n        id\n        fields {\n          __typename\n          value\n          type\n          key\n        }\n        type\n      }\n        ...Media\n      }\n    }\n  }\n}\n\n\n\nfragment MetaObjectContentFragment on Metaobject {\n  id\n  type\n  handle\n  __typename\n  fields {\n    __typename\n    type\n    value\n    key\n    reference {\n      ... on Metaobject {\n        __typename\n        id\n        fields {\n          value\n          type\n          key\n          __typename\n          references(first: 100) {\n            nodes {\n              __typename\n              ...MultiMetaObjectContentFragment\n              ...Media\n            }\n          }\n        }\n        type\n      }\n      ...Media\n    }\n    references(first: 100) {\n      nodes {\n        ...MultiMetaObjectContentFragment\n        ...Media\n      }\n    }\n  }\n}\nquery MetaObjectContent($metaobjectHandleInput: MetaobjectHandleInput, $country: CountryCode, $language: LanguageCode) @inContext(country: $country, language: $language) {\n  metaobject(handle: $metaobjectHandleInput) {\n    ...MetaObjectContentFragment\n  }\n}\n`;\n", "async function useStorefrontFetch(queryOrMutation: any) {\n  const url = `https://${process.env.STOREFRONT}/api/2023-04/graphql.json`;\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"X-Shopify-Api-Version\", \"2023-04\");\n  myHeaders.append(\"Cache-Control\", \"no-store, no-cache, must-revalidate\");\n  myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n\n  myHeaders.append(\n    \"X-Shopify-Storefront-Access-Token\",\n    process.env.STOREFRONT_ACCESS_TOKEN\n  );\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: queryOrMutation,\n    redirect: \"follow\",\n  };\n\n  return fetch(url, requestOptions);\n}\n\nexport default useStorefrontFetch;\n", "import * as _ from \"lodash\";\n\nexport function parseJSON(str: string | undefined) {\n  if (str) {\n    try {\n      return JSON.parse(str);\n    } catch (error) {\n      return {};\n    }\n  }\n  return {};\n}\n\nexport function parseJSONWithData(str: string | undefined, key = \"data\") {\n  return _.get(parseJSON(str), key);\n}\n\nexport const getFieldData = (obj: any) => {\n  return JSON.stringify({\n    data: obj,\n  });\n};\n\nexport const createFieldValue = (key: string, obj: any) => ({\n  key,\n  value: _.get(obj, key),\n});\nexport const findNode = (data: any, key: string) => {\n  return _.find(data, (item) => {\n    if (_.get(item, \"key\") === key) {\n      return true;\n    }\n\n    if (_.get(item, \"type\") === key) {\n      return true;\n    }\n  });\n};\nexport const findNodeValue = (data: any, key: string, value = \"value\") => {\n  return _.get(findNode(data, key), value);\n};\nexport const findFieldsNode = (data: any, key: string) => {\n  return findNode(_.get(data, \"fields\"), key);\n};\n\nexport const findValueFromFields = (data: any, key: string) => {\n  return _.get(findFieldsNode(data, key), \"value\");\n};\n\nexport const getSiteMetadataFieldData = (metaobject, field: string) => {\n  return parseJSONWithData(findValueFromFields(metaobject, field));\n};\n", "import { logger } from \"~/utils\";\n\nexport const createItemDefinitionVariables = ({ id, handle, fields }: any) => {\n  return {\n    id,\n    input: {\n      handle,\n      capabilities: {\n        publishable: {\n          status: \"ACTIVE\",\n        },\n      },\n      fields,\n    },\n  };\n};\n\nexport const updateItemDefinitionMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, {\n    variables,\n  });\n  return response.json();\n};\n\nconst query = `\nmutation MetaobjectUpdate($id: ID!, $input: MetaobjectUpdateInput!) {\n    metaobjectUpdate(id: $id, metaobject: $input) {\n      metaobject {\n        id\n        displayName\n        type\n        handle\n        capabilities {\n          publishable {\n            status\n            __typename\n          }\n         \n          __typename\n        }\n        definition {\n          id\n          name\n          displayNameKey\n          __typename\n        }\n        fields {\n          ...MetaobjectFieldFragment\n          __typename\n        }\n        __typename\n      }\n      userErrors {\n        field\n        message\n        elementIndex\n        elementKey\n        __typename\n      }\n      __typename\n    }\n  }\n  \n  fragment MetaobjectFieldFragment on MetaobjectField {\n    value\n    definition {\n      key\n      name\n      description\n      required\n      validations {\n        name\n        type\n        value\n        __typename\n      }\n      type {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  \n`;\n", "import { useMemo } from \"react\";\nimport { Box, ChoiceList, Select, TextField } from \"@shopify/polaris\";\nimport { Suspense, lazy } from \"react\";\nimport * as _ from \"lodash\";\nimport { toHTML } from \"~/utils\";\nimport { get } from \"~/utils\";\nimport SelectField from \"../Fields/SelectField\";\nimport { Await } from \"@remix-run/react\";\n\nconst MDEditor = lazy(() => import(\"@uiw/react-md-editor\"));\n\nconst MetaForm = ({ formik }) => {\n  const { values, errors } = formik;\n\n  return (\n    <Box>\n      <TextField\n        label=\"Title\"\n        name=\"meta.title\"\n        value={values.meta?.title}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.title\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.title\")}\n      />\n      <Box padding=\"2\"></Box>\n      <TextField\n        label=\"URL\"\n        name=\"meta.url\"\n        value={values.meta?.url}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.url\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.url\")}\n      />\n      <Box padding=\"2\"></Box>\n      <TextField\n        label=\"Logo\"\n        name=\"meta.logo\"\n        value={values.meta?.logo}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.logo\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.logo\")}\n      />\n      <Box padding=\"2\"></Box>\n      <TextField\n        label=\"Tagline\"\n        name=\"meta.tagline\"\n        value={values.meta?.tagline}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.tagline\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.tagline\")}\n      />\n      <Box padding=\"2\"></Box>\n      <TextField\n        label=\"Favicon\"\n        name=\"meta.favicon\"\n        value={values.meta?.favicon}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.favicon\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.favicon\")}\n      />\n      <Box padding=\"2\"></Box>\n      <TextField\n        label=\"Copyright\"\n        name=\"meta.copyright\"\n        value={values.meta?.copyright}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.copyright\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.copyright\")}\n      />\n      <Box padding=\"2\"></Box>\n      <TextField\n        label=\"Keywords\"\n        name=\"meta.keywords\"\n        value={values.meta?.keywords}\n        onChange={(value) => {\n          formik.setFieldValue(\"meta.keywords\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"meta.keywords\")}\n      />\n      <Box padding=\"2\"></Box>\n      <Suspense>\n        <Await resolve={get(values, \"meta.about\")}>\n          {(value) => (\n            <>\n              <label>About</label>\n              <Box padding=\"1\"></Box>\n              <div data-color-mode=\"light\">\n                <MDEditor\n                  value={value?.includes(\"children\") ? toHTML(value) : value}\n                  name=\"meta.about\"\n                  onChange={(e) => {\n                    formik.setFieldValue(\"meta.about\", e);\n                  }}\n                />\n                <Box padding=\"2\"></Box>\n              </div>\n            </>\n          )}\n        </Await>\n      </Suspense>\n      <Box padding=\"2\"></Box>\n    </Box>\n  );\n};\n\nexport default MetaForm;\n", "import { Box, ChoiceList, TextField } from \"@shopify/polaris\";\nimport { useMemo } from \"react\";\nimport FormBuilder from \"../Fields/FormBuilder\";\nimport { get } from \"~/utils\";\n\nconst HeaderFrom = ({ formik }) => {\n  const { values, errors } = formik;\n  const inputs = useMemo(\n    () => [\n      {\n        label: \"Logo\",\n        value: get(values, \"header.logo\"),\n        error: get(errors, \"header.logo\"),\n        type: \"text\",\n        name: \"header.logo\",\n      },\n      {\n        label: \"Search\",\n        choices: [\n          { label: \"True\", value: \"true\" },\n          { label: \"False\", value: \"false\" },\n        ],\n        error: get(errors, \"header.search\"),\n        name: \"header.search\",\n        type: \"choice\",\n        value: get(values, \"header.search\"),\n      },\n      {\n        label: \"Login\",\n        choices: [\n          { label: \"True\", value: \"true\" },\n          { label: \"False\", value: \"false\" },\n        ],\n        error: get(errors, \"header.login\"),\n        name: \"header.login\",\n        type: \"choice\",\n        value: get(values, \"header.login\"),\n      },\n    ],\n    []\n  );\n  const choices = [\n    { label: \"True\", value: \"true\" },\n    { label: \"False\", value: \"false\" },\n  ];\n  return (\n    <Box>\n      <TextField\n        label=\"Logo\"\n        name=\"header.logo\"\n        value={get(values, \"header.logo\")?.toString()}\n        onChange={(value) => {\n          formik.setFieldValue(\"header.logo\", value);\n        }}\n        autoComplete=\"off\"\n        error={get(errors, \"header.logo\")}\n      />\n      <Box padding=\"2\"></Box>\n      <ChoiceList\n        title=\"Search\"\n        choices={choices}\n        selected={[get(values, \"header.search\")?.toString()]}\n        onChange={(e) => {\n          formik.setFieldValue(\"header.search\", e);\n        }}\n      />\n      <Box padding=\"2\"></Box>\n       <ChoiceList\n        title=\"Login\"\n        choices={choices}\n        selected={[get(values, \"header.login\")?.toString()]}\n        onChange={(e) => {\n          formik.setFieldValue(\"header.login\", e);\n        }}\n      />\n      <Box padding=\"2\"></Box>\n    </Box>\n  );\n};\n\nexport default HeaderFrom;\n", "import { Box } from \"@shopify/polaris\";\nimport { Suspense, lazy, useMemo } from \"react\";\nimport { get, toHTML } from \"~/utils\";\nimport { Await } from \"@remix-run/react\";\nconst MDEditor = lazy(() => import(\"@uiw/react-md-editor\"));\n\nconst FooterForm = ({ formik }) => {\n  const { values, errors } = formik;\n\n  return (\n    <Box>\n      <Suspense>\n        <Await resolve={get(values, \"footer.widget_1\", \"\")}>\n          {(value) => (\n            <>\n              <label>Widget 1</label>\n              <Box padding=\"1\"></Box>\n              <div data-color-mode=\"light\">\n                <MDEditor\n                  value={value?.includes(\"children\") ? toHTML(value) : value}\n                  name={\"footer.widget_1\"}\n                  onChange={(e) => {\n                    formik.setFieldValue(\"footer.widget_1\", e);\n                  }}\n                />\n                <Box padding=\"2\"></Box>\n              </div>\n            </>\n          )}\n        </Await>\n      </Suspense>\n      <Suspense>\n        <Await resolve={get(values, \"footer.widget_2\", \"\")}>\n          {(value) => (\n            <>\n              <label>Widget 2</label>\n              <Box padding=\"1\"></Box>\n              <div data-color-mode=\"light\">\n                <MDEditor\n                  value={value?.includes(\"children\") ? toHTML(value) : value}\n                  name={\"footer.widget_2\"}\n                  onChange={(e) => {\n                    formik.setFieldValue(\"footer.widget_2\", e);\n                  }}\n                />\n                <Box padding=\"2\"></Box>\n              </div>\n            </>\n          )}\n        </Await>\n      </Suspense>\n      <Suspense>\n        <Await resolve={get(values, \"footer.widget_3\", \"\")}>\n          {(value) => (\n            <>\n              <label>Widget 3</label>\n              <Box padding=\"1\"></Box>\n              <div data-color-mode=\"light\">\n                <MDEditor\n                  value={value?.includes(\"children\") ? toHTML(value) : value}\n                  name={\"footer.widget_3\"}\n                  onChange={(e) => {\n                    formik.setFieldValue(\"footer.widget_3\", e);\n                  }}\n                />\n                <Box padding=\"2\"></Box>\n              </div>\n            </>\n          )}\n        </Await>\n      </Suspense>\n      <Suspense>\n        <Await resolve={get(values, \"footer.widget_4\", \"\")}>\n          {(value) => (\n            <>\n              <label>Widget 4</label>\n              <Box padding=\"1\"></Box>\n              <div data-color-mode=\"light\">\n                <MDEditor\n                  value={value?.includes(\"children\") ? toHTML(value) : value}\n                  name={\"footer.widget_4\"}\n                  onChange={(e) => {\n                    formik.setFieldValue(\"footer.widget_4\", e);\n                  }}\n                />\n                <Box padding=\"2\"></Box>\n              </div>\n            </>\n          )}\n        </Await>\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default FooterForm;\n", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n  Box,\n  Text,\n} from \"@shopify/polaris\";\nimport { get, logger, numberGenerator, truncate } from \"~/utils\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport EditIcon from \"../Icons/EditIcon\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport PageForm from \"../Form/SiteMap/PageEditor/PageForm\";\n\nconst PageMetaObject = ({ fetcher, formik }) => {\n  const resourceName = {\n    singular: \"page\",\n    plural: \"pages\",\n  };\n  const [loading, setLoading] = useState(false);\n  const [collections, setCollections] = useState([]);\n  const activatorRef = useRef<HTMLDivElement>(null);\n  const { values } = formik;\n  const { pages } = useMemo(() => values, [values]);\n\n  const onSearchCollections = async (data) => {\n    await fetcher.load(\n      `/app/search-collections?query=${_.get(data, \"query\", \"\")}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n  useEffect(() => {\n    if (_.isEmpty(collections) && fetcher.state !== \"loading\") {\n      onSearchCollections({});\n    }\n  });\n  useEffect(() => {\n    if (fetcher.data) {\n      const res = _.map(\n        _.get(fetcher.data, \"data.collections.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.title\"),\n          };\n        }\n      );\n      setCollections(res || []);\n    }\n  }, [fetcher.data, loading]);\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  const onRemove = (page) => {\n    const pagesCopy = [...pages];\n    formik.setFieldValue(\n      \"pages\",\n      pagesCopy?.filter((it) => _.get(page, \"id\") !== get(it, \"id\"))\n    );\n  };\n\n  const SortableItem = sortableElement((page, index) => (\n    <IndexTable.Row\n      id={get(page, \"id\")}\n      key={`${index}-${get(page, \"id\")}-${get(page, \"name\")}`}\n      position={index}\n    >\n      <IndexTable.Cell>\n        <ButtonGroup segmented>\n          <Button size=\"micro\">\n            <DragHandle />\n          </Button>\n          <Button\n            size=\"micro\"\n            onClick={() => {\n              onRemove(page);\n            }}\n          >\n            <DeleteIcon />\n          </Button>\n\n          <PageForm\n            pageIndex={_.findIndex(pages, { id: get(page, \"id\") })}\n            formik={formik}\n            activatorRef={activatorRef}\n            activatorElement={<EditIcon />}\n            page={page}\n            onSearchCollections={onSearchCollections}\n            collections={collections}\n            loading={loading}\n            _collections={collections}\n            onSubmit={onEdit}\n          />\n        </ButtonGroup>\n      </IndexTable.Cell>\n      <IndexTable.Cell>{get(page, \"name\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(page, \"title\")}</IndexTable.Cell>\n\n      <IndexTable.Cell>{get(page, \"style\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(page, \"handle\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(page, \"sections.length\")}</IndexTable.Cell>\n    </IndexTable.Row>\n  ));\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={pages?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"name\" },\n          { title: \"Title\" },\n          { title: \"style\" },\n          { title: \"Handle\" },\n          { title: \"Sections\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onAdd = (page, pageIndex) => {\n    formik.setFieldValue(\"pages\", [page, ...pages]);\n  };\n\n  const onEdit = (page, pageIndex) => {\n    formik.setFieldValue(`pages[${pageIndex}]`, page);\n  };\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _items = arrayMove(pages, oldIndex, newIndex);\n    formik.setFieldValue(\"pages\", _items);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text variant=\"headingMd\" as=\"h6\">\n          \n        </Text>\n\n        <PageForm\n          pageIndex={-1}\n          formik={formik}\n          activatorRef={activatorRef}\n          activatorElement={\"Add Page\"}\n          page={{\n            id: \"\",\n            name: \"\",\n            style: \"light_header\",\n            title: \"\",\n            description: \"\",\n            keywords: \"\",\n            handle: \"\",\n            sections: [],\n          }}\n          onSearchCollections={onSearchCollections}\n          collections={collections}\n          loading={loading}\n          _collections={collections}\n          onSubmit={onAdd}\n        />\n      </div>\n      <Box padding={2}></Box>\n      <LegacyCard>\n        <VerticalStack>\n          <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n            {_.map(pages, (value, index) => (\n              <SortableItem\n                key={`item-${get(value, \"id\")}-${numberGenerator()}`}\n                index={index}\n                {...value}\n              />\n            ))}\n          </SortableContainer>\n        </VerticalStack>\n      </LegacyCard>\n    </>\n  );\n};\n\nexport default PageMetaObject;\n", "import { Icon } from \"@shopify/polaris\";\nimport { DeleteMajor, DragDropMajor } from \"@shopify/polaris-icons\";\n\nfunction DeleteIcon() {\n  return <Icon source={DeleteMajor} />;\n}\n\nexport default DeleteIcon;\n", "import { EditMajor } from \"@shopify/polaris-icons\";\nimport { Icon } from \"@shopify/polaris\";\n\nfunction EditIcon() {\n  return <Icon source={EditMajor} />;\n}\n\nexport default EditIcon;\n", "import { SortableHandle } from \"react-sortable-hoc\";\nimport DragIcon from \"../Icons/DragIcon\";\n\nconst DragHandle = SortableHandle(() => <DragIcon />);\n\nexport default DragHandle", "import { Icon } from \"@shopify/polaris\";\nimport { DeleteMajor, DragDropMajor } from \"@shopify/polaris-icons\";\n\nfunction DragIcon() {\n  return <Icon source={DragDropMajor} />;\n}\n\nexport default DragIcon;\n", "import { Box, Button, Modal, Select, Text, TextField } from \"@shopify/polaris\";\nimport { useCallback,  useMemo, useState } from \"react\";\n\nimport * as _ from \"lodash\";\nimport { get, logger, map, numberGenerator, slugify } from \"~/utils\";\nimport SectionForm from \"./SectionForm\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { useToast } from \"~/utils/useToast\";\n\ninterface IError {\n  name: string;\n  handle: string;\n  style: string;\n  title: string;\n}\nconst PageForm = ({\n  page: _page,\n  activatorRef,\n  formik,\n  pageIndex,\n  _collections,\n  onSubmit,\n  activatorElement,\n  ...rest\n}) => {\n  const [active, setActive] = useState(false);\n  const [errors, setErrors] = useState({} as IError);\n  const handleSetErrors = useCallback((value) => setErrors(value), []);\n  const handleOpen = useCallback(() => setActive(true), []);\n  const [page, setPage] = useState(_page);\n  const handleSetPage = (value) => setPage(value);\n  const { toastMarkup, showToast } = useToast();\n  const handleChangeStyle = useCallback(\n    (value) => {\n      setPage({ ...page, style: value });\n    },\n    [page]\n  );\n\n  const handleClose = useCallback(() => {\n    setActive(false);\n  }, []);\n\n  const handleSubmit = () => {\n    handleSetErrors({} as IError);\n    if (!get(page, \"handle\")) {\n      handleSetErrors({ ...errors, handle: FIELD_REQUIRED });\n    }\n    if (!get(page, \"name\")) {\n      handleSetErrors({ ...errors, name: FIELD_REQUIRED });\n    }\n    if (!get(page, \"title\")) {\n      handleSetErrors({ ...errors, title: FIELD_REQUIRED });\n    }\n\n    if (!get(page, \"style\")) {\n      handleSetErrors({ ...errors, style: FIELD_REQUIRED });\n    }\n\n    if (!_.isEmpty(Object.keys(errors))) {\n      logger(errors, \"errors\");\n      return;\n    }\n\n    if (!page?.handle) {\n      return;\n    }\n\n    onSubmit({ ...page, id: numberGenerator() }, pageIndex);\n    handleClose();\n  };\n  const collections = useMemo(() => {\n    return _collections;\n  }, [rest]);\n\n  return (\n    <div>\n      <div style={{}} id={`${page?.id}-page-button`} ref={activatorRef}>\n        <Button size=\"micro\" onClick={handleOpen}>\n          {activatorElement}\n        </Button>\n      </div>\n      <Modal\n        large\n        open={active}\n        onClose={handleClose}\n        title={get(page, \"name\", \"New Page\") || \"New Page\"}\n        primaryAction={{\n          content: \"Ok\",\n          onAction: handleSubmit,\n          loading: false,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleClose,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            {toastMarkup}\n            <TextField\n              label=\"Name\"\n              value={get(page, \"name\")}\n              error={get(errors, \"name\")}\n              onChange={(e) => {\n                handleSetPage({ ...page, name: e });\n              }}\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Title\"\n              value={get(page, \"title\")}\n              error={get(errors, \"title\")}\n              onChange={(e) => {\n                handleSetPage({ ...page, title: e });\n              }}\n              onBlur={(e) => {\n                handleSetPage({\n                  ...page,\n                  handle: slugify(e?.target?.value || \"\"),\n                });\n              }}\n              autoComplete=\"off\"\n            />\n            <Select\n              label=\"Style\"\n              options={[\n                { label: \"Dark Header\", value: \"dark_header\" },\n                { label: \"Light Header\", value: \"light_header\" },\n              ]}\n              onChange={(e) => {\n                handleChangeStyle(e);\n              }}\n              value={get(page, \"style\", \"light_header\")}\n              error={get(errors, `style`)}\n            />\n            <TextField\n              label=\"Keywords\"\n              value={get(page, \"keywords\")}\n              onChange={(e) => {\n                handleSetPage({ ...page, keywords: e });\n              }}\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Handle\"\n              value={get(page, \"handle\")}\n              error={get(errors, \"handle\")}\n              onChange={(e) => {\n                handleSetPage({ ...page, handle: e });\n              }}\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Description\"\n              value={get(page, \"description\")}\n              onChange={(e) => {\n                handleSetPage({ ...page, description: e });\n              }}\n              multiline={4}\n              autoComplete=\"off\"\n            />\n            <Box padding={2}></Box>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text variant=\"headingMd\" as=\"h6\">\n                Sections\n              </Text>\n\n              <Button\n                onClick={() => {\n                  handleSetPage({\n                    ...page,\n                    sections: [\n                      ...page?.sections,\n                      {\n                        id: numberGenerator(),\n                        blocks: [\n                          {\n                            id: numberGenerator(),\n                            style: \"hero\",\n                            title: \"\",\n                            ctaLabel: \"\",\n                            ctaLink: \"\",\n                            collections: [],\n                            text: \"\",\n                          },\n                        ],\n                      },\n                    ],\n                  });\n                  showToast(\"Section added\");\n                }}\n                size=\"micro\"\n              >\n                Add section\n              </Button>\n            </div>\n\n            <div>\n              {map(get(page, `sections`), (section, sectionIndex) => (\n                <SectionForm\n                  key={`page-section-${sectionIndex}-${get(section, \"id\")}`}\n                  section={section}\n                  index={sectionIndex}\n                  formik={formik}\n                  pageIndex={pageIndex}\n                  sectionIndex={sectionIndex}\n                  handleSetPage={handleSetPage}\n                  page={page}\n                  collections={collections}\n                  {...rest}\n                />\n              ))}\n            </div>\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PageForm;\n", "import {\n  LegacyCard,\n  LegacyStack,\n  Button,\n  Collapsible,\n  Text,\n  Icon,\n} from \"@shopify/polaris\";\nimport { useState, useCallback } from \"react\";\nimport { ChevronRightMinor, ChevronDownMinor } from \"@shopify/polaris-icons\";\nimport { get } from \"~/utils\";\nimport BlocksMetaobject from \"~/components/Tables/BlocksMetaobject\";\nimport DeleteIcon from \"~/components/Icons/DeleteIcon\";\n\nfunction SectionForm({\n  sectionIndex,\n  section,\n  formik,\n  handleSetPage,\n  page,\n  pageIndex,\n  ...rest\n}) {\n  const [open, setOpen] = useState(sectionIndex == 0);\n\n  const handleToggle = useCallback(() => setOpen((open) => !open), []);\n  const [blocks, setBlocks] = useState(\n    get(page, `sections[${sectionIndex}].blocks`, [])\n  );\n\n  const handleSetBlocks = useCallback((value) => {\n    setBlocks(value);\n    const _page = { ...page };\n    _page.sections[sectionIndex].blocks = value;\n  }, []);\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <LegacyCard sectioned>\n        <LegacyStack vertical>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Button\n              size=\"micro\"\n              onClick={handleToggle}\n              ariaExpanded={open}\n              ariaControls=\"basic-collapsible\"\n            >\n              {!open ? (\n                <Icon source={ChevronRightMinor} color=\"base\" />\n              ) : (\n                <Icon source={ChevronDownMinor} color=\"base\" />\n              )}\n            </Button>\n\n            <Text variant=\"headingMd\" as=\"h6\">\n              Section {sectionIndex + 1}\n            </Text>\n\n            <Button\n              size=\"micro\"\n              onClick={() => {\n                handleSetPage({\n                  ...page,\n                  sections: get(page, \"sections\")?.filter(\n                    (it) => it?.id !== section?.id\n                  ),\n                });\n              }}\n            >\n              <DeleteIcon />\n            </Button>\n          </div>\n\n          <Collapsible\n            open={open}\n            id=\"basic-collapsible\"\n            transition={{ duration: \"500ms\", timingFunction: \"ease-in-out\" }}\n            expandOnPrint\n          >\n            <div>\n              <BlocksMetaobject\n                key={`page-section-${sectionIndex}-${get(section, \"id\")}`}\n                blocks={blocks || []}\n                sectionIndex={sectionIndex}\n                pageIndex={pageIndex}\n                formik={formik}\n                handleSetBlocks={handleSetBlocks}\n                {...rest}\n              />\n            </div>\n          </Collapsible>\n        </LegacyStack>\n      </LegacyCard>\n    </div>\n  );\n}\n\nexport default SectionForm;\n", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n  Thumbnail,\n} from \"@shopify/polaris\";\nimport { get, logger, numberGenerator } from \"~/utils\";\nimport { useEffect, useRef } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport EditIcon from \"../Icons/EditIcon\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport BlockForm from \"../Form/SiteMap/PageEditor/BlockForm\";\n\nconst BlocksMetaobject = ({\n  blocks,\n  loading: isLoading,\n  onEdit,\n  fetcher,\n  onRemove,\n  handleItemChange,\n  formik,\n  handleSwap,\n  sectionIndex,\n  pageIndex,\n  handleSetBlocks,\n  ...rest\n}) => {\n  const resourceName = {\n    singular: \"block\",\n    plural: \"blocks\",\n  };\n\n  const activatorRef = useRef<HTMLDivElement>(null);\n  const activatorRefAdd = useRef<HTMLDivElement>(null);\n\n  const remove = (id) => {\n    handleSetBlocks(blocks?.filter((b) => b?.id != id));\n  };\n\n  const add = (block) => {\n    const id = numberGenerator();\n\n    handleSetBlocks([{ ...block, id }, ...blocks]);\n  };\n\n  const edit = (block) => {\n    const index = _.findIndex(blocks, (_item) => _item?.id == block.id);\n    const otherItems = [...blocks];\n    otherItems[index] = block;\n    logger(index);\n    logger(block);\n    handleSetBlocks(otherItems);\n  };\n\n  const SortableItem = sortableElement((block, index) => (\n    <IndexTable.Row\n      id={get(block, \"id\")}\n      key={`${index}-${get(block, \"id\")}-${get(block, \"name\")}`}\n      position={index}\n    >\n      <IndexTable.Cell className=\"draggable-item\">\n        <ButtonGroup segmented>\n          <Button size=\"micro\">\n            <DragHandle />\n          </Button>\n          <Button\n            size=\"micro\"\n            onClick={() => {\n              remove(get(block, \"id\"));\n            }}\n          >\n            <DeleteIcon />\n          </Button>\n\n          <BlockForm\n            activatorRef={activatorRef}\n            activatorTitle={<EditIcon />}\n            modalTitle={\"Block\"}\n            pageIndex={pageIndex}\n            sectionIndex={sectionIndex}\n            block={block}\n            blocks={blocks}\n            onsubmit={edit}\n            formik={formik}\n            {...rest}\n          />\n        </ButtonGroup>\n      </IndexTable.Cell>\n      <IndexTable.Cell>\n        <Thumbnail\n          source={get(\n            block,\n            \"media\",\n            \"https://placehold.co/600x400/000000/FFFFFF/png\"\n          )}\n          size=\"small\"\n          alt=\"Black choker necklace\"\n        />\n      </IndexTable.Cell>\n      <IndexTable.Cell>{get(block, \"style\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(block, \"ctaLabel\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(block, \"ctaLink\")}</IndexTable.Cell>\n    </IndexTable.Row>\n  ));\n  const SortableContainer = sortableContainer(\n    ({ children, helperClass = \"draggable-item\" }) => {\n      return (\n        <IndexTable\n          resourceName={resourceName}\n          itemCount={blocks?.length || 0}\n          selectable={false}\n          headings={[\n            { title: \"\" },\n            { title: \"media\" },\n            { title: \"style\" },\n            { title: \"ctaLabel\" },\n            { title: \"ctaLink\" },\n          ]}\n        >\n          {children}\n        </IndexTable>\n      );\n    }\n  );\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const __blocks = arrayMove(blocks, oldIndex, newIndex);\n    handleSetBlocks(__blocks);\n  };\n\n  return (\n    <LegacyCard>\n      <VerticalStack>\n        <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n          {_.map(blocks, (value, index) => (\n            <SortableItem\n              key={`item-${get(value, \"id\")}-${numberGenerator()}`}\n              index={index}\n              {...{ ...value, key: index }}\n            />\n          ))}\n        </SortableContainer>\n        <div style={{ padding: 5 }}>\n          <BlockForm\n            activatorRef={activatorRefAdd}\n            activatorTitle={\"Add block\"}\n            modalTitle={\"Block\"}\n            pageIndex={pageIndex}\n            sectionIndex={sectionIndex}\n            onsubmit={add}\n            formik={formik}\n            {...rest}\n          />\n        </div>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default BlocksMetaobject;\n", "import { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { Suspense, lazy, useCallback, useMemo, useState } from \"react\";\nimport { get, logger, toHTML } from \"~/utils\";\nimport * as _ from \"lodash\";\nimport TagSearchField from \"../../Fields/TagSearchField\";\nimport { Await } from \"@remix-run/react\";\nconst MDEditor = lazy(() => import(\"@uiw/react-md-editor\"));\n\nconst BlockForm = ({\n  pageIndex,\n  sectionIndex,\n  block,\n  collections,\n  activatorRef,\n  modalTitle,\n  activatorTitle,\n  onsubmit,\n  blocks,\n  formik,\n}) => {\n  const errors = {};\n  const [active, setActive] = useState(false);\n  const handleChange = useCallback(() => setActive(!active), [active]);\n  const handleClose = useCallback(() => {\n    setActive(false);\n  }, []);\n  const handleOpen = useCallback(() => setActive(true), []);\n  const section = `pages[${pageIndex}].sections[${sectionIndex}]`;\n\n  const blockIndex = _.findIndex(blocks, {\n    id: block?.id,\n  });\n  const fieldName = `${section}.blocks[${blockIndex}]`;\n\n  const [style, setStyle] = useState(get(block, `style`, \"hero\"));\n  const handleChangeStyle = useCallback((value) => setStyle(value), []);\n\n  const [title, setTitle] = useState(get(block, `title`));\n  const handleChangeTitle = useCallback((value) => setTitle(value), []);\n\n  const [media, setMedia] = useState(get(block, `media`));\n  const handleChangeMedia = useCallback((value) => setMedia(value), []);\n\n  const [ctaLabel, setctaLabel] = useState(get(block, `ctaLabel`));\n  const handleChangectaLabel = useCallback((value) => setctaLabel(value), []);\n\n  const [ctaLink, setctaLink] = useState(get(block, `ctaLink`));\n  const handleChangectaLink = useCallback((value) => setctaLink(value), []);\n\n  const [text, setText] = useState(get(block, `text`));\n  const handleChangeText = useCallback((value) => setText(value), []);\n\n  const [collection, setCollection] = useState(get(block, `collections`, []));\n  const handleChangeCollection = useCallback((value) => {\n    setCollection(value);\n  }, []);\n\n  const handleSubmit = () => {\n    const data = {\n      style,\n      title,\n      media,\n      ctaLabel,\n      ctaLink,\n      text,\n      collections: collection,\n      id: get(block, `id`),\n    };\n    onsubmit(data);\n    handleClose();\n  };\n  const activator = (\n    <Button size=\"micro\" onClick={handleChange}>\n      {activatorTitle}\n    </Button>\n  );\n\n  return (\n    <>\n      <div style={{ height: 0, display: \"none\" }} ref={activatorRef}>\n        <Button onClick={handleOpen}>~</Button>\n      </div>\n      <Modal\n        activator={activator}\n        large\n        open={active}\n        onClose={handleClose}\n        title={modalTitle}\n        primaryAction={{\n          content: \"Ok\",\n          onAction: handleSubmit,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleClose,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <Select\n              label=\"Style\"\n              options={[\n                { label: \"Hero\", value: \"hero\" },\n                { label: \"Text Image\", value: \"text_image\" },\n                { label: \"Image Text\", value: \"image_text\" },\n                { label: \"Page Banner\", value: \"page_banner\" },\n                { label: \"Articles\", value: \"articles\" },\n                { label: \"Products\", value: \"products\" },\n                { label: \"FAQs\", value: \"q&a\" },\n                { label: \"Features\", value: \"features\" },\n                { label: \"Teams\", value: \"teams\" },\n              ]}\n              onChange={(e) => {\n                handleChangeStyle(e);\n              }}\n              value={style}\n              error={get(errors, `${fieldName}.style`)}\n            />\n            <TextField\n              label={\"Title\"}\n              value={title}\n              name={`${fieldName}.title`}\n              onChange={(e) => {\n                handleChangeTitle(e);\n              }}\n              autoComplete=\"off\"\n              error={get(errors, `${fieldName}.title`)}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label={\"Media\"}\n              value={media}\n              name={`${fieldName}.media`}\n              onChange={(e) => {\n                handleChangeMedia(e);\n              }}\n              autoComplete=\"off\"\n              error={get(errors, `${fieldName}.media`)}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label={\"ctaLabel\"}\n              value={ctaLabel}\n              name={`${fieldName}.ctaLabel`}\n              onChange={(e) => {\n                handleChangectaLabel(e);\n              }}\n              autoComplete=\"off\"\n              error={get(errors, `${fieldName}.ctaLabel`)}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label={\"ctaLink\"}\n              value={ctaLink}\n              name={`${fieldName}.ctaLink`}\n              onChange={(e) => {\n                handleChangectaLink(e);\n              }}\n              autoComplete=\"off\"\n              error={get(errors, `${fieldName}.ctaLink`)}\n            />\n            <Box padding=\"2\"></Box>\n            <Suspense>\n              <Await resolve={text}>\n                {(value) => (\n                  <>\n                    <label>{\"Text\"}</label>\n                    <Box padding=\"1\"></Box>\n                    <div data-color-mode=\"light\">\n                      <MDEditor\n                        value={\n                          value?.includes(\"children\") ? toHTML(value) : value\n                        }\n                        name={`${fieldName}.text`}\n                        onChange={(e) => {\n                          handleChangeText(e);\n                        }}\n                      />\n                      <Box padding=\"2\"></Box>\n                    </div>\n                  </>\n                )}\n              </Await>\n            </Suspense>\n            <Box padding=\"2\"></Box>\n            <TagSearchField\n              label={\"Collections\"}\n              options={_.map(\n                _.get(formik, \"values.product_collections\", []),\n                (it) => ({\n                  value: _.get(it, \"id\"),\n                  label: _.get(it, \"name\"),\n                  id: _.get(it, \"id\"),\n                  name: _.get(it, \"name\"),\n                })\n              )}\n              selectedOptions={collection}\n              handleChangeCollection={handleChangeCollection}\n            />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </>\n  );\n};\n\nexport default BlockForm;\n", "import { LegacyStack, Tag, Autocomplete } from \"@shopify/polaris\";\nimport { useState, useCallback, useMemo } from \"react\";\nimport { find, map } from \"~/utils\";\n\nconst validateOption = (options) => {\n  return (\n    map(options, (option) => ({\n      label: option?.label || option?.name,\n      value: option?.value || option?.id,\n    })) || []\n  );\n};\n\nfunction TagSearchField({\n  options: _options,\n  selectedOptions: _selected,\n  placeholder = \"Search collections...\",\n  handleChangeCollection,\n  label,\n}) {\n  const deselectedOptions = useMemo(\n    () => validateOption(_options) || [],\n    [_options]\n  );\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(\n    map(validateOption(_selected), (it) => it.value)\n  );\n\n  const handleSetSelection = useCallback((e) => {\n    setSelectedOptions(e);\n    const _collections = [];\n    map(e, (id) => {\n      const col = find(validateOption(_options), {\n        value: id,\n      });\n      if (col) {\n        _collections.push(col);\n      }\n    });\n    handleChangeCollection(_collections);\n  }, []);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [options, setOptions] = useState(deselectedOptions);\n\n  const updateText = useCallback(\n    (value: string) => {\n      setInputValue(value);\n\n      if (value === \"\") {\n        setOptions(deselectedOptions);\n        return;\n      }\n\n      const filterRegex = new RegExp(value, \"i\");\n      const resultOptions = deselectedOptions?.filter((option) =>\n        option?.label?.match(filterRegex)\n      );\n\n      setOptions(resultOptions);\n    },\n    [deselectedOptions]\n  );\n\n  const removeTag = useCallback(\n    (tag: string) => () => {\n      const options = [...selectedOptions];\n      options.splice(options?.indexOf(tag), 1);\n      setSelectedOptions(options);\n\n      handleChangeCollection(options);\n    },\n    [selectedOptions]\n  );\n\n  const verticalContentMarkup =\n    selectedOptions.length > 0 ? (\n      <LegacyStack spacing=\"extraTight\" alignment=\"center\">\n        {selectedOptions?.map((option) => {\n          let tagLabel = \"\";\n          tagLabel = option?.replace(\"_\", \" \");\n          tagLabel = titleCase(tagLabel);\n          let item = find(deselectedOptions, { value: option });\n          if (item) {\n            tagLabel = item?.label;\n          }\n          if (selectedOptions?.includes(tagLabel)) {\n            return null;\n          }\n          return (\n            <Tag key={`option${option}`} onRemove={removeTag(option)}>\n              {tagLabel}\n            </Tag>\n          );\n        })}\n      </LegacyStack>\n    ) : null;\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      label={label}\n      value={inputValue}\n      placeholder={placeholder}\n      verticalContent={verticalContentMarkup}\n      autoComplete=\"off\"\n    />\n  );\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Autocomplete\n        allowMultiple\n        options={options}\n        selected={selectedOptions}\n        textField={textField}\n        onSelect={handleSetSelection}\n        listTitle=\"Suggested collections\"\n      />\n    </div>\n  );\n\n  function titleCase(string: string) {\n    return string\n      ?.toLowerCase()\n      ?.split(\" \")\n      ?.map((word) => word?.replace(word[0], word[0]?.toUpperCase()))\n      .join(\"\");\n  }\n}\n\nexport default TagSearchField;\n", "import { Button, Toast } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport function useToast() {\n  const [active, setActive] = useState(false);\n  const [message, setMessage] = useState(\"Success\");\n  const [error, setError] = useState(false);\n  const handleSetMessage = useCallback((value) => setMessage(value), []);\n\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n  const showToast = useCallback((message, _error = false) => {\n    handleSetMessage(message);\n    if (_error) {\n      setError(true);\n    }\n    toggleActive();\n  }, []);\n  const toastMarkup = active ? (\n    <Toast\n      content={message}\n      error={error}\n      onDismiss={toggleActive}\n      duration={4500}\n    />\n  ) : null;\n\n  return {\n    toastMarkup,\n    active,\n    setActive,\n    showToast,\n  };\n\n  //   return <div>{toastMarkup}</div>;\n}\n", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n  Box,\n  Text,\n} from \"@shopify/polaris\";\nimport { get, logger, truncate } from \"~/utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport EditIcon from \"../Icons/EditIcon\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport MenuEditorForm from \"../Form/SiteMap/MenuEditor\";\n\nconst MenuMetaobject = ({ formik }) => {\n  const resourceName = {\n    singular: \"menu\",\n    plural: \"menus\",\n  };\n  const { values } = formik;\n  const menuItems = useMemo(() => get(values, 'menu.menuItems', []), [values]);\n\n  const activatorRef = useRef<HTMLDivElement>(null);\n  const onRemove = (menuItem) => {\n    const copyItems = [...menuItems];\n    formik.setFieldValue(\n      \"menu.menuItems\",\n      copyItems?.filter((it) => it?.id !== menuItem?.id)\n    );\n  };\n\n  const handleChangeMenuItems = useCallback((items) => {\n    formik.setFieldValue(\"menu.menuItems\", items);\n  }, []);\n\n  const onAdd = (menuItem) => {\n    handleChangeMenuItems([menuItem, ...menuItems]);\n  };\n\n  const onEdit = (menuItem) => {\n    const index = _.findIndex(menuItems, (_item) => _item?.id === menuItem.id);\n    formik.setFieldValue(`menu.menuItems[${index}]`, menuItem);\n  };\n\n  const SortableItem = sortableElement(({ menuItem }, index) => (\n    <IndexTable.Row\n      id={get(menuItem, \"id\")}\n      key={`${index}-${get(menuItem, \"id\")}-${get(menuItem, \"name\")}`}\n      position={index}\n    >\n      <IndexTable.Cell>\n        <ButtonGroup segmented>\n          <Button size=\"micro\">\n            <DragHandle />\n          </Button>\n          <Button\n            size=\"micro\"\n            onClick={() => {\n              onRemove(menuItem);\n            }}\n          >\n            <DeleteIcon />\n          </Button>\n          <MenuEditorForm\n            formik={formik}\n            menuItem={menuItem}\n            activatorElement={<EditIcon />}\n            activatorRef={activatorRef}\n            onSubmit={onEdit}\n          />\n        </ButtonGroup>\n      </IndexTable.Cell>\n      <IndexTable.Cell>{truncate(get(menuItem, \"name\"))}</IndexTable.Cell>\n      <IndexTable.Cell>{get(menuItem, \"page.name\")}</IndexTable.Cell>\n\n      <IndexTable.Cell>{get(menuItem, \"page.handle\")} </IndexTable.Cell>\n    </IndexTable.Row>\n  ));\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={menuItems?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"Name\" },\n          { title: \"Page Name\" },\n          { title: \"Handle\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _menuItems = arrayMove(menuItems, oldIndex, newIndex);\n    handleChangeMenuItems(_menuItems);\n  };\n  return (\n    <>\n      <Box padding={1}></Box>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text variant=\"headingMd\" as=\"h6\">\n          Menu Items\n        </Text>\n        <MenuEditorForm\n          formik={formik}\n          menuItem={{}}\n          activatorElement={\"Add MenuItem\"}\n          activatorRef={activatorRef}\n          onSubmit={onAdd}\n        />\n      </div>\n      <LegacyCard>\n        <VerticalStack>\n          <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n            {_.map(menuItems, (value, index) => (\n              <SortableItem\n                key={`menu-item-${get(value, \"id\")}-${index}`}\n                index={index}\n                menuItem={value}\n                name={value?.name}\n                id={_.get(value, \"id\")}\n              />\n            ))}\n          </SortableContainer>\n        </VerticalStack>\n      </LegacyCard>\n    </>\n  );\n};\n\nexport default MenuMetaobject;\n", "import {\n  Autocomplete,\n  Box,\n  Button,\n  Icon,\n  Modal,\n  TextContainer,\n  TextField,\n} from \"@shopify/polaris\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { get, logger, map, numberGenerator } from \"~/utils\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport { SearchMinor } from \"@shopify/polaris-icons\";\n\ninterface IError {\n  page: string;\n  name: TemplateStringsArray;\n}\nconst MenuEditorForm = ({\n  menuItem = {},\n  formik,\n  activatorElement,\n  activatorRef,\n  onSubmit,\n}) => {\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  const [name, setName] = useState(get(menuItem, \"name\", \"\"));\n  const [page, setPage] = useState(get(menuItem, \"page\", {}));\n  const handleChangeName = useCallback((value) => setName(value), []);\n  const handleChangePage = useCallback((value) => {\n    setPage(value);\n  }, []);\n  const [errors, setErrors] = useState({} as IError);\n  const handleChangeErrors = useCallback((value) => setErrors(value), []);\n\n  const pages = useMemo(() => {\n    return get(formik, \"values.pages\");\n  }, [formik.values]);\n\n  const deselectedOptions = useMemo(\n    () =>\n      map(get(formik, \"values.pages\"), (item) => ({\n        value: get(item, \"id\"),\n        label: get(item, \"name\"),\n      })),\n    [formik.values]\n  );\n\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [options, setOptions] = useState(deselectedOptions);\n  const [loading, setLoading] = useState(false);\n\n  const updateText = useCallback(\n    (value: string) => {\n      setInputValue(value);\n\n      if (!loading) {\n        setLoading(true);\n      }\n\n      setTimeout(() => {\n        if (value === \"\") {\n          setOptions(deselectedOptions);\n          setLoading(false);\n          return;\n        }\n        const filterRegex = new RegExp(value, \"i\");\n        const resultOptions = deselectedOptions.filter((option) =>\n          option.label.match(filterRegex)\n        );\n        setOptions(resultOptions);\n        setLoading(false);\n      }, 300);\n    },\n    [deselectedOptions, loading]\n  );\n  const updateSelection = useCallback(\n    (selected: string[]) => {\n      const selectedPage = pages?.filter(\n        (it) => it?.id === get(selected, \"[0]\")\n      );\n\n      handleChangePage({\n        id: get(selectedPage, \"[0].id\"),\n        handle: get(selectedPage, \"[0].handle\"),\n        name: get(selectedPage, \"[0].name\"),\n      });\n\n      const selectedText = selected.map((selectedItem) => {\n        const matchedOption = options.find((option) => {\n          return option.value.match(selectedItem);\n        });\n        return matchedOption && matchedOption.label;\n      });\n      setSelectedOptions(selected);\n      setInputValue(selectedText[0] || \"\");\n    },\n    [options]\n  );\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      label=\"Page\"\n      value={inputValue}\n      prefix={<Icon source={SearchMinor} tone=\"base\" />}\n      placeholder={get(page, \"name\", \"Search\")}\n      autoComplete=\"off\"\n      error={get(errors, \"page\")}\n    />\n  );\n  const handleSubmit = () => {\n    setErrors({} as IError);\n    if (!page?.handle) {\n      return handleChangeErrors({ ...errors, page: FIELD_REQUIRED });\n    }\n\n    if (!name) {\n      return handleChangeErrors({ ...errors, name: FIELD_REQUIRED });\n    }\n\n    onSubmit({ page, name, id: get(menuItem, \"id\", numberGenerator()) });\n    handleClose();\n  };\n\n  const emptyState = (\n    <React.Fragment>\n      <Icon source={SearchMinor} />\n      <div style={{ textAlign: \"center\" }}>\n        <TextContainer>Could not find any results</TextContainer>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <div>\n      <div style={{}} id={`${page?.id}-page-button`} ref={activatorRef}>\n        <Button size=\"micro\" onClick={handleOpen}>\n          {activatorElement}\n        </Button>\n      </div>\n      <Modal\n        large\n        open={active}\n        onClose={handleClose}\n        title={get(page, \"name\", \"New Page\") || \"New Page\"}\n        primaryAction={{\n          content: \"Ok\",\n          onAction: handleSubmit,\n          loading: false,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleClose,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <TextField\n              label=\"Name\"\n              value={name}\n              error={get(errors, \"name\")}\n              onChange={(e) => {\n                handleChangeName(e);\n              }}\n              autoComplete=\"off\"\n            />\n            <Box padding={\"1\"} />\n            <Autocomplete             \n              options={options}\n              selected={selectedOptions}\n              onSelect={updateSelection}\n              emptyState={emptyState}\n              loading={loading}\n              textField={textField}\n            />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\nexport default MenuEditorForm;\n", "import { useCallback, useMemo, useState } from \"react\";\n\nexport const useHandleToggleModal = () => {\n  const [active, setActive] = useState(false);\n  const handleClose = useCallback(() => {\n    setActive(false);\n  }, []);\n  const handleOpen = useCallback(() => setActive(true), []);\n  return useMemo(\n    () => ({ active, handleClose, handleOpen }),\n    [active, handleClose, handleOpen]\n  );\n};\n", "import { Button, Collapsible, Icon, Text } from \"@shopify/polaris\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport { ChevronRightMinor, ChevronDownMinor } from \"@shopify/polaris-icons\";\n\nconst Accordion = ({ children, title }) => {\n  const { active: open, handleClose, handleOpen } = useHandleToggleModal();\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Button\n          size=\"micro\"\n          onClick={open ? handleClose : handleOpen}\n          ariaExpanded={open}\n          ariaControls=\"basic-collapsible\"\n        >\n          {!open ? (\n            <Icon source={ChevronRightMinor} color=\"base\" />\n          ) : (\n            <Icon source={ChevronDownMinor} color=\"base\" />\n          )}\n        </Button>\n        <Text variant=\"headingMd\" as=\"h6\">\n          &nbsp;&nbsp;&nbsp; {title}\n        </Text>\n      </div>\n      <Collapsible\n        open={open}\n        id=\"basic-collapsible\"\n        transition={{ duration: \"500ms\", timingFunction: \"ease-in-out\" }}\n        expandOnPrint\n      >\n        {children}\n      </Collapsible>\n    </>\n  );\n};\n\nexport default Accordion;\n", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n  HorizontalStack,\n  Box,\n  Text,\n} from \"@shopify/polaris\";\nimport { get, logger, truncate } from \"~/utils\";\nimport { useMemo, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n  SortableHandle,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport FaqForm from \"../Form/SiteMap/FaqForm\";\n\nconst FaqMetaObjects = ({ formik, faqFetcher: fetcher }) => {\n  const resourceName = {\n    singular: \"faq\",\n    plural: \"faqs\",\n  };\n\n  const { faq: faqs = [] } = useMemo(\n    () => get(formik, \"values\"),\n    [formik.values]\n  );\n\n  const onRemove = (id) => {\n    formik.setFieldValue(\n      \"faq\",\n      faqs?.filter((it) => get(it, \"id\") !== id)\n    );\n  };\n\n  const SortableItem = sortableElement((faq, type, index) => (\n    <IndexTable.Row\n      id={get(faq, \"id\")}\n      key={`${index}-${get(faq, \"id\")}-${get(faq, \"name\")}`}\n      position={index}\n    >\n      <IndexTable.Cell>\n        <ButtonGroup segmented>\n          <Button size=\"micro\">\n            <DragHandle />\n          </Button>\n          <Button\n            size=\"micro\"\n            onClick={() => {\n              onRemove(get(faq, \"id\"));\n            }}\n          >\n            <DeleteIcon />\n          </Button>\n          {/* <PropertyMetafieldForm\n              activatorTitle={<EditIcon />}\n              fetcher={fetcher}\n              onAdd={onEdit}\n              values={faq}\n            /> */}\n        </ButtonGroup>\n      </IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"name\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"type\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"id\")}</IndexTable.Cell>\n    </IndexTable.Row>\n  ));\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={faqs?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"Name\" },\n          { title: \"Type\" },\n          { title: \"MetaObject Id\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _items = arrayMove(faqs, oldIndex, newIndex);\n    formik.setFieldValue(\"faq\", _items);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text variant=\"headingMd\" as=\"h6\">\n          &nbsp;\n        </Text>\n\n        <FaqForm fetcher={fetcher} activatorTitle={\"Add FAQ\"} formik={formik} />\n      </div>\n      <Box padding={2}></Box>\n      <LegacyCard>\n        <VerticalStack>\n          <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n            {_.map(faqs, (value, index) => (\n              <SortableItem\n                key={`item-${get(value, 'id')}`}\n                index={index}\n                item={_.get(value, \"item\")}\n                name={value?.name}\n                id={_.get(value, \"id\")}\n                value={value}\n                type={get(value, \"type\")}\n              />\n            ))}\n          </SortableContainer>\n        </VerticalStack>\n      </LegacyCard>\n    </>\n  );\n};\n\nexport default FaqMetaObjects;\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport * as _ from \"lodash\";\nimport { Box, Button, Modal } from \"@shopify/polaris\";\nimport SelectField from \"../Fields/SelectField\";\nimport { get } from \"~/utils\";\n\nconst FaqForm = ({ fetcher, activatorTitle, formik }) => {\n  const [faq, setFaq] = useState();\n  const handleSetFaq = useCallback((value) => setFaq(value), []);\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  const [loading, setLoading] = useState(false);\n  const handleLoading = useCallback((value) => setLoading(value), []);\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const [error, setError] = useState();\n\n  const handleSelectedOption = useCallback(\n    (value) => {\n      const _faq = options?.filter((it) => {\n        return get(it, \"value\") == get(value, \"[0]\");\n      });\n\n      if (_faq) {\n        handleSetFaq({\n          name: get(_faq, \"[0].label\"),\n          id: get(value, \"[0]\"),\n          type: \"q_a\",\n        });\n      }\n\n      setSelectedOptions(value);\n    },\n    [options]\n  );\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data, loading]);\n\n  const onSearch = async (data) => {\n    await fetcher.load(\n      `/app/search-metaobjects/q_a?query=${_.get(data, \"query\")}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  const onSubmit = () => {\n    if (faq) {\n      formik.setFieldValue(\"faq\", [faq, ...get(formik, \"values.faq\")]);\n    }\n    handleClose();\n  };\n  const activator = (\n    <Button size=\"micro\" onClick={handleOpen}>\n      {activatorTitle}\n    </Button>\n  );\n\n  return (\n    <Modal\n      activator={activator}\n      open={active}\n      onClose={handleClose}\n      title=\"FAQ\"\n      primaryAction={{\n        content: \"Ok\",\n        onAction: onSubmit,\n      }}\n      secondaryActions={[\n        {\n          content: \"Cancel\",\n          onAction: handleClose,\n        },\n      ]}\n    >\n      <Modal.Section>\n        <Box>\n          <Box padding=\"2\"></Box>\n          <SelectField\n            onSearch={onSearch}\n            options={options}\n            loading={loading}\n            label={\"Select Item (Type First Letters to Search)\"}\n            selectedOptions={selectedOptions}\n            setSelectedOptions={handleSelectedOption}\n            error={error}\n            placeholder={\"search..\"}\n          />\n          <Box padding=\"2\"></Box>\n        </Box>\n      </Modal.Section>\n    </Modal>\n  );\n};\n\nexport default FaqForm;\n", "import { Autocomplete, Icon } from \"@shopify/polaris\";\nimport { SearchMinor } from \"@shopify/polaris-icons\";\nimport { useState, useCallback } from \"react\";\n\nfunction SelectField({\n  options,\n  loading,\n  selectedOptions,\n  setSelectedOptions,\n  onSearch,\n  error,\n  placeholder,\n  label\n}) {\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const updateText = useCallback(\n    (value: string) => {\n      setInputValue(value);\n\n      setTimeout(() => {\n        \n        onSearch({ query: value });\n      }, 300);\n    },\n    [loading]\n  );\n\n  const updateSelection = useCallback(\n    (selected: string[]) => {\n      const selectedText = selected?.map((selectedItem) => {\n        const matchedOption = options?.find((option) => {\n          return option?.value?.match(selectedItem);\n        });\n        return matchedOption && matchedOption.label;\n      });\n      setSelectedOptions(selected);\n      setInputValue(selectedText[0] || \"\");\n    },\n    [options]\n  );\n\n  const textField = (\n    <Autocomplete.TextField\n      onChange={updateText}\n      label={label}\n      value={inputValue}\n      prefix={<Icon source={SearchMinor} color=\"base\" />}\n      placeholder={placeholder}\n      autoComplete=\"off\"\n      error={error}\n    />\n  );\n\n  return (\n    <div>\n      <Autocomplete\n        options={options}\n        selected={selectedOptions}\n        onSelect={updateSelection}\n        loading={loading}\n        textField={textField}\n      />\n    </div>\n  );\n}\n\nexport default SelectField;\n", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n  Box,\n  Text,\n} from \"@shopify/polaris\";\nimport { get } from \"~/utils\";\nimport { useMemo,  } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport ArticleForm from \"../Form/SiteMap/ArticleForm\";\n\nconst ArticleMetaobject = ({ formik, faqFetcher: fetcher }) => {\n  const resourceName = {\n    singular: \"article\",\n    plural: \"articles\",\n  };\n\n  const { articles = [] } = useMemo(\n    () => get(formik, \"values\"),\n    [formik.values]\n  );\n\n  const onRemove = (id) => {\n    formik.setFieldValue(\n      \"articles\",\n      articles?.filter((it) => get(it, \"id\") !== id)\n    );\n  };\n\n  const SortableItem = sortableElement((faq, type, index) => (\n    <IndexTable.Row\n      id={get(faq, \"id\")}\n      key={`${index}-${get(faq, \"id\")}-${get(faq, \"name\")}-${type}`}\n      position={index}\n    >\n      <IndexTable.Cell>\n        <ButtonGroup segmented>\n          <Button size=\"micro\">\n            <DragHandle />\n          </Button>\n          <Button\n            size=\"micro\"\n            onClick={() => {\n              onRemove(get(faq, \"id\"));\n            }}\n          >\n            <DeleteIcon />\n          </Button>\n        </ButtonGroup>\n      </IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"name\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"type\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"id\")}</IndexTable.Cell>\n    </IndexTable.Row>\n  ));\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={articles?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"Name\" },\n          { title: \"Type\" },\n          { title: \"MetaObject Id\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _items = arrayMove(articles, oldIndex, newIndex);\n    formik.setFieldValue(\"articles\", _items);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text variant=\"headingMd\" as=\"h6\">\n         &nbsp; \n        </Text>\n\n        <ArticleForm\n          fetcher={fetcher}\n          activatorTitle={\"Add Article\"}\n          formik={formik}\n        />\n      </div>\n      <Box padding={2}></Box>\n      <LegacyCard>\n        <VerticalStack>\n          <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n            {_.map(articles, (value, index) => (\n              <SortableItem\n                key={`item-${get(value, 'name')}-${index}`}\n                index={index}\n                item={_.get(value, \"item\")}\n                name={value?.name}\n                id={_.get(value, \"id\")}\n                value={value}\n                type={get(value, \"type\")}\n              />\n            ))}\n          </SortableContainer>\n        </VerticalStack>\n      </LegacyCard>\n    </>\n  );\n};\n\nexport default ArticleMetaobject;\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport * as _ from \"lodash\";\nimport { Box, Button, Modal } from \"@shopify/polaris\";\nimport SelectField from \"../Fields/SelectField\";\nimport { get } from \"~/utils\";\n\nconst ArticleForm = ({ fetcher, activatorTitle, formik }) => {\n  const [faq, setFaq] = useState();\n  const handleSetFaq = useCallback((value) => setFaq(value), []);\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  const [loading, setLoading] = useState(false);\n  const handleLoading = useCallback((value) => setLoading(value), []);\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const [error, setError] = useState();\n\n  const handleSelectedOption = useCallback(\n    (value) => {\n      const _faq = options?.filter((it) => {\n        return get(it, \"value\") == get(value, \"[0]\");\n      });\n\n      if (_faq) {\n        handleSetFaq({\n          name: get(_faq, \"[0].label\"),\n          id: get(value, \"[0]\"),\n          type: \"article\",\n        });\n      }\n\n      setSelectedOptions(value);\n    },\n    [options]\n  );\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data, loading]);\n\n  const onSearch = async (data) => {\n    await fetcher.load(\n      `/app/search-metaobjects/article?query=${_.get(data, \"query\")}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  const onSubmit = () => {\n    if (faq) {\n      formik.setFieldValue(\"articles\", [faq, ...get(formik, \"values.articles\")]);\n    }\n    handleClose();\n  };\n  const activator = (\n    <Button size=\"micro\" onClick={handleOpen}>\n      {activatorTitle}\n    </Button>\n  );\n\n  return (\n    <Modal\n      activator={activator}\n      open={active}\n      onClose={handleClose}\n      title=\"Article\"\n      primaryAction={{\n        content: \"Ok\",\n        onAction: onSubmit,\n      }}\n      secondaryActions={[\n        {\n          content: \"Cancel\",\n          onAction: handleClose,\n        },\n      ]}\n    >\n      <Modal.Section>\n        <Box>\n          <Box padding=\"2\"></Box>\n          <SelectField\n            onSearch={onSearch}\n            options={options}\n            loading={loading}\n            label={\"Select Item (Type First Letters to Search)\"}\n            selectedOptions={selectedOptions}\n            setSelectedOptions={handleSelectedOption}\n            error={error}\n            placeholder={\"search..\"}\n          />\n          <Box padding=\"2\"></Box>\n        </Box>\n      </Modal.Section>\n    </Modal>\n  );\n};\n\nexport default ArticleForm;\n", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n  Box,\n  Text,\n} from \"@shopify/polaris\";\nimport { get, logger, truncate } from \"~/utils\";\nimport { useMemo, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport CollectionForm from \"../Form/SiteMap/CollectionForm\";\n\nconst CollectionMetaobject = ({ formik, faqFetcher: fetcher }) => {\n  const resourceName = {\n    singular: \"collection\",\n    plural: \"collections\",\n  };\n\n  const product_collections = useMemo(\n    () => get(formik, \"values.product_collections\", []),\n    [formik.values]\n  );\n\n  const onRemove = (id) => {\n    formik.setFieldValue(\n      \"product_collections\",\n      product_collections?.filter((it) => get(it, \"id\") !== id)\n    );\n  };\n\n  const SortableItem = sortableElement((faq, type, index) => (\n    <IndexTable.Row\n      id={get(faq, \"id\")}\n      key={`${index}-${get(faq, \"id\")}-${get(faq, \"name\")}`}\n      position={index}\n    >\n      <IndexTable.Cell>\n        <ButtonGroup segmented>\n          <Button size=\"micro\">\n            <DragHandle />\n          </Button>\n          <Button\n            size=\"micro\"\n            onClick={() => {\n              onRemove(get(faq, \"id\"));\n            }}\n          >\n            <DeleteIcon />\n          </Button>\n        </ButtonGroup>\n      </IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"name\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"type\")}</IndexTable.Cell>\n      <IndexTable.Cell>{get(faq, \"id\")}</IndexTable.Cell>\n    </IndexTable.Row>\n  ));\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={product_collections?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"Name\" },\n          { title: \"Type\" },\n          { title: \"MetaObject Id\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _items = arrayMove(product_collections, oldIndex, newIndex);\n    formik.setFieldValue(\"product_collections\", _items);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text variant=\"headingMd\" as=\"h6\">\n          &nbsp;\n        </Text>\n\n        <CollectionForm\n          fetcher={fetcher}\n          activatorTitle={\"Add collection\"}\n          formik={formik}\n        />\n      </div>\n      <Box padding={2}></Box>\n      <LegacyCard>\n        <VerticalStack>\n          <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n            {_.map(product_collections, (value, index) => (\n              <SortableItem\n                key={`item-${get(value, 'id')}-${index}`}\n                index={index}\n                item={_.get(value, \"item\")}\n                name={value?.name}\n                id={_.get(value, \"id\")}\n                value={value}\n                type={get(value, \"type\")}\n              />\n            ))}\n          </SortableContainer>\n        </VerticalStack>\n      </LegacyCard>\n    </>\n  );\n};\n\nexport default CollectionMetaobject;\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport * as _ from \"lodash\";\nimport { Box, Button, Modal } from \"@shopify/polaris\";\nimport SelectField from \"../Fields/SelectField\";\nimport { get } from \"~/utils\";\n\nconst CollectionForm = ({ fetcher, activatorTitle, formik }) => {\n  const [faq, setFaq] = useState();\n  const handleSetFaq = useCallback((value) => setFaq(value), []);\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const [error, setError] = useState();\n\n  const handleSelectedOption = useCallback(\n    (value) => {\n      const _faq = options?.filter((it) => {\n        return get(it, \"value\") == get(value, \"[0]\");\n      });\n\n      if (_faq) {\n        handleSetFaq({\n          name: get(_faq, \"[0].label\"),\n          id: get(value, \"[0]\"),\n          type: \"collection\",\n        });\n      }\n\n      setSelectedOptions(value);\n    },\n    [options]\n  );\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const res = _.map(\n        _.get(fetcher.data, \"data.collections.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.title\"),\n          };\n        }\n      );\n      setOptions(res || []);\n    }\n  }, [fetcher.data, loading]);\n\n  const onSearch = async (data) => {\n    await fetcher.load(\n      `/app/search-collections?query=${_.get(data, \"query\")}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  const onSubmit = () => {\n    if (faq) {\n      formik.setFieldValue(\"product_collections\", [\n        faq,\n        ...get(formik, \"values.product_collections\", []),\n      ]);\n    }\n    handleClose();\n  };\n  const activator = (\n    <Button size=\"micro\" onClick={handleOpen}>\n      {activatorTitle}\n    </Button>\n  );\n\n  return (\n    <Modal\n      activator={activator}\n      open={active}\n      onClose={handleClose}\n      title=\"Collection\"\n      primaryAction={{\n        content: \"Ok\",\n        onAction: onSubmit,\n      }}\n      secondaryActions={[\n        {\n          content: \"Cancel\",\n          onAction: handleClose,\n        },\n      ]}\n    >\n      <Modal.Section>\n        <Box>\n          <Box padding=\"2\"></Box>\n          <SelectField\n            onSearch={onSearch}\n            options={options}\n            loading={loading}\n            label={\"Select Item (Type First Letters to Search)\"}\n            selectedOptions={selectedOptions}\n            setSelectedOptions={handleSelectedOption}\n            error={error}\n            placeholder={\"search..\"}\n          />\n          <Box padding=\"2\"></Box>\n        </Box>\n      </Modal.Section>\n    </Modal>\n  );\n};\n\nexport default CollectionForm;\n", "import { json } from \"@remix-run/node\";\nimport {\n  Await,\n  useActionData,\n  useFetcher,\n  useLoaderData,\n  useNavigate,\n  useSubmit } from\n\"@remix-run/react\";\nimport {\n  Box,\n  Card,\n  Layout,\n  Page,\n  Text,\n  TextField,\n  VerticalStack } from\n\"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport {\n  Suspense,\n  lazy,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState } from\n\"react\";\nimport { authenticate } from \"~/shopify.server\";\nimport { get, isValidDate, toHTML } from \"~/utils\";\nimport SaveAppBar from \"~/components/Form/SaveAppBar\";\nimport { getMetaobjectQuery } from \"~/graphql/metaobjects/metaobjectQuery\";\nimport useStorefrontFetch from \"~/utils/useStorefrontFetch\";\nimport {\n  createFieldValue,\n  findFieldsNode,\n  findValueFromFields,\n  getFieldData,\n  getSiteMetadataFieldData,\n  parseJSON } from\n\"~/utils/metaobjects\";\nimport {\n  createItemDefinitionVariables,\n  updateItemDefinitionMutation } from\n\"~/graphql/metaobjects/itemDefinationMutation\";\nimport MetaForm from \"~/components/Form/SiteMap/MetaForm\";\nimport mkecss from \"@uiw/react-md-editor/markdown-editor.css\";\nimport mkdn from \"@uiw/react-markdown-preview/markdown.css\";\nimport { useFormik } from \"formik\";\nimport styles from \"../components/Views/styles.css\";\nimport TagSearchField from \"~/components/Form/Fields/TagSearchField\";\nimport ImageForm from \"~/components/Form/Product/ImageForm\";\nimport ImageGrid from \"~/components/ImageGrid\";\nimport { useToast } from \"~/utils/useToast\";\nimport FormLoader from \"~/components/Loaders/FormLoader\";\nconst MDEditor = lazy(() => import(\"@uiw/react-md-editor\"));\nexport const links = () => [\n{ rel: \"stylesheet\", href: mkecss },\n{ rel: \"stylesheet\", href: mkdn },\n{ rel: \"stylesheet\", href: styles }];\n\n\nexport async function loader({ request, params }) {\n  const response = await useStorefrontFetch(\n    JSON.stringify({\n      query: getMetaobjectQuery,\n      variables: {\n        metaobjectHandleInput: {\n          handle: params.handle,\n          type: \"article\"\n        }\n      }\n    })\n  );\n  const data = await response.json();\n  const metaobject = _.get(data, \"data.metaobject\");\n\n  let title = findValueFromFields(metaobject, \"title\");\n  let authors = parseJSON(findValueFromFields(metaobject, \"authors\"));\n  let categories = parseJSON(findValueFromFields(metaobject, \"categories\"));\n  let content = findValueFromFields(metaobject, \"content\");\n  let media = findValueFromFields(metaobject, \"media\");\n  let content_MD = findValueFromFields(metaobject, \"content_md\");\n  const additional_media =\n  findValueFromFields(metaobject, \"additional_media\") || \"\";\n  const created_at = findValueFromFields(metaobject, \"created_at\");\n  return json(\n    {\n      title,\n      authors,\n      categories,\n      content: content,\n      content_MD: content_MD,\n      media,\n      additional_media,\n      created_at,\n      handle: params.handle,\n      metaobject: metaobject,\n      type: \"article\"\n    },\n    {\n      headers: {\n        \"Cache-Control\": \"no-store, no-cache, must-revalidate\"\n      }\n    }\n  );\n}\n\nexport async function action({ request, params }) {\n  const { admin } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData())\n  };\n  const id = _.get(data, \"id\");\n  const handle = _.get(data, \"handle\");\n  const created_at = _.get(data, \"created_at\");\n\n  let fields: {key: string;value: string;}[] = [\n  {\n    key: \"title\",\n    value: _.get(data, \"title\")\n  },\n  {\n    key: \"content\",\n    value: _.get(data, \"content\", \"\")\n  },\n  {\n    key: \"authors\",\n    value: _.get(data, \"authors\")\n  },\n  {\n    key: \"categories\",\n    value: _.get(data, \"categories\")\n  },\n  {\n    key: \"content_md\",\n    value: _.get(data, \"content_MD\", \"\")\n  },\n  {\n    key: \"media\",\n    value: _.get(data, \"media\")\n  },\n  {\n    key: \"additional_media\",\n    value: _.get(data, \"additional_media\")\n  },\n  {\n    key: \"created_at\",\n    value: isValidDate(created_at) ? created_at : new Date()\n  }];\n\n\n  const variables = createItemDefinitionVariables({\n    id,\n    handle,\n    fields\n  });\n  const response = await updateItemDefinitionMutation({\n    graphql: admin.graphql,\n    variables\n  });\n  const errors = response?.data?.metaobjectUpdate?.userErrors;\n  if (errors?.length) {\n    return json({ errors }, { status: 422 });\n  }\n  return json({ data: _.get(response, \"data\") });\n}\n\nexport default function ArticlePage() {\n  const {\n    title,\n    authors,\n    categories,\n    content,\n    content_MD,\n    media,\n    handle,\n    metaobject,\n    created_at,\n    additional_media\n  } = useLoaderData();\n  const [formDirty, setFormDirty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [allAuthors, _setAllAuthors] = useState([]);\n  const setAllAuthors = useCallback((value) => _setAllAuthors(value), []);\n\n  const [allCategories, _setCategories] = useState([]);\n  const setAllCategories = useCallback((value) => _setCategories(value), []);\n\n  const actionData = useActionData();\n  const authorFetcher = useFetcher();\n  const categoriesFetcher = useFetcher();\n  const navigate = useNavigate();\n  const handleLoadingChange = useCallback((value) => setLoading(value), []);\n  const handleFormDirty = useCallback(() => setFormDirty(true), []);\n  const onSearchCategories = async (data: any) => {\n    await categoriesFetcher.load(\n      `/app/search-metaobjects/article_category?query=${_.get(\n        data,\n        \"query\"\n      )}&d=${new Date().toString()}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  const { toastMarkup, showToast } = useToast();\n  useEffect(() => {\n    handleLoadingChange(false);\n\n    if (_.get(actionData, \"errors\")) {\n      return showToast(\n        `Something went wrong. ${JSON.stringify(\n          _.get(actionData, \"errors[0].message\")\n        )}`,\n        true\n      );\n    } else {\n      if (formik.dirty) {\n        showToast(\"Updated successfully\");\n      }\n    }\n    setFormDirty(false);\n  }, [actionData]);\n\n  const onSearchAuthors = async (data: any) => {\n    await authorFetcher.load(\n      `/app/search-metaobjects/author?query=${_.get(\n        data,\n        \"query\"\n      )}&d=${new Date().toString()}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n  useEffect(() => {\n    onSearchAuthors({});\n    onSearchCategories({});\n  }, []);\n\n  useEffect(() => {\n    if (categoriesFetcher.data) {\n      const o = _.map(\n        _.get(categoriesFetcher.data, \"data.metaobjects.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.displayName\")\n          };\n        }\n      );\n      setAllCategories(o);\n    }\n  }, [categoriesFetcher.data]);\n\n  useEffect(() => {\n    if (authorFetcher.data) {\n      const o = _.map(\n        _.get(authorFetcher.data, \"data.metaobjects.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.displayName\")\n          };\n        }\n      );\n      setAllAuthors(o);\n    }\n  }, [authorFetcher.data]);\n  const submit = useSubmit();\n\n  const initialValues = useMemo(\n    () => ({\n      id: _.get(metaobject, \"id\"),\n      title,\n      authors: !_.isEmpty(authors) ? authors : [],\n      categories: !_.isEmpty(categories) ? categories : [],\n      content,\n      content_MD,\n      media: media ? [media] : [],\n      handle\n    }),\n    [metaobject, title, authors, categories, content, media, handle]\n  );\n\n  const formik = useFormik({\n    initialValues,\n    validateOnChange: false,\n    onSubmit: (values) => {\n      handleLoadingChange(true);\n      const data = {\n        id: _.get(metaobject, \"id\"),\n        handle: _.get(metaobject, \"handle\"),\n        created_at: created_at,\n        additional_media: additional_media,\n        title: values.title,\n        authors: JSON.stringify(_.map(values.authors, (it) => it.value || it)),\n        categories: JSON.stringify(\n          _.map(values.categories, (it) => it.value || it)\n        ),\n        content: values.content,\n        content_MD: values.content_MD,\n        media: values.media?.length ? _.get(values, \"media[0]\") : \"\"\n      };\n      submit(data, { method: \"post\" });\n    }\n  });\n\n  const { values } = useMemo(() => formik, [formik]);\n\n  useEffect(() => {\n    handleLoadingChange(false);\n    setFormDirty(false);\n    formik.resetForm({ values: values });\n  }, [actionData]);\n\n  return (\n    <Page\n      backAction={{ content: \"Sites\", url: \"/app/articles\" }}\n      title={_.get(metaobject, \"name\", \"\")}\n      subtitle=\"Article\"\n      compactTitle\n      secondaryActions={[{}]}>\n\n      <Layout>\n        <Layout.Section>\n          <Card>\n            {formDirty || loading ?\n            <SaveAppBar\n              saveAction={formik.handleSubmit}\n              loading={loading}\n              discardAction={() => {\n                navigate(`/app/articles`);\n              }} /> :\n\n            null}\n            {toastMarkup}\n            <VerticalStack gap=\"3\">\n              <TextField\n                label=\"Title\"\n                name=\"title\"\n                value={values.title}\n                onChange={(value) => {\n                  formik.setFieldValue(\"title\", value);\n                  handleFormDirty();\n                }}\n                autoComplete=\"off\" />\n\n              <Suspense fallback={<FormLoader />}>\n                <Await resolve={values.content_MD}>\n                  {(value) =>\n                  <>\n                      <label>{\"Content\"}</label>\n                      <div data-color-mode=\"light\">\n                        <MDEditor\n                        value={\n                        value?.includes(\"children\") ? toHTML(value) : value}\n\n                        name={`content_MD`}\n                        onChange={(e) => {\n                          formik.setFieldValue(\"content_MD\", e);\n                          handleFormDirty();\n                        }} />\n\n                        <Box padding=\"2\"></Box>\n                      </div>\n                    </>}\n\n                </Await>\n              </Suspense>\n              <Suspense fallback={<FormLoader />}>\n                <Await resolve={values.content}>\n                  {(value) =>\n                  <>\n                      <label>{\"Content in rich text format (not editable)\"}</label>\n                      <div data-color-mode=\"light\">\n                        <MDEditor\n                        value={\n                        value?.includes(\"children\") ? toHTML(value) : value}\n\n                        name={`content`}\n                        onChange={(e) => {\n                          alert('This content is not editable');\n                        }} />\n\n                        <Box padding=\"2\"></Box>\n                      </div>\n                    </>}\n\n                </Await>\n              </Suspense>\n            </VerticalStack>\n            {!allCategories?.length || !allAuthors.length ?\n            <FormLoader /> :\n            null}\n            {allCategories?.length ?\n            <TagSearchField\n              label={\"Categories\"}\n              options={_.map(allCategories, (it) => ({\n                value: _.get(it, \"value\"),\n                label: _.get(it, \"label\"),\n                id: _.get(it, \"value\"),\n                name: _.get(it, \"label\")\n              }))}\n              placeholder=\"Selected categories\"\n              selectedOptions={_.filter(allCategories, (obj) =>\n              _.get(formik, \"values.categories\", [])?.includes(obj.value)\n              )}\n              handleChangeCollection={(e) => {\n                formik.setFieldValue(\"categories\", e);\n                handleFormDirty();\n              }} /> :\n\n            null}\n            <Box padding=\"2\"></Box>\n            {allAuthors?.length ?\n            <TagSearchField\n              label={\"Authors\"}\n              options={_.map(allAuthors, (it) => ({\n                value: _.get(it, \"value\"),\n                label: _.get(it, \"label\"),\n                id: _.get(it, \"value\"),\n                name: _.get(it, \"label\")\n              }))}\n              placeholder=\"Select authors\"\n              selectedOptions={_.filter(allAuthors, (obj) =>\n              _.get(formik, \"values.authors\", [])?.includes(obj.value)\n              )}\n              handleChangeCollection={(e) => {\n                formik.setFieldValue(\"authors\", e);\n                handleFormDirty();\n              }} /> :\n\n            null}\n            <Box padding=\"2\"></Box>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              }}>\n\n              <Text variant=\"headingMd\" as=\"h6\">\n                Main Media\n              </Text>\n\n              <ImageForm\n                activatorTitle={`${\n                get(formik, \"values.media\", [])?.length ? \"Edit\" : \"Add\"\n                } Media`}\n                onAdd={(value: string) => {\n                  formik.setFieldValue(\"media\", [value]);\n                  handleFormDirty();\n                }} />\n\n            </div>\n            <ImageGrid\n              images={get(formik, \"values.media\", [])}\n              onRemove={(image: string) => {\n                formik.setFieldValue(\"media\", []);\n                handleFormDirty();\n              }}\n              setImages={(values) => {\n                formik.setFieldValue(\"media\", values);\n                handleFormDirty();\n              }} />\n\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>);\n\n}", "import { Box, Button, Modal, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback } from \"react\";\nimport * as _ from \"lodash\";\nimport { FIELD_REQUIRED } from \"~/constants\";\n\nconst ImageForm = ({ onAdd, activatorTitle }) => {\n  const [active, setActive] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [errors, setErrors] = useState({} as { value: string });\n\n  const handleValueChange = useCallback((value) => setValue(value), []);\n  const handleSetErrors = useCallback((value) => setErrors(value), []);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n  const onSubmit = () => {\n    handleSetErrors({});\n    if (!value) {\n      return handleSetErrors({ value: FIELD_REQUIRED });\n    }\n    onAdd(value);\n    handleValueChange(\"\");\n    setActive(false)\n  };\n  const activator = (\n    <Button size=\"micro\" onClick={handleChange}>\n      {activatorTitle}\n    </Button>\n  );\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleChange}\n        title=\"Item\"\n        primaryAction={{\n          content: \"Ok\",\n          onAction: onSubmit,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleChange,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <TextField\n              label=\"Media URL\"\n              value={value}\n              onChange={handleValueChange}\n              autoComplete=\"off\"\n              error={errors.value}\n            />\n            <Box padding=\"2\"></Box>\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ImageForm;\n", "import {\n  Box,\n  Button,\n  Card,\n  EmptyState,\n  HorizontalGrid,\n} from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport DeleteIcon from \"./Icons/DeleteIcon\";\nimport { ReactSortable } from \"react-sortablejs\";\n// https://github.com/SortableJS/react-sortablejs/tree/master\n// https://bundlephobia.com/package/@shopify/draggable@1.0.0-beta.8\nconst ImageGrid = ({ images, onRemove, setImages }) => {\n\n  return (\n    <Box>\n      <HorizontalGrid gap=\"4\" columns={1}>\n        <ReactSortable\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(3, 1fr)\",\n            gridGap: \"10px\",\n          }}\n          list={images}\n          setList={setImages}\n        >\n          {_.map(images, (image, index) => {\n            return (\n              <Card padding={\"0\"} key={image + index}>\n                <div\n                  style={{\n                    position: \"relative\",\n                    height: \"100%\",\n                    cursor: \"grab\",\n                  }}\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      right: 10,\n                      top: 10,\n                    }}\n                  >\n                    <Button\n                      size=\"micro\"\n                      onClick={() => {\n                        onRemove(image);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </Button>\n                  </div>\n                  <img\n                    alt=\"\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    style={{\n                      objectFit: \"cover\",\n                      objectPosition: \"center\",\n                    }}\n                    src={image}\n                  />\n                </div>\n              </Card>\n            );\n          })}\n        </ReactSortable>\n      </HorizontalGrid>\n      <HorizontalGrid columns={1}>\n        {images?.length === 0 ? (\n          <EmptyState\n            heading=\"No image found\"\n            image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n          ></EmptyState>\n        ) : null}\n      </HorizontalGrid>\n    </Box>\n  );\n};\n\nexport default ImageGrid;\n", "import {\n    Box,\n  Layout,\n  LegacyCard,\n  SkeletonBodyText,\n  SkeletonDisplayText,\n  TextContainer,\n} from \"@shopify/polaris\";\n\nconst FormLoader = () => {\n  return (\n    <Box padding=\"10\">\n      <Layout>\n        <Layout.Section>\n          <LegacyCard sectioned>\n            <SkeletonBodyText />\n          </LegacyCard>\n          <LegacyCard sectioned>\n            <TextContainer>\n              <SkeletonDisplayText size=\"small\" />\n              <SkeletonBodyText />\n            </TextContainer>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </Box>\n  );\n};\n\nexport default FormLoader;\n", "import { LoaderArgs, json } from \"@remix-run/node\";\nimport { productsQuery } from \"~/graphql/products/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseSearchParams } from \"~/utils\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const { admin } = await authenticate.admin(request);\n  let rest = parseSearchParams({\n    request,\n    params,\n    queryBuild: (e: string) => {\n      return `title: ${e}`;\n    },\n  });\n\n  const products = await productsQuery({\n    graphql: admin.graphql,\n    ...rest,\n  });\n  return json(products);\n}\n", "import * as _ from \"lodash\";\n\nimport { PAGINATION_LIMIT } from \"~/constants\";\n\nexport const productsQuery = async ({\n  graphql,\n  before = null,\n  after = null,\n  query = null,\n}) => {\n  let variables = {\n    shouldQueryCompanyLocationPublicationCount: true,\n    productsFirst: PAGINATION_LIMIT,\n    productsLast: null,\n    before: null,\n    after: null,\n    reverse: false,\n    query,\n    savedSearchId: null,\n  };\n  if (before) {\n    variables[\"before\"] = before;\n    variables[\"productsLast\"] = PAGINATION_LIMIT;\n    delete variables[\"productsFirst\"];\n  } else if (after) {\n    variables[\"after\"] = after;\n    variables[\"productsFirst\"] = PAGINATION_LIMIT;\n  }\n  const q = `\n  query ProductIndex(\n    $productsFirst: Int\n    $productsLast: Int\n    $before: String\n    $after: String\n    $reverse: Boolean\n    $query: String\n    $savedSearchId: ID\n    $shouldQueryCompanyLocationPublicationCount: Boolean = false\n  ) {\n    products(\n      first: $productsFirst\n      after: $after\n      last: $productsLast\n      before: $before\n      reverse: $reverse\n      query: $query\n      savedSearchId: $savedSearchId\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n        startCursor\n        __typename\n      }\n      edges {\n        cursor\n        node {\n          ...ProductListItem\n          isGiftCard\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    catalogs(first: 1, type: COMPANY_LOCATION)\n      @include(if: $shouldQueryCompanyLocationPublicationCount) {\n      totalCount\n      __typename\n    }\n  }\n\n  fragment ProductListItem on Product {\n    id\n    title\n    vendor\n    productType\n    standardizedProductType {\n      __typename\n    }\n    totalVariants\n    totalInventory\n    status\n    tracksInventory\n    onlineStoreUrl\n    hasOnlyDefaultVariant\n    featuredImage {\n      id\n      transformedSrc: url(\n        transform: { maxWidth: 40, maxHeight: 40, scale: 3 }\n      )\n      __typename\n    }\n    featuredMedia {\n      ... on MediaImage {\n        id\n        __typename\n      }\n      ... on Video {\n        id\n        __typename\n      }\n      ... on Model3d {\n        id\n        __typename\n      }\n      ... on ExternalVideo {\n        id\n        __typename\n      }\n      preview {\n        image {\n          id\n          transformedSrc: url(\n            transform: { maxWidth: 40, maxHeight: 40, scale: 3 }\n          )\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n\n    __typename\n  }\n`;\n  const response = await graphql(q, { variables });\n  return await response.json();\n};\n", "import { authenticate } from \"~/shopify.server\";\nimport * as _ from \"lodash\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getProductIDNumber } from \"~/constants\";\nimport {\n  createMetaobjectCreateVariables,\n  createMetaobjectMutation,\n} from \"~/graphql/metaobjects/createMetaobjectMutation\";\n\nexport async function action({ request, params }) {\n  const { admin } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData()),\n  };\n  let fields: { key: string; value: string }[] = [];\n\n  fields.push({\n    key: \"name\",\n    value: _.get(data, \"name\"),\n  });\n\n  fields.push({\n    key: \"strapi_id\",\n    value: _.get(data, \"strapi_id\"),\n  });\n\n  fields.push({\n    key: \"description\",\n    value: _.get(data, \"description\"),\n  });\n  fields.push({\n    key: \"content\",\n    value: _.get(data, \"content\"),\n  });\n  if (_.get(data, \"properties\")) {\n    fields.push({\n      key: \"properties\",\n      value: _.get(data, \"properties\"),\n    });\n  }\n\n  if (_.get(data, \"prop_use\")) {\n    fields.push({\n      key: \"prop_use\",\n      value: _.get(data, \"prop_use\"),\n    });\n  }\n\n  if (_.get(data, \"mainmedia\")) {\n    fields.push({\n      key: \"main_media\",\n      value: _.get(data, \"mainmedia\"),\n    });\n  }\n\n  if (_.get(data, \"additionalmedia\")) {\n    fields.push({\n      key: \"additional_media\",\n      value: _.get(data, \"additionalmedia\"),\n    });\n  }\n\n  const variables = createMetaobjectCreateVariables({\n    fields,\n  });\n\n  const response = await createMetaobjectMutation({\n    graphql: admin.graphql,\n    variables,\n  });\n\n  const newProductId = getProductIDNumber(\n    _.get(response, \"data.metaobjectCreate.metaobject.handle\")\n  );\n  const errors = _.get(response, \"data.metaobjectCreate.userErrors.length\");\n  if (errors) {\n    return json({ errors }, { status: 422 });\n  }\n  return redirect(`/app/item/${newProductId}`);\n}\n", "export const createMetaobjectMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, {\n    variables,\n  });\n\n  return response.json();\n};\n\nconst query = `\nmutation MetaobjectCreate($input: MetaobjectCreateInput!) {\n    metaobjectCreate(metaobject: $input) {\n      metaobject {\n        id\n        handle\n        __typename\n      }\n      userErrors {\n        field\n        code\n        message\n        elementIndex\n        elementKey\n        __typename\n      }\n      __typename\n    }\n  }\n  `;\n\nexport const createMetaobjectCreateVariables = ({ fields }) => {\n  return {\n    input: {\n      capabilities: {\n        publishable: {\n          status: \"ACTIVE\",\n        },\n      },\n      fields,\n      type: \"item_definition\",\n    },\n  };\n};\n", "import { json } from \"@remix-run/node\";\nimport {\n  Await,\n  useActionData,\n  useFetcher,\n  useLoaderData,\n  useNavigate,\n  useSubmit } from\n\"@remix-run/react\";\nimport {\n  Box,\n  Card,\n  Layout,\n  Page,\n  Text,\n  TextField,\n  VerticalStack } from\n\"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport {\n  Suspense,\n  lazy,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState } from\n\"react\";\nimport ProductProperties from \"~/components/Tables/ProductProperties\";\nimport { authenticate } from \"~/shopify.server\";\nimport { IPropertyMetafield } from \"~/types\";\nimport { get, logger, numberGenerator, toHTML } from \"~/utils\";\nimport PropertyMetafieldForm from \"~/components/Form/Product/PropertyMetafieldForm\";\nimport ImageGrid from \"~/components/ImageGrid\";\nimport ImageForm from \"~/components/Form/Product/ImageForm\";\nimport SaveAppBar from \"~/components/Form/SaveAppBar\";\nimport { getMetaobjectQuery } from \"~/graphql/metaobjects/metaobjectQuery\";\nimport useStorefrontFetch from \"~/utils/useStorefrontFetch\";\nimport { findValueFromFields } from \"~/utils/metaobjects\";\nimport {\n  createItemDefinitionVariables,\n  updateItemDefinitionMutation } from\n\"~/graphql/metaobjects/itemDefinationMutation\";\nimport DuplicateMetaobject from \"~/components/Form/Product/DuplicateMetaobject\";\nimport { useFormik } from \"formik\";\nimport mkecss from \"@uiw/react-md-editor/markdown-editor.css\";\nimport mkdn from \"@uiw/react-markdown-preview/markdown.css\";\nimport styles from \"../components/Views/styles.css\";\nimport \"../components/table-styles.css?__remix_sideEffect__\";\nimport { useToast } from \"~/utils/useToast\";\n\nexport const links = () => [\n{ rel: \"stylesheet\", href: mkecss },\n{ rel: \"stylesheet\", href: mkdn },\n{ rel: \"stylesheet\", href: styles }];\n\n\nconst MDEditor = lazy(() => import(\"@uiw/react-md-editor\"));\n\nexport async function loader({ request, params }) {\n  const id = numberGenerator();\n  const response = await useStorefrontFetch(\n    JSON.stringify({\n      query: getMetaobjectQuery,\n      variables: {\n        metaobjectHandleInput: {\n          handle: params.handle,\n          type: \"item_definition\"\n        }\n      }\n    })\n  );\n  const data = await response.json();\n  const metaobject = _.get(data, \"data.metaobject\");\n  let properties = findValueFromFields(metaobject, \"prop_use\");\n  if (properties) {\n    properties = JSON.parse(properties);\n  }\n\n  const metaobjectId = _.get(metaobject, \"id\");\n  const description = findValueFromFields(metaobject, \"description\");\n  const content = findValueFromFields(metaobject, \"content\") || description;\n  const name = findValueFromFields(metaobject, \"name\");\n  const deprecated_properties = findValueFromFields(metaobject, \"properties\");\n  const strapi_id = findValueFromFields(metaobject, \"strapi_id\") || \"\";\n  const main_media = findValueFromFields(metaobject, \"main_media\") || \"\";\n\n  let additional_media = findValueFromFields(metaobject, \"additional_media\");\n  if (additional_media?.length) {\n    additional_media = JSON.parse(additional_media);\n  } else {\n    additional_media = [];\n  }\n\n  const _metaobject = {\n    id: metaobjectId,\n    description,\n    content,\n    name,\n    main_media,\n    additional_media,\n    handle: params.handle,\n    strapi_id,\n    properties: deprecated_properties,\n    prop_use: _.map(_.get(properties, \"data\", []), (it, index) => ({\n      id: index + id + 1,\n      ...it\n    }))\n  };\n\n  return json(\n    {\n      metaobject: _metaobject,\n      type: \"item_definition\",\n      productProperties: _.map(_.get(properties, \"data\", []), (it, index) => ({\n        id: index + id + 1,\n        ...it\n      }))\n    },\n    {\n      headers: {\n        \"Cache-Control\": \"no-store, no-cache, must-revalidate\"\n      }\n    }\n  );\n}\n\nexport async function action({ request, params }) {\n  const { admin } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData())\n  };\n  const id = _.get(data, \"ownerId\");\n  const handle = _.get(data, \"handle\");\n  let fields: {key: string;value: string;}[] = [];\n\n  fields.push({\n    key: \"name\",\n    value: _.get(data, \"name\")\n  });\n\n  fields.push({\n    key: \"strapi_id\",\n    value: _.get(data, \"strapi_id\")\n  });\n\n  fields.push({\n    key: \"description\",\n    value: _.get(data, \"description\")\n  });\n\n  fields.push({\n    key: \"content\",\n    value: _.get(data, \"content\")\n  });\n\n  if (_.get(data, \"properties\")) {\n    fields.push({\n      key: \"properties\",\n      value: _.get(data, \"properties\")\n    });\n  }\n  if (_.get(data, \"prop_use\")) {\n    fields.push({\n      key: \"prop_use\",\n      value: _.get(data, \"prop_use\")\n    });\n  } else {\n    fields.push({\n      key: \"prop_use\",\n      value: JSON.stringify({ data: [] })\n    });\n  }\n  fields.push({\n    key: \"main_media\",\n    value: _.get(data, \"mainmedia\", \"\")\n  });\n\n  if (_.get(data, \"additionalmedia\")) {\n    fields.push({\n      key: \"additional_media\",\n      value: _.get(data, \"additionalmedia\")\n    });\n  }\n  const variables = createItemDefinitionVariables({\n    id,\n    handle,\n    fields\n  });\n  const response = await updateItemDefinitionMutation({\n    graphql: admin.graphql,\n    variables\n  });\n  const errors = response?.data?.metaobjectUpdate?.userErrors;\n  if (errors?.length) {\n    return json({ errors }, { status: 422 });\n  }\n  return json(\n    { data: _.get(response, \"data\") },\n    {\n      headers: {\n        \"Cache-Control\": \"no-store, no-cache, must-revalidate\"\n      }\n    }\n  );\n}\n\nexport default function ProductPage() {\n  const { metaobject, productProperties, type } = useLoaderData();\n  const [formDirty, setFormDirty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const activatorRef = useRef<HTMLDivElement>(null);\n\n  const propertiesFetcher = useFetcher();\n  const [standardProperties, setStandardProperties] = useState([]);\n\n  useEffect(() => {\n    if (propertiesFetcher.data) {\n      const o = _.map(\n        _.get(propertiesFetcher.data, \"data.metaobjects.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.displayName\")\n          };\n        }\n      );\n      setStandardProperties(o);\n    }\n  }, [propertiesFetcher.data]);\n\n  useEffect(() => {\n    if (!standardProperties.length && !loading) {\n      onSearch({});\n    }\n  }, []);\n\n  const onSearch = async (data) => {\n    propertiesFetcher.load(\n      `/app/search-metaobjects/standard_properties?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}&first=10`\n    );\n  };\n\n  const actionData = useActionData();\n\n  const [additionalMedia, setAdditionalMedia] = useState(\n    _.get(metaobject, \"additional_media\")\n  );\n  const handleLoadingChange = useCallback((value) => setLoading(value), []);\n\n  const handleImagesChange = useCallback((value) => {\n    setAdditionalMedia(value);\n    setFormDirty(true);\n  }, []);\n\n  const submit = useSubmit();\n  const handleFormDirty = useCallback(() => setFormDirty(true), []);\n\n  const initialValues = useMemo(\n    () => ({\n      properties: productProperties || [],\n      name: _.get(metaobject, \"name\", \"\"),\n      description: _.get(metaobject, \"description\", \" \"),\n      content: _.get(metaobject, \"content\", \" \"),\n      mainmedia: _.get(metaobject, \"main_media\", \"\") ?\n      [_.get(metaobject, \"main_media\", \"\")] :\n      []\n    }),\n    [productProperties, actionData, metaobject]\n  );\n\n  const formik = useFormik({\n    initialValues,\n    validateOnChange: false,\n    onSubmit: (values) => {\n      handleLoadingChange(true);\n      const data = {\n        name: values.name,\n        description: values.description,\n        content: values.content,\n        ownerId: _.get(metaobject, \"id\"),\n        properties: _.get(metaobject, \"properties\", []),\n        strapi_id: _.get(metaobject, \"strapi_id\"),\n        handle: _.get(metaobject, \"handle\"),\n        additionalmedia: JSON.stringify(additionalMedia),\n        mainmedia: _.get(values, \"mainmedia\")\n      };\n\n      if (values.properties?.length) {\n        data[\"prop_use\"] = JSON.stringify({ data: values.properties });\n      }\n\n      submit(data, { method: \"post\" });\n    }\n  });\n  const navigate = useNavigate();\n  const { toastMarkup, showToast } = useToast();\n  useEffect(() => {\n    handleLoadingChange(false);\n\n    if (_.get(actionData, \"errors\")) {\n      return showToast(\n        `Something went wrong. ${JSON.stringify(\n          _.get(actionData, \"errors[0].message\")\n        )}`,\n        true\n      );\n    } else {\n      if (formik.dirty) {\n        showToast(\"Updated successfully\");\n      }\n    }\n    setFormDirty(false);\n  }, [actionData]);\n\n  const handlePropertiesChange = useCallback((values) => {\n    formik.setFieldValue(\"properties\", values);\n    setFormDirty(true);\n  }, []);\n\n  const handleSubmit = () => {\n    formik.handleSubmit();\n  };\n\n  const addProperty = (item: IPropertyMetafield) => {\n    formik.setFieldValue(\"properties\", [\n    item,\n    ...get(formik, \"values.properties\", [])]\n    );\n    handleFormDirty();\n  };\n\n  const removeProperty = (id: number) => {\n    formik.setFieldValue(\n      \"properties\",\n      get(formik, \"values.properties\", [])?.filter(\n        (it) => _.get(it, \"id\") !== id\n      )\n    );\n    handleFormDirty();\n  };\n\n  const onEditProperty = (item: IPropertyMetafield) => {\n    const index = _.findIndex(\n      formik.values.properties,\n      (prop) => prop?.id === item?.id\n    );\n    formik.setFieldValue(`properties[${index}]`, item);\n\n    handleFormDirty();\n  };\n\n  const removeAdditionalImages = (image: string) => {\n    setAdditionalMedia([...additionalMedia.filter((it) => it !== image)]);\n    handleFormDirty();\n  };\n\n  const onAddMainMedia = (value: string) => {\n    formik.setFieldValue(\"mainmedia\", [value]);\n    handleFormDirty();\n  };\n\n  const onAddAdditionalMedia = (image: string) => {\n    setAdditionalMedia([image, ...additionalMedia]);\n    handleFormDirty();\n  };\n\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app/items/item_definition\" }}\n      title={_.get(metaobject, \"name\", \"\")}\n      subtitle=\"Item\"\n      compactTitle\n      secondaryActions={[\n      {\n        content: \"Duplicate\",\n        accessibilityLabel: \"Secondary action label\",\n        onAction: () => {\n          activatorRef.current?.querySelector(\"button\")?.click();\n        }\n      }]}>\n\n\n      <Layout>\n        <Layout.Section>\n          {formDirty ?\n          <SaveAppBar\n            saveAction={handleSubmit}\n            loading={loading}\n            discardAction={() => {\n              navigate(`/app/items/${type}`);\n            }} /> :\n\n          null}\n          <Card>\n            <DuplicateMetaobject\n              modalTitle={\"Duplicate\"}\n              metaobject={{\n                name: get(formik, \"values.name\"),\n                description: get(formik, \"values.description\"),\n                content: get(formik, \"values.content\"),\n                id: _.get(metaobject, \"id\"),\n                properties: _.get(metaobject, \"properties\"),\n                strapi_id: _.get(metaobject, \"strapi_id\"),\n                handle: _.get(metaobject, \"handle\"),\n                additionalmedia: JSON.stringify(additionalMedia),\n                mainmedia: _.get(formik, \"values.mainmedia\"),\n                prop_use: JSON.stringify({\n                  data: _.get(formik, \"values.properties\")\n                })\n              }}\n              activatorRef={activatorRef} />\n\n            <VerticalStack gap=\"3\">\n              {toastMarkup}\n              <TextField\n                label=\"Name\"\n                value={get(formik, \"values.name\")}\n                onChange={(e) => {\n                  formik.setFieldValue(\"name\", e);\n                  handleFormDirty();\n                }}\n                autoComplete=\"off\" />\n\n\n              <Suspense>\n                <Await resolve={get(formik, \"values.content\")}>\n                  {(value) =>\n                  <>\n                      <label>{\"Description\"}</label>\n                      <Box padding=\"1\"></Box>\n                      <div data-color-mode=\"light\">\n                        <MDEditor\n                        id={get(formik, \"values.content\")}\n                        value={\n                        value?.includes(\"children\") ? toHTML(value) : value}\n\n                        name={\"description\"}\n                        onChange={(e) => {\n                          formik.setFieldValue(\"content\", e);\n                          setFormDirty(true);\n                        }} />\n\n                        <Box padding=\"2\"></Box>\n                      </div>\n                    </>}\n\n                </Await>\n              </Suspense>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\"\n                }}>\n\n                <Text variant=\"headingMd\" as=\"h6\">\n                  Properties\n                </Text>\n\n                <PropertyMetafieldForm\n                  activatorTitle=\"Add Property\"\n                  onAdd={addProperty}\n                  values={{}}\n                  standardProperties={standardProperties} />\n\n              </div>\n\n              <ProductProperties\n                fetcher={propertiesFetcher}\n                onEdit={onEditProperty}\n                onRemove={removeProperty}\n                properties={get(formik, \"values.properties\")}\n                handleItemChange={handlePropertiesChange}\n                standardProperties={standardProperties} />\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\"\n                }}>\n\n                <Text variant=\"headingMd\" as=\"h6\">\n                  Main Media\n                </Text>\n\n                <ImageForm\n                  activatorTitle={`${\n                  _.get(formik, \"values.mainmedia.length\") ? \"Edit\" : \"Add\"\n                  } Main Media`}\n                  onAdd={onAddMainMedia} />\n\n              </div>\n              <ImageGrid\n                images={_.get(formik, \"values.mainmedia\")}\n                onRemove={(image: string) => {\n                  formik.setFieldValue(\"mainmedia\", []);\n                  handleFormDirty();\n                }}\n                setImages={(values) => {\n                  formik.setFieldValue(\"mainmedia\", values);\n                  handleFormDirty();\n                }} />\n\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\"\n                }}>\n\n                <Text variant=\"headingMd\" as=\"h6\">\n                  Additional Media\n                </Text>\n\n                <ImageForm\n                  onAdd={onAddAdditionalMedia}\n                  activatorTitle={`Add More Media`} />\n\n              </div>\n              <ImageGrid\n                images={additionalMedia}\n                onRemove={removeAdditionalImages}\n                setImages={handleImagesChange} />\n\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>);\n\n}", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n} from \"@shopify/polaris\";\nimport { IPropertyMetafield } from \"~/types\";\nimport { get, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport EditIcon from \"../Icons/EditIcon\";\nimport { FetcherWithComponents } from \"@remix-run/react\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport PropertyMetafieldForm from \"../Form/Product/PropertyMetafieldForm\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport PropertyMetafieldEditForm from \"../Form/Product/PropertyMetafieldEditForm\";\n\nconst ProductProperties = ({\n  properties,\n  loading: isLoading,\n  onEdit,\n  fetcher,\n  onAdd,\n  onRemove,\n  handleItemChange,\n  standardProperties,\n  formik,\n}: {\n  properties: IPropertyMetafield[];\n  loading?: boolean;\n  onRemove: (id: number) => void;\n  onEdit: (item: IPropertyMetafield, idx: number) => void;\n  fetcher: FetcherWithComponents<any>;\n  handleItemChange: (items: any) => void;\n  standardProperties;\n  formik: any;\n  onAdd: (item: IPropertyMetafield) => void;\n}) => {\n  const resourceName = {\n    singular: \"property\",\n    plural: \"properties\",\n  };\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const handleSetItem = useCallback(\n    (value) => {\n      setItem(value);\n    },\n    [item]\n  );\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  useEffect(() => {\n    if (get(item, \"name\")) {\n      handleOpen();\n    }\n  }, [item]);\n  \n  const SortableItem = sortableElement(\n    ({ id, name, ranking, propertyValue, propertyBase }, index) => (\n      <IndexTable.Row\n        id={propertyBase.id}\n        key={`${index}-${propertyBase.id}-${name}`}\n        position={index}\n      >\n        <IndexTable.Cell>\n          <ButtonGroup segmented>\n            <Button size=\"micro\">\n              <DragHandle />\n            </Button>\n            <Button\n              size=\"micro\"\n              onClick={() => {\n                onRemove(id);\n              }}\n            >\n              <DeleteIcon />\n            </Button>\n            <Button\n              size=\"micro\"\n              onClick={() => {\n                handleSetItem({\n                  id,\n                  name,\n                  propertyValue,\n                  ranking,\n                  propertyBase,\n                });\n              }}\n            >\n              <EditIcon />\n            </Button>\n          </ButtonGroup>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{truncate(name)}</IndexTable.Cell>\n        <IndexTable.Cell>{propertyBase.name}</IndexTable.Cell>\n\n        <IndexTable.Cell>{ranking}</IndexTable.Cell>\n        <IndexTable.Cell>{propertyValue}</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={properties?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"Name\" },\n          { title: \"Property base\" },\n          { title: \"Ranking\" },\n          { title: \"Property value\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _items = arrayMove(properties, oldIndex, newIndex);\n    handleItemChange(_items);\n  };\n\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <PropertyMetafieldEditForm\n        activatorTitle={\"\"}\n        onAdd={onEdit}\n        index={0}\n        active={active}\n        handleToggle={active ? handleClose : handleOpen}\n        standardProperties={standardProperties}\n        values={item}\n      />\n      <VerticalStack>\n        <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n          {_.map(properties, (value, index) => (\n            <SortableItem\n              key={`item-${_.get(value, \"id\")}-${new Date()}-${index}`}\n              index={index}\n              item={_.get(value, \"item\")}\n              name={value?.name}\n              id={_.get(value, \"id\")}\n              ranking={_.get(value, \"ranking\")}\n              propertyBase={_.get(value, \"propertyBase\")}\n              propertyValue={_.get(value, \"propertyValue\")}\n            />\n          ))}\n        </SortableContainer>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default ProductProperties;\n", "import { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport SelectField from \"../Fields/SelectField\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { IPropertyMetafield } from \"~/types\";\nimport { get, logger, numberGenerator } from \"~/utils\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport { useFetcher } from \"@remix-run/react\";\n\ninterface Iitem {\n  name: string;\n  id: string;\n  metaobject_type: string;\n}\ninterface IError {\n  name: string;\n  ranking: string;\n  propertyValue: string;\n  propertyBase: string;\n}\nconst PropertyMetafieldEditForm = ({\n  activatorTitle,\n  onAdd,\n  values,\n  index,\n  standardProperties,\n  active,\n  handleToggle,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState(standardProperties);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(\n    _.get(values, \"item.id\") ? [_.get(values, \"propertyBase.id\")] : []\n  );\n  const handleSetSelectedOptions = useCallback((values) => {\n    setSelectedOptions(values);\n  }, []);\n  const [ranking, handleSetRanking] = useState(\"Key\");\n  const setRanking = useCallback((value) => handleSetRanking(value), []);\n  const [name, handleSetName] = useState(_.get(values, \"name\", \"\"));\n  const setName = useCallback((value) => handleSetName(value), []);\n  const [propertyValue, handleSetPropertyValue] = useState(\n    _.get(values, \"propertyValue\", \"\")\n  );\n  const setPropertyValue = useCallback(\n    (value) => handleSetPropertyValue(value),\n    []\n  );\n  const [errors, _setErrors] = useState({} as IError);\n  const [propertyBase, handleSetPropertyBase] = useState(\n    _.get(values, \"propertyBase\") as Iitem\n  );\n  const setPropertyBase = useCallback(\n    (value) => handleSetPropertyBase(value),\n    []\n  );\n\n  useEffect(() => {\n    if (_.get(values, \"name\")) {\n      setName(_.get(values, \"name\"));\n    }\n    if (_.get(values, \"propertyValue\")) {\n      setPropertyValue(_.get(values, \"propertyValue\"));\n    }\n    if (_.get(values, \"ranking\")) {\n      setRanking(_.get(values, \"ranking\"));\n    }\n    if (_.get(values, \"propertyBase\")) {\n      setPropertyBase(_.get(values, \"propertyBase\"));\n    }\n    if (_.get(values, \"item.id\") || _.get(values, \"propertyBase.id\")) {\n      handleSetSelectedOptions(\n        _.get(values, \"item.id\") ? [_.get(values, \"propertyBase.id\")] : []\n      );\n    }\n    if (_.get(values, \"id\")) {\n      setId(_.get(values, \"id\"));\n    }\n  }, [values]);\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data]);\n\n  const onSearch = async (data: any) => {\n    await fetcher.load(\n      `/app/search-metaobjects/standard_properties?query=${_.get(\n        data,\n        \"query\"\n      )}&d=${new Date().toString()}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  const [id, handleSetId] = useState(_.get(values, \"id\") || numberGenerator());\n  const setId = useCallback((value) => handleSetId(value), []);\n\n  const onSubmit = () => {\n    setErrors({} as IError);\n    if (!name) {\n      setErrors({ ...errors, name: FIELD_REQUIRED });\n    }\n    if (!ranking) {\n      setErrors({ ...errors, ranking: FIELD_REQUIRED });\n    }\n    if (!propertyValue) {\n      setErrors({ ...errors, propertyValue: FIELD_REQUIRED });\n    }\n    if (!_.get(propertyBase, \"id\")) {\n      setErrors({ ...errors, propertyBase: FIELD_REQUIRED });\n    }\n    if (Object.keys(errors).length) {\n      return;\n    }\n    if (!name || !ranking || !propertyValue || !_.get(propertyBase, \"id\"))\n      return;\n    onAdd(\n      {\n        id,\n        name,\n        ranking,\n        propertyValue,\n        meta: {},\n        propertyBase,\n      } as IPropertyMetafield,\n      index\n    );\n    setId(numberGenerator());\n    handleToggle();\n  };\n\n  const setErrors = useCallback((value) => _setErrors(value), []);\n  const handleRankingChange = useCallback(\n    (value: string) => setRanking(value),\n    []\n  );\n\n  const handleNameChange = useCallback(\n    (newValue: string) => setName(newValue),\n    []\n  );\n\n  const handlePropertyValueChange = useCallback(\n    (newValue: any) => setPropertyValue(newValue),\n    []\n  );\n\n  const raking = [\n    { label: \"Key\", value: \"Key\" },\n    { label: \"Main\", value: \"Main\" },\n    { label: \"Details\", value: \"Details\" },\n  ];\n\n  useEffect(() => {\n    if (!_.get(selectedOptions, \"[0]\")) return;\n    const option = _.find(\n      _.get(fetcher.data, \"data.metaobjects.edges\"),\n      (item) => {\n        return _.get(item, \"node.id\") === _.get(selectedOptions, \"[0]\");\n      }\n    );\n    const propertyBase = {\n      name: _.get(option, \"node.displayName\"),\n      id: _.get(option, \"node.id\"),\n      metaobject_type: _.get(option, \"node.id\"),\n    };\n    setPropertyBase(propertyBase);\n  }, [selectedOptions]);\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  \n\n  const activator = (\n    <div style={{ display: activatorTitle ? \"block\" : \"none\" }}>\n      <Button size=\"micro\" onClick={handleToggle}>\n        {activatorTitle}\n      </Button>\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleToggle}\n        title=\"Property\"\n        primaryAction={{\n          content: \"Ok\",\n          onAction: onSubmit,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleToggle,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <TextField\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              autoComplete=\"off\"\n              error={errors.name}\n            />\n            <Box padding=\"2\"></Box>\n            <Select\n              label=\"Ranking\"\n              options={raking}\n              onChange={handleRankingChange}\n              value={ranking}\n              error={errors.ranking}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label=\"Property Value\"\n              value={propertyValue}\n              onChange={handlePropertyValueChange}\n              autoComplete=\"off\"\n              error={errors.propertyValue}\n            />\n            <Box padding=\"2\"></Box>\n            <SelectField\n              onSearch={onSearch}\n              options={options}\n              loading={loading}\n              label={\"Select Item (Type First Letters to Search)\"}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={handleSetSelectedOptions}\n              error={errors.propertyBase}\n              placeholder={_.get(values, \"propertyBase.name\") || \"search..\"}\n            />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PropertyMetafieldEditForm;\n", "import { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport SelectField from \"../Fields/SelectField\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { IPropertyMetafield } from \"~/types\";\nimport { numberGenerator } from \"~/utils\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport { useFetcher } from \"@remix-run/react\";\n\ninterface Iitem {\n  name: string;\n  id: string;\n  metaobject_type: string;\n}\ninterface IError {\n  name: string;\n  ranking: string;\n  propertyValue: string;\n  propertyBase: string;\n}\nconst PropertyMetafieldForm = ({\n  activatorTitle,\n  onAdd,\n  values,\n  index,\n  standardProperties,\n}) => {\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState(standardProperties);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(\n    _.get(values, \"item.id\") ? [_.get(values, \"propertyBase.id\")] : []\n  );\n  const [ranking, setRanking] = useState(\"Key\");\n  const [name, setName] = useState(_.get(values, \"name\", \"\"));\n  const [propertyValue, setPropertyValue] = useState(\n    _.get(values, \"propertyValue\", \"\")\n  );\n  const [errors, _setErrors] = useState({} as IError);\n  const [propertyBase, setPropertyBase] = useState(\n    _.get(values, \"propertyBase\") as Iitem\n  );\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data]);\n\n  const onSearch = async (data: any) => {\n    await fetcher.load(\n      `/app/search-metaobjects/standard_properties?query=${_.get(\n        data,\n        \"query\"\n      )}&d=${new Date().toString()}&after=${_.get(\n        data,\n        \"after\"\n      )}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  const onSubmit = () => {\n    setErrors({} as IError);\n    if (!name) {\n      setErrors({ ...errors, name: FIELD_REQUIRED });\n    }\n    if (!ranking) {\n      setErrors({ ...errors, ranking: FIELD_REQUIRED });\n    }\n    if (!propertyValue) {\n      setErrors({ ...errors, propertyValue: FIELD_REQUIRED });\n    }\n    if (!_.get(propertyBase, \"id\")) {\n      setErrors({ ...errors, propertyBase: FIELD_REQUIRED });\n    }\n    if (Object.keys(errors).length) {\n      return;\n    }\n    if (!name || !ranking || !propertyValue || !_.get(propertyBase, \"id\"))\n      return;\n    onAdd(\n      {\n        id: _.get(values, \"id\") || numberGenerator(),\n        name,\n        ranking,\n        propertyValue,\n        meta: {},\n        propertyBase,\n      } as IPropertyMetafield,\n      index\n    );\n    handleClose();\n  };\n  const setErrors = useCallback((value) => _setErrors(value), []);\n  const handleRankingChange = useCallback(\n    (value: string) => setRanking(value),\n    []\n  );\n\n  const handleNameChange = useCallback(\n    (newValue: string) => setName(newValue),\n    []\n  );\n\n  const handlePropertyValueChange = useCallback(\n    (newValue: any) => setPropertyValue(newValue),\n    []\n  );\n\n  const raking = [\n    { label: \"Key\", value: \"Key\" },\n    { label: \"Main\", value: \"Main\" },\n    { label: \"Details\", value: \"Details\" },\n  ];\n\n  useEffect(() => {\n    if (!_.get(selectedOptions, \"[0]\")) return;\n    const option = _.find(\n      _.get(fetcher.data, \"data.metaobjects.edges\"),\n      (item) => {\n        return _.get(item, \"node.id\") === _.get(selectedOptions, \"[0]\");\n      }\n    );\n    const propertyBase = {\n      name: _.get(option, \"node.displayName\"),\n      id: _.get(option, \"node.id\"),\n      metaobject_type: _.get(option, \"node.id\"),\n    };\n    setPropertyBase(propertyBase);\n  }, [selectedOptions]);\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  const activator = (\n    <div style={{ display: !activatorTitle ? \"none\" : \"block\" }}>\n      <Button size=\"micro\" onClick={handleOpen}>\n        {activatorTitle}\n      </Button>\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleClose}\n        title=\"Property\"\n        primaryAction={{\n          content: \"Ok\",\n          onAction: onSubmit,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleClose,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <TextField\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              autoComplete=\"off\"\n              error={errors.name}\n            />\n            <Box padding=\"2\"></Box>\n            <Select\n              label=\"Ranking\"\n              options={raking}\n              onChange={handleRankingChange}\n              value={ranking}\n              error={errors.ranking}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label=\"Property Value\"\n              value={propertyValue}\n              onChange={handlePropertyValueChange}\n              autoComplete=\"off\"\n              error={errors.propertyValue}\n            />\n            <Box padding=\"2\"></Box>\n            <SelectField\n              onSearch={onSearch}\n              options={options}\n              loading={loading}\n              label={\"Select Item (Type First Letters to Search)\"}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n              error={errors.propertyBase}\n              placeholder={_.get(values, \"propertyBase.name\") || \"search..\"}\n            />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PropertyMetafieldForm;\n", "import {\n  Box,\n  Button,\n  InlineError,\n  Modal,\n  Text,\n  TextField,\n} from \"@shopify/polaris\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { FIELD_REQUIRED } from \"~/constants\";\n\nimport * as _ from \"lodash\";\nimport { useActionData, useLocation, useSubmit } from \"@remix-run/react\";\n\nconst DuplicateMetaobject = ({ modalTitle, metaobject, activatorRef }) => {\n  const actionErrors = useActionData()?.errors || {};\n  const action = useActionData() || {};\n  const location = useLocation();\n  const [name, setName] = useState(`Copy of - ${_.get(metaobject, \"name\")}`);\n  const [errors, setErrors] = useState({} as { name: string });\n  const [laoding, setLoading] = useState(false);\n  const handleLoadingChange = useCallback((value) => setLoading(value), []);\n  const handleValueChange = useCallback((value) => setName(value), []);\n  const handleSetErrors = useCallback((value) => setErrors(value), []);\n  const [active, setActive] = useState(false);\n  const submit = useSubmit();\n  const handleOpen = useCallback(() => {\n    setActive(true);\n    setLoading(false);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setActive(false);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [action?.data]);\n\n  useEffect(() => {\n    handleClose();\n    setLoading(false);\n  }, [location]);\n\n  const handleSubmit = async () => {\n    handleSetErrors({});\n    handleLoadingChange(true);\n    if (!name) {\n      return handleSetErrors({ title: FIELD_REQUIRED });\n    }\n    const data = {\n      name,\n      metaobject,\n      description: _.get(metaobject, \"description\"),\n      content: _.get(metaobject, \"content\"),\n      ownerId: _.get(metaobject, \"id\"),\n      properties: _.get(metaobject, \"properties\"),\n      strapi_id: _.get(metaobject, \"strapi_id\"),\n      handle: _.get(metaobject, \"handle\"),\n      additionalmedia: _.get(metaobject, \"additionalmedia\"),\n      mainmedia: _.get(metaobject, \"mainmedia[0]\", \"\"),\n      prop_use: _.get(metaobject, \"prop_use\"),\n    };\n    await submit(data, { method: \"post\", action: \"/app/item/duplicate\" });\n  };\n\n  return (\n    <div>\n      <div style={{ height: 0, display: \"none\" }} ref={activatorRef}>\n        <Button onClick={handleOpen}>~</Button>\n      </div>\n      <Modal\n        small\n        open={active}\n        onClose={handleClose}\n        title={modalTitle}\n        primaryAction={{\n          content: \"Ok\",\n          onAction: handleSubmit,\n          loading: laoding,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleClose,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            {Object.keys(actionErrors).length ? (\n              <InlineError\n                message={JSON.stringify(actionErrors)}\n                fieldID=\"errors\"\n              />\n            ) : null}\n            <TextField\n              label=\"Name\"\n              value={name}\n              onChange={handleValueChange}\n              autoComplete=\"off\"\n              error={errors.name}\n            />\n            <Box padding=\"2\"></Box>\n\n            <Text variant=\"bodyLg\" as=\"p\">\n              All item details will be copied from the original item.\n            </Text>\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DuplicateMetaobject;\n", "import { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  VerticalStack,\n} from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Button, Popover, ActionList } from \"@shopify/polaris\";\nimport { getMetaDefinitions } from \"~/graphql/metaobjects/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport MetaDefinition from \"~/components/Tables/MetaDefinition\";\nimport { numberFormat } from \"~/utils\";\n\nexport async function loader({ request }) {\n  const { admin, session } = await authenticate.admin(request);\n  const metaDefinitions = await getMetaDefinitions({\n    graphql: admin.graphql,\n    definitionCount: 64,\n  });\n  return json({ metaDefinitions });\n}\nexport default function MetaobjectsPage() {\n  const { metaDefinitions } = useLoaderData();\n  const [active, setActive] = useState(true);\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n\n  const definitions = _.get(metaDefinitions, \"data.metaobjectDefinitions\");\n\n  const activator = (\n    <Button onClick={toggleActive} disclosure>\n      More actions\n    </Button>\n  );\n  return (\n    <Page\n      title=\"Metaobjects\"\n      subtitle={`${numberFormat(\n        _.get(definitions, \"edges.length\", 0)\n      )} definitions`}\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <VerticalStack gap=\"3\">\n              <MetaDefinition\n                edges={_.get(definitions, \"edges\")}\n                pageInfo={_.get(definitions, \"pageInfo\")}\n              />\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"1\"\n      paddingInlineEnd=\"1\"\n      background=\"bg-subdued\"\n      borderWidth=\"1\"\n      borderColor=\"border\"\n      borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport {\n  IndexTable,\n  LegacyCard,\n  useIndexResourceState,\n  Text,\n  Badge,\n} from \"@shopify/polaris\";\nimport { IMetaObjectDefinition, IMetaobjectResponse } from \"~/types\";\nimport { numberFormat } from \"~/utils\";\n\nconst MetaDefinition = ({ edges, pageInfo }: IMetaObjectDefinition) => {\n  const orders = [\n    {\n      id: \"1020\",\n      order: \"#1020\",\n      date: \"Jul 20 at 4:34pm\",\n      customer: \"Jaydon Stanton\",\n      total: \"$969.44\",\n      paymentStatus: <Badge progress=\"complete\">Paid</Badge>,\n      fulfillmentStatus: <Badge progress=\"incomplete\">Unfulfilled</Badge>,\n    },\n    {\n      id: \"1019\",\n      order: \"#1019\",\n      date: \"Jul 20 at 3:46pm\",\n      customer: \"Ruben Westerfelt\",\n      total: \"$701.19\",\n      paymentStatus: <Badge progress=\"partiallyComplete\">Partially paid</Badge>,\n      fulfillmentStatus: <Badge progress=\"incomplete\">Unfulfilled</Badge>,\n    },\n    {\n      id: \"1018\",\n      order: \"#1018\",\n      date: \"Jul 20 at 3.44pm\",\n      customer: \"Leo Carder\",\n      total: \"$798.24\",\n      paymentStatus: <Badge progress=\"complete\">Paid</Badge>,\n      fulfillmentStatus: <Badge progress=\"incomplete\">Unfulfilled</Badge>,\n    },\n  ];\n  const resourceName = {\n    singular: \"order\",\n    plural: \"orders\",\n  };\n\n  // const { selectedResources, allResourcesSelected, handleSelectionChange } =\n  //   useIndexResourceState(edges);\n\n  const rowMarkup = edges.map(\n    ({ node: { id, name, type, metaobjectsCount } }, index) => {\n      return (\n        <IndexTable.Row\n          onNavigation={() => {}}\n          id={id}\n          key={id}\n          position={index}\n        >\n          <IndexTable.Cell>\n            <Link to={`/app/metaobject/${type}`}>{name}</Link>\n          </IndexTable.Cell>\n          <IndexTable.Cell>{type}</IndexTable.Cell>\n          <IndexTable.Cell>{`${numberFormat(\n            metaobjectsCount\n          )} `}</IndexTable.Cell>\n        </IndexTable.Row>\n      );\n    }\n  );\n\n  return (\n    <LegacyCard>\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={orders.length}\n        selectable={false}\n        // selectedItemsCount={\n        //   allResourcesSelected ? 'All' : selectedResources.length\n        // }\n        // onSelectionChange={handleSelectionChange}\n        headings={[\n          { title: \"Name\" },\n          { title: \"Definition Type\" },\n          { title: \"Entries\" },\n        ]}\n      >\n        {rowMarkup}\n      </IndexTable>\n    </LegacyCard>\n  );\n};\n\nexport default MetaDefinition;\n", "import { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport {\n  Layout,\n  Page,\n  VerticalStack,\n} from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport {  useEffect, useState } from \"react\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseDefinitionType } from \"~/utils\";\nimport { IPageInfo } from \"~/types\";\nimport PageLoader from \"~/components/Loaders/PageLoader\";\nimport ItemMetaObjects from \"~/components/Tables/ItemMetaObjects\";\n\nexport async function loader({ request, params }) {\n  const { admin, session } = await authenticate.admin(request);\n\n  return json({\n    definitionType: parseDefinitionType(params.type),\n    type: params.type,\n    graphql: admin.graphql,\n  });\n}\nexport default function MetaobjectsPage() {\n  const { definitionType, type } = useLoaderData();\n\n  const [edges, setEdges] = useState([]);\n  const [pageInfo, setPageInfo] = useState({} as IPageInfo);\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n  const [pageLoading, setPageLoading] = useState(true);\n\n  const onSearch = async (data) => {\n    fetcher.load(\n      `/app/search-metaobjects/${type}?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.metaobjects.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.metaobjects.pageInfo\", {}));\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (fetcher.state !== \"loading\" && pageLoading) {\n      setPageLoading(false);\n    }\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (!fetcher.data) {\n      setPageLoading(true);\n      onSearch({});\n    }\n  }, []);\n\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app\" }}\n      title={'Items'}\n      subtitle=\"\"\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          {pageLoading ? <PageLoader /> : null}\n          {!pageLoading ? (\n            <VerticalStack gap=\"3\">\n              <ItemMetaObjects\n                edges={edges}\n                pageInfo={pageInfo}\n                type={type}\n                onSearch={onSearch}\n                loading={loading}\n              />\n            </VerticalStack>\n          ) : null}\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n", "import {\n  SkeletonPage,\n  Layout,\n  LegacyCard,\n  SkeletonBodyText,\n  TextContainer,\n  SkeletonDisplayText,\n} from \"@shopify/polaris\";\n\nfunction PageLoader() {\n  return (\n    <SkeletonPage primaryAction>\n      <Layout>\n        <Layout.Section>\n          <LegacyCard sectioned>\n            <SkeletonBodyText />\n          </LegacyCard>\n          <LegacyCard sectioned>\n            <TextContainer>\n              <SkeletonDisplayText size=\"small\" />\n              <SkeletonBodyText />\n            </TextContainer>\n          </LegacyCard>\n          <LegacyCard sectioned>\n            <TextContainer>\n              <SkeletonDisplayText size=\"small\" />\n              <SkeletonBodyText />\n            </TextContainer>\n          </LegacyCard>\n        </Layout.Section>\n        <Layout.Section secondary>\n          <LegacyCard>\n            <LegacyCard.Section>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={2} />\n              </TextContainer>\n            </LegacyCard.Section>\n            <LegacyCard.Section>\n              <SkeletonBodyText lines={1} />\n            </LegacyCard.Section>\n          </LegacyCard>\n          <LegacyCard subdued>\n            <LegacyCard.Section>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={2} />\n              </TextContainer>\n            </LegacyCard.Section>\n            <LegacyCard.Section>\n              <SkeletonBodyText lines={2} />\n            </LegacyCard.Section>\n          </LegacyCard>\n        </Layout.Section>\n      </Layout>\n    </SkeletonPage>\n  );\n}\n\nexport default PageLoader;\n", "import { Link, useNavigate } from \"@remix-run/react\";\nimport {\n  IndexTable,\n  LegacyCard,\n  useIndexResourceState,\n  Text,\n  Badge,\n  Pagination,\n  VerticalStack,\n  HorizontalGrid,\n  IndexFilters,\n  useSetIndexFiltersMode,\n} from \"@shopify/polaris\";\nimport { IMetaobjectResponse } from \"~/types\";\nimport { dateFormatter, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst ItemMetaObjects = ({\n  edges,\n  pageInfo,\n  type,\n  onSearch,\n  loading: isLoading,\n}: IMetaobjectResponse) => {\n  const navigate = useNavigate();\n\n  const resourceName = {\n    singular: \"item\",\n    plural: \"items\",\n  };\n  const [loading, setLoading] = useState(false);\n\n  const handleNavigation = (next: boolean) => {\n    let rest = {};\n    setLoading(true);\n    if (next) {\n      rest[\"after\"] = pageInfo.endCursor;\n    } else {\n      rest[\"before\"] = pageInfo.startCursor;\n    }\n\n    if (queryValue !== undefined && queryValue !== null) {\n      rest[\"query\"] = queryValue;\n    }\n    onSearch(rest);\n  };\n  const [queryValue, setQueryValue] = useState(null);\n  const handleFiltersQueryChange = useCallback(\n    (value: string) => setQueryValue(value),\n    []\n  );\n\n  useEffect(() => {\n    if (queryValue !== undefined && queryValue !== null) {\n      onSearch({ query: queryValue });\n    }\n  }, [queryValue]);\n  const [selected] = useState(0);\n  const onHandleCancel = () => {};\n\n  const { mode, setMode } = useSetIndexFiltersMode();\n\n  useEffect(() => {\n    setLoading(false);\n  }, [edges]);\n  const rowMarkup = edges.map(\n    (\n      {\n        node: {\n          id,\n          definition,\n          capabilities,\n          displayName,\n          handle,\n          type,\n          updatedAt,\n        },\n      },\n      index\n    ) => (\n      <IndexTable.Row\n        onNavigation={() => {}}\n        id={id}\n        key={id}\n        position={index}\n      >\n        <IndexTable.Cell>\n          <Text variant=\"bodyMd\" as=\"span\">\n            <Link to={`/app/item/${handle}`}>{truncate(displayName)}</Link>\n          </Text>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{definition.name}</IndexTable.Cell>\n        <IndexTable.Cell>{definition.access.storefront}</IndexTable.Cell>\n\n        <IndexTable.Cell>\n          <Badge size=\"small\">{capabilities.publishable.status}</Badge>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{dateFormatter(updatedAt)}</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <VerticalStack>\n        <IndexFilters\n          selected={selected}\n          filters={[]}\n          onClearAll={() => {}}\n          cancelAction={{\n            onAction: onHandleCancel,\n            disabled: false,\n            loading: false,\n          }}\n          tabs={[]}\n          queryValue={queryValue || \"\"}\n          queryPlaceholder=\"Search ...\"\n          onQueryChange={handleFiltersQueryChange}\n          onQueryClear={() => {\n            setQueryValue(\"\");\n          }}\n          mode={mode}\n          setMode={setMode}\n          hideFilters\n        />\n        <IndexTable\n          resourceName={resourceName}\n          itemCount={edges.length}\n          selectable={false}\n          headings={[\n            { title: \"Display Name\" },\n            { title: \"Definition\" },\n            { title: \"Storefront access\" },\n            { title: \"Status\" },\n            { title: \"Last updated\" },\n          ]}\n        >\n          {rowMarkup}\n        </IndexTable>\n        <HorizontalGrid>\n          <div className=\"grid-container\">\n            <div\n              className=\"pagination-wrapper\"\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                padding: 20,\n              }}\n            >\n              <Pagination\n                hasPrevious={pageInfo.hasPreviousPage}\n                onPrevious={() => {\n                  handleNavigation(false);\n                }}\n                hasNext={pageInfo.hasNextPage}\n                onNext={() => {\n                  handleNavigation(true);\n                }}\n              />\n            </div>\n          </div>\n        </HorizontalGrid>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default ItemMetaObjects;\n", "import { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Box, Card, Layout, Page, Text, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport { Button } from \"@shopify/polaris\";\nimport { getMetaDefinitions } from \"~/graphql/metaobjects/queries\";\nimport { authenticate } from \"~/shopify.server\";\nimport MetaDefinition from \"~/components/Tables/MetaDefinition\";\nimport { numberFormat } from \"~/utils\";\n\nexport async function loader({ request }) {\n  const { admin, session } = await authenticate.admin(request);\n  const metaDefinitions = await getMetaDefinitions({\n    graphql: admin.graphql,\n    definitionCount: 64,\n  });\n  return json({ metaDefinitions });\n}\nexport default function MetaobjectsPage() {\n  const { metaDefinitions } = useLoaderData();\n  const [active, setActive] = useState(true);\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n\n  const definitions = _.get(metaDefinitions, \"data.metaobjectDefinitions\");\n\n  const activator = (\n    <Button onClick={toggleActive} disclosure>\n      More actions\n    </Button>\n  );\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app\" }}\n      title=\"Metaobjects\"\n      subtitle={`${numberFormat(\n        _.get(definitions, \"edges.length\", 0)\n      )} definitions`}\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <VerticalStack gap=\"3\">\n              <MetaDefinition\n                edges={_.get(definitions, \"edges\")}\n                pageInfo={_.get(definitions, \"pageInfo\")}\n              />\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"1\"\n      paddingInlineEnd=\"1\"\n      background=\"bg-subdued\"\n      borderWidth=\"1\"\n      borderColor=\"border\"\n      borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import { json } from \"@remix-run/node\";\nimport {\n  Await,\n  useActionData,\n  useFetcher,\n  useLoaderData,\n  useNavigate,\n  useSubmit } from\n\"@remix-run/react\";\nimport {\n  Box,\n  Card,\n  Layout,\n  Page,\n  Text,\n  TextField,\n  VerticalStack } from\n\"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport {\n  Suspense,\n  lazy,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState } from\n\"react\";\nimport ProductItems from \"~/components/Tables/ProductItems\";\nimport ProductProperties from \"~/components/Tables/ProductProperties\";\nimport { getProductIDString } from \"~/constants\";\nimport { productQuery } from \"~/graphql/products/productQuery\";\nimport { authenticate } from \"~/shopify.server\";\nimport { IItemMetafield, IPropertyMetafield } from \"~/types\";\nimport ItemMetafieldForm from \"~/components/Form/Product/ItemMetafieldForm\";\nimport { get, numberGenerator, toHTML } from \"~/utils\";\nimport PropertyMetafieldForm from \"~/components/Form/Product/PropertyMetafieldForm\";\nimport ImageGrid from \"~/components/ImageGrid\";\nimport ImageForm from \"~/components/Form/Product/ImageForm\";\nimport {\n  createVariables,\n  metafieldSetMutation } from\n\"~/graphql/metafields/metafieldSetMutation\";\nimport SaveAppBar from \"~/components/Form/SaveAppBar\";\nimport {\n  createUpdateProductVariables,\n  productSaveUpdateMutation } from\n\"~/graphql/products/productUpdate\";\nimport DuplicateForm from \"~/components/Form/Product/DuplicateForm\";\nimport mkecss from \"@uiw/react-md-editor/markdown-editor.css\";\nimport mkdn from \"@uiw/react-markdown-preview/markdown.css\";\nimport { useFormik } from \"formik\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { parseJSONWithData } from \"~/utils/metaobjects\";\nconst MDEditor = lazy(() => import(\"@uiw/react-md-editor\"));\n\nexport const links = () => [\n{ rel: \"stylesheet\", href: mkecss },\n{ rel: \"stylesheet\", href: mkdn }];\n\n\nexport async function loader({ request, params }) {\n  const { admin } = await authenticate.admin(request);\n\n  const id = numberGenerator();\n  const data = await productQuery({\n    graphql: admin.graphql,\n    id: getProductIDString(params.id)\n  });\n  let productdescription = parseJSONWithData(\n    _.get(data, \"data.product.productdescription.value\")\n  );\n  let productItems = [];\n  let productProperties = [];\n  if (_.get(data, \"data.product.items.value\")) {\n    productItems = JSON.parse(_.get(data, \"data.product.items.value\", \"{}\"));\n  }\n  if (_.get(data, \"data.product.properties.value\")) {\n    productProperties = JSON.parse(\n      _.get(data, \"data.product.properties.value\", \"{}\")\n    );\n  }\n\n  return json(\n    {\n      product: _.get(data, \"data.product\"),\n      productdescription,\n      productItems: _.map(_.get(productItems, \"data\", []), (it, index) => ({\n        id: id + index + 1,\n        ...it\n      })),\n      productProperties: _.map(\n        _.get(productProperties, \"data\", []),\n        (it, index) => ({ id: index + id + 1, ...it })\n      )\n    },\n    {\n      headers: {\n        \"Cache-Control\": \"no-store, no-cache, must-revalidate\"\n      }\n    }\n  );\n}\n\nexport async function action({ request, params }) {\n  const { session, admin } = await authenticate.admin(request);\n  const data = {\n    ...Object.fromEntries(await request.formData())\n  };\n  const productId = getProductIDString(params.id);\n  const variables = createVariables({\n    ownerId: _.get(data, \"ownerId\"),\n    properties: _.get(data, \"properties\"),\n    items: _.get(data, \"items\"),\n    additionalmedia: _.get(data, \"additionalmedia\"),\n    mainmedia: _.get(data, \"mainmedia\"),\n    productdescription: JSON.stringify({\n      data: _.get(data, \"productdescription\")\n    })\n  });\n\n  const response = await metafieldSetMutation({\n    graphql: admin.graphql,\n    variables\n  });\n\n  const productVariables = createUpdateProductVariables({\n    productId,\n    title: _.get(data, \"title\"),\n    descriptionHtml: _.get(data, \"description\")\n  });\n  const res = await productSaveUpdateMutation({\n    graphql: admin.graphql,\n    variables: productVariables\n  });\n  return json({ data: res });\n}\n\nexport default function ProductPage() {\n  const { product, productItems, productProperties, productdescription } =\n  useLoaderData();\n\n  const [formDirty, setFormDirty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const actionData = useActionData();\n  const activatorRef = useRef<HTMLDivElement>(null);\n\n  const itemFetcher = useFetcher();\n\n  const [itemDefinitions, setItemDefinitions] = useState([]);\n  const handleItemDefinitionsChange = useCallback((values) => {\n    setItemDefinitions(values);\n  }, []);\n\n  useEffect(() => {\n    if (itemFetcher.data) {\n      const o = _.map(\n        _.get(itemFetcher.data, \"data.metaobjects.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.displayName\")\n          };\n        }\n      );\n      handleItemDefinitionsChange(o);\n    }\n  }, [itemFetcher.data, loading]);\n\n  const propertiesFetcher = useFetcher();\n  const [standardProperties, setStandardProperties] = useState([]);\n  const handleSetPropertiesChange = useCallback((values) => {\n    setStandardProperties(values);\n  }, []);\n\n  useEffect(() => {\n    if (propertiesFetcher.data) {\n      const o = _.map(\n        _.get(propertiesFetcher.data, \"data.metaobjects.edges\"),\n        (item) => {\n          return {\n            value: _.get(item, \"node.id\"),\n            label: _.get(item, \"node.displayName\")\n          };\n        }\n      );\n      handleSetPropertiesChange(o);\n    }\n  }, [propertiesFetcher.data]);\n\n  const handlePropertiesChange = useCallback((values) => {\n    formik.setFieldValue(\"properties\", values);\n    setFormDirty(true);\n  }, []);\n\n  const handleLoadingChange = useCallback((value) => setLoading(value), []);\n  useEffect(() => {\n    handleLoadingChange(false);\n    setFormDirty(false);\n    if (initialValues == formik.values) {\n      setFormDirty(false);\n    }\n  }, [actionData]);\n\n  const images = useMemo(() => {\n    if (_.get(product, \"additionalmedia.value\")) {\n      return JSON.parse(_.get(product, \"additionalmedia.value\", \"[]\"));\n    }\n    return [];\n  }, []);\n\n  const fetcher = useFetcher();\n  const fetcher2 = useFetcher();\n  const navigate = useNavigate();\n\n  const setAdditionalMedia = (values) => {\n    formik.setFieldValue(\"additionalMedia\", values);\n    handleFormDirty();\n  };\n  const submit = useSubmit();\n  const handleFormDirty = useCallback(() => setFormDirty(true), []);\n\n  const initialValues = {\n    items: productItems,\n    properties: productProperties,\n    title: _.get(product, \"title\"),\n    description: _.get(product, \"description\"),\n    mainMedia: _.get(product, \"mainMedia.value\", \"\") ?\n    [_.get(product, \"mainMedia.value\", \"\")] :\n    [],\n    additionalMedia: images,\n    id: _.get(product, \"id\"),\n    productdescription: productdescription || \"\"\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: async (values) => {\n      setLoading(true);\n      const data = {\n        title: _.get(values, \"title\"),\n        description: _.get(values, \"description\"),\n        ownerId: _.get(product, \"id\"),\n        properties: JSON.stringify({ data: _.get(values, \"properties\") }),\n        items: JSON.stringify({ data: _.get(values, \"items\") }),\n        additionalmedia: JSON.stringify(_.get(values, \"additionalMedia\")),\n        mainmedia: _.get(values, \"mainMedia\"),\n        productdescription: _.get(values, \"productdescription\")\n      };\n      submit(data, { method: \"post\" });\n    }\n  });\n\n  useEffect(() => {\n    setLoading(false);\n  }, [formDirty]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  const addItem = (item: IItemMetafield) => {\n    handleFormDirty();\n    const items = _.get(formik, \"values.items\", []);\n    const _item = _.findIndex(items, (it) => it.id === item.id);\n    let newItem = item;\n    if (_item) {\n      newItem = { ...item, id: numberGenerator() + numberGenerator() };\n    }\n    formik.setFieldValue(\"items\", [item, ...items]);\n  };\n\n  const removeItem = (id: number) => {\n    const items = _.get(formik, \"values.items\", []);\n    formik.setFieldValue(\n      \"items\",\n      items?.filter((it) => _.get(it, \"id\") !== id)\n    );\n    handleFormDirty();\n  };\n\n  const onEditItem = (item: IItemMetafield) => {\n    const items = _.get(formik, \"values.items\", []);\n    const index = _.findIndex(items, (_item) => _item?.id == item.id);\n\n    formik.setFieldValue(`items[${index}]`, item);\n    handleFormDirty();\n  };\n\n  const handleItemsChange = useCallback((values) => {\n    formik.setFieldValue(`items`, values);\n    setFormDirty(true);\n  }, []);\n\n  const addProperty = (item: IPropertyMetafield) => {\n    const otherProperties = _.get(formik, \"values.properties\", []);\n    formik.setFieldValue(\"properties\", [item, ...otherProperties]);\n    handleFormDirty();\n  };\n  const removeProperty = (id: number) => {\n    formik.setFieldValue(\n      \"properties\",\n      get(formik, \"values.properties\", [])?.filter(\n        (it) => _.get(it, \"id\") !== id\n      )\n    );\n    handleFormDirty();\n  };\n  const onEditProperty = (item: IPropertyMetafield, idx) => {\n    const index = _.findIndex(\n      get(formik, \"values.properties\", []),\n      (prop) => prop?.id === item?.id\n    );\n    formik.setFieldValue(`properties[${index}]`, item);\n    handleFormDirty();\n  };\n  const removeAdditionalImages = (image: string) => {\n    formik.setFieldValue(\"additionalMedia\", [\n    ...get(formik, \"values.additionalMedia\")?.filter((it) => it !== image)]\n    );\n    handleFormDirty();\n  };\n  const onAddMainMedia = (value: string) => {\n    formik.setFieldValue(\"mainMedia\", [value]);\n    handleFormDirty();\n  };\n\n  const onAddAdditionalMedia = (image: string) => {\n    formik.setFieldValue(\"additionalMedia\", [\n    image,\n    ...get(formik, \"values.additionalMedia\", [])]\n    );\n\n    handleFormDirty();\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Page\n        backAction={{ content: \"Products\", url: \"/app/products\" }}\n        title={_.get(product, \"title\", \"\")}\n        subtitle=\"product\"\n        compactTitle\n        secondaryActions={[\n        {\n          content: \"Duplicate\",\n          accessibilityLabel: \"Secondary action label\",\n          onAction: () => {\n            activatorRef.current?.querySelector(\"button\")?.click();\n          }\n        }]}>\n\n\n        <Layout>\n          <Layout.Section>\n            {formDirty ?\n            <SaveAppBar\n              loading={loading}\n              saveAction={formik.submitForm}\n              discardAction={() => {\n                navigate(\"/app/products\");\n              }} /> :\n\n            null}\n            <Card>\n              <DuplicateForm\n                modalTitle={\"Duplicate\"}\n                product={product}\n                activatorRef={activatorRef} />\n\n              <VerticalStack gap=\"3\">\n                <TextField\n                  label=\"Title\"\n                  value={get(formik, \"values.title\")}\n                  onChange={(e) => {\n                    formik.setFieldValue(\"title\", e);\n                    handleFormDirty();\n                  }}\n                  autoComplete=\"off\" />\n\n\n                <Suspense>\n                  <Await resolve={get(formik, \"values.productdescription\")}>\n                    {(value) =>\n                    <>\n                        <label>{\"Description\"}</label>\n                        <div data-color-mode=\"light\">\n                          <MDEditor\n                          value={\n                          value?.includes(\"children\") ?\n                          toHTML(value) :\n                          value}\n\n                          name={\"productdescription\"}\n                          onChange={(e) => {\n                            formik.setFieldValue(\"productdescription\", e);\n                            handleFormDirty();\n                          }} />\n\n                          <Box padding=\"2\"></Box>\n                        </div>\n                      </>}\n\n                  </Await>\n                </Suspense>\n\n                <Suspense>\n                  <Await resolve={get(formik, \"values.description\")}>\n                    {(value) =>\n                    <>\n                        <label>\n                          {\n                        \"Original Description (not editable - to be removed in future)\"}\n\n                        </label>\n                        <div data-color-mode=\"light\">\n                          <MDEditor\n                          value={\n                          value?.includes(\"children\") ?\n                          toHTML(value) :\n                          value}\n\n                          name={\"description\"}\n                          onChange={(e) => {\n\n\n                            // formik.setFieldValue(\"productdescription\", e);\n                            // handleFormDirty();\n                          }} />\n                          <Box padding=\"2\"></Box>\n                        </div>\n                      </>}\n                  </Await>\n                </Suspense>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                  }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Items\n                  </Text>\n\n                  <ItemMetafieldForm\n                    activatorTitle=\"Add Item\"\n                    fetcher={fetcher}\n                    onAdd={addItem}\n                    values={{}} />\n\n                </div>\n                <ProductItems\n                  fetcher={fetcher}\n                  onEdit={onEditItem}\n                  items={get(formik, \"values.items\")}\n                  onRemove={removeItem}\n                  handleItemChange={handleItemsChange}\n                  itemDefinitions={itemDefinitions}\n                  formik={formik} />\n\n                <Box padding={\"5\"} />\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                  }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Properties\n                  </Text>\n\n                  <PropertyMetafieldForm\n                    activatorTitle=\"Add Property\"\n                    standardProperties={standardProperties}\n                    onAdd={addProperty}\n                    values={{}} />\n\n                </div>\n\n                <ProductProperties\n                  fetcher={fetcher2}\n                  onEdit={onEditProperty}\n                  onAdd={addProperty}\n                  onRemove={removeProperty}\n                  properties={get(formik, \"values.properties\")}\n                  handleItemChange={handlePropertiesChange}\n                  standardProperties={standardProperties} />\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                  }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Main Media\n                  </Text>\n\n                  <ImageForm\n                    activatorTitle={`${\n                    get(formik, \"values.mainMedia\", [])?.length ?\n                    \"Edit\" :\n                    \"Add\"\n                    } Main Media`}\n                    onAdd={onAddMainMedia} />\n\n                </div>\n                <ImageGrid\n                  images={get(formik, \"values.mainMedia\", [])}\n                  onRemove={(image: string) => {\n                    formik.setFieldValue(\"mainMedia\", []);\n                    handleFormDirty();\n                  }}\n                  setImages={(values) => {\n                    formik.setFieldValue(\"mainMedia\", values);\n                    handleFormDirty();\n                  }} />\n\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                  }}>\n\n                  <Text variant=\"headingMd\" as=\"h6\">\n                    Additional Media\n                  </Text>\n\n                  <ImageForm\n                    onAdd={onAddAdditionalMedia}\n                    activatorTitle={`Add More Media`} />\n\n                </div>\n                <ImageGrid\n                  images={get(formik, \"values.additionalMedia\", [])}\n                  onRemove={removeAdditionalImages}\n                  setImages={setAdditionalMedia} />\n\n              </VerticalStack>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </Page>\n    </DndProvider>);\n\n}", "import {\n  IndexTable,\n  LegacyCard,\n  VerticalStack,\n  ButtonGroup,\n  Button,\n} from \"@shopify/polaris\";\nimport { IItemMetafield } from \"~/types\";\nimport { get, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport DeleteIcon from \"../Icons/DeleteIcon\";\nimport EditIcon from \"../Icons/EditIcon\";\nimport { FetcherWithComponents } from \"@remix-run/react\";\nimport {\n  sortableContainer,\n  sortableElement,\n  arrayMove,\n} from \"react-sortable-hoc\";\nimport * as _ from \"lodash\";\nimport DragHandle from \"../Sorting/DragHandle\";\nimport { useHandleToggleModal } from \"~/utils/hooks\";\nimport ItemMetafieldEditorForm from \"../Form/Product/ItemMetafieldEditorForm\";\n\nconst ProductItems = ({\n  items,\n  loading: isLoading,\n  onRemove,\n  onEdit,\n  fetcher,\n  handleItemChange,\n  itemDefinitions,\n  formik,\n}: {\n  items: IItemMetafield[];\n  loading?: boolean;\n  onRemove: (id: number) => void;\n  onEdit: (item: IItemMetafield) => void;\n  fetcher: FetcherWithComponents<any>;\n  handleItemChange: (items: any) => void;\n  itemDefinitions: any;\n  formik: any;\n}) => {\n  const resourceName = {\n    singular: \"Item\",\n    plural: \"Items\",\n  };\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState({});\n  const handleSetItem = useCallback(\n    (value) => {\n      setItem(value);\n    },\n    [item]\n  );\n\n  useEffect(() => {\n    if (get(item, \"name\")) {\n      handleOpen();\n    }\n  }, [item]);\n\n  const SortableItem = sortableElement(\n    ({ id, name, ranking, qty, item }, index) => (\n      <IndexTable.Row\n        id={item?.id}\n        key={`${index}-${item?.id}-${name}`}\n        position={index}\n      >\n        <IndexTable.Cell>\n          <ButtonGroup segmented>\n            <Button size=\"micro\">\n              <DragHandle />\n            </Button>\n\n            <Button\n              size=\"micro\"\n              onClick={() => {\n                onRemove(id);\n              }}\n            >\n              <DeleteIcon />\n            </Button>\n            <Button\n              size=\"micro\"\n              onClick={() => {\n                handleSetItem({\n                  id,\n                  name,\n                  qty,\n                  ranking,\n                  item,\n                });\n              }}\n            >\n              <EditIcon />\n            </Button>\n          </ButtonGroup>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{truncate(name)}</IndexTable.Cell>\n        <IndexTable.Cell>{item?.name}</IndexTable.Cell>\n\n        <IndexTable.Cell>{ranking}</IndexTable.Cell>\n        <IndexTable.Cell>{qty}</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n\n  const SortableContainer = sortableContainer(({ children }) => {\n    return (\n      <IndexTable\n        resourceName={resourceName}\n        itemCount={items?.length || 0}\n        selectable={false}\n        headings={[\n          { title: \"\" },\n          { title: \"Name\" },\n          { title: \"Item definition\" },\n          { title: \"Ranking\" },\n          { title: \"Quantity\" },\n        ]}\n      >\n        {children}\n      </IndexTable>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const _items = arrayMove(items, oldIndex, newIndex);\n    handleItemChange(_items);\n    formik.setFieldValue(\"items\", _items);\n  };\n  const { active, handleClose, handleOpen } = useHandleToggleModal();\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <ItemMetafieldEditorForm\n        activatorTitle={\"\"}\n        active={active}\n        handleToggle={active ? handleClose : handleOpen}\n        fetcher={fetcher}\n        onAdd={onEdit}\n        itemDefinitions={itemDefinitions}\n        values={item}\n      />\n      <VerticalStack>\n        <SortableContainer onSortEnd={onSortEnd} useDragHandle>\n          {items?.map((value, index) => (\n            <SortableItem\n              key={`item-${value?.id}-${value?.qty}-${new Date().toString()}`}\n              index={index}\n              item={_.get(value, \"item\")}\n              name={value?.name}\n              id={_.get(value, \"id\")}\n              ranking={_.get(value, \"ranking\")}\n              qty={_.get(value, \"qty\")}\n            />\n          ))}\n        </SortableContainer>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default ProductItems;\n", "import { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport SelectField from \"../Fields/SelectField\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { IItemMetafield } from \"~/types\";\nimport { numberGenerator } from \"~/utils\";\n\ninterface Iitem {\n  name: string;\n  id: string;\n  metaobject_type: string;\n}\ninterface IError {\n  name: string;\n  ranking: string;\n  qty: string;\n  item: string;\n}\nconst ItemMetafieldEditorForm = ({\n  fetcher,\n  activatorTitle,\n  onAdd,\n  values,\n  active,\n  handleToggle,\n}) => {\n  // const [active, setActive] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(\n    _.get(values, \"item.id\") ? [_.get(values, \"item.id\")] : []\n  );\n\n  const [ranking, handleSetRanking] = useState(\"Key\");\n  const setRanking = useCallback((value) => handleSetRanking(value), []);\n  const [name, handleSetName] = useState(_.get(values, \"name\", \"\"));\n  const setName = useCallback((value) => handleSetName(value), [values]);\n  const [qty, setQty] = useState(_.get(values, \"qty\", \"\"));\n  const [errors, handleSetErrors] = useState({} as IError);\n  const setErrors = useCallback((value) => handleSetErrors(value), []);\n  const [item, handleSetItem] = useState(_.get(values, \"item\") as Iitem);\n  const setItem = useCallback((value) => handleSetItem(value), []);\n  useEffect(() => {\n    if (_.get(values, \"name\")) {\n      setName(_.get(values, \"name\"));\n    }\n    if (_.get(values, \"qty\")) {\n      setQty(_.get(values, \"qty\"));\n    }\n    if (_.get(values, \"ranking\")) {\n      setRanking(_.get(values, \"ranking\"));\n    }\n    if (_.get(values, \"item\")) {\n      handleSetItem(_.get(values, \"item\"));\n    }\n  }, [values]);\n  const onSubmit = () => {\n    setErrors({} as IError);\n    if (!name) {\n      setErrors({ ...errors, name: FIELD_REQUIRED });\n    }\n    if (!ranking) {\n      setErrors({ ...errors, ranking: FIELD_REQUIRED });\n    }\n    if (!qty) {\n      setErrors({ ...errors, qty: FIELD_REQUIRED });\n    }\n    if (!item?.id) {\n      setErrors({ ...errors, item: FIELD_REQUIRED });\n    }\n    if (Object.keys(errors).length) {\n      return;\n    }\n    onAdd({\n      id: _.get(values, \"id\") || numberGenerator(),\n      name,\n      ranking,\n      qty,\n      meta: {},\n      item,\n    } as IItemMetafield);\n    handleToggle();\n  };\n\n  const handleRankingChange = useCallback(\n    (value: string) => setRanking(value),\n    []\n  );\n\n  const handleNameChange = useCallback(\n    (newValue: string) => setName(newValue),\n    []\n  );\n\n  const handleQtyChange = useCallback((newValue: any) => setQty(newValue), []);\n\n  const raking = [\n    { label: \"Key\", value: \"Key\" },\n    { label: \"Main\", value: \"Main\" },\n    { label: \"Details\", value: \"Details\" },\n  ];\n\n  useEffect(() => {\n    if (!_.get(selectedOptions, \"[0]\")) return;\n    const option = _.find(\n      _.get(fetcher.data, \"data.metaobjects.edges\"),\n      (item) => {\n        return _.get(item, \"node.id\") === _.get(selectedOptions, \"[0]\");\n      }\n    );\n    const propertyBase = {\n      name: _.get(option, \"node.displayName\"),\n      id: _.get(option, \"node.id\"),\n      metaobject_type: _.get(option, \"node.id\"),\n    };\n    setItem(propertyBase);\n  }, [selectedOptions]);\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data, loading]);\n  const onSearch = _.debounce(function (data) {\n    try {\n      search(data);\n    } catch (error) {\n      console.log(\"error :>> \", error);\n    }\n  }, 1000);\n  const search = useCallback((data) => {\n    fetcher.load(\n      `/app/search-metaobjects/item_definition?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`\n    );\n  }, []);\n\n\n  const activator = (\n    <div style={{ display: \"none\" }}>\n      <Button size=\"micro\" onClick={handleToggle}>\n        {activatorTitle}\n      </Button>\n    </div>\n  );\n\n  if (!values?.name) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleToggle}\n        title=\"Item\"\n        primaryAction={{\n          content: \"Ok\",\n          onAction: onSubmit,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleToggle,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <TextField\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              autoComplete=\"off\"\n              error={errors.name}\n            />\n            <Box padding=\"2\"></Box>\n            <Select\n              label=\"Ranking\"\n              options={raking}\n              onChange={handleRankingChange}\n              value={ranking}\n              error={errors.ranking}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label=\"Qty\"\n              value={qty}\n              type=\"number\"\n              onChange={handleQtyChange}\n              autoComplete=\"off\"\n              error={errors.qty}\n            />\n            <Box padding=\"2\"></Box>\n            <SelectField\n              onSearch={onSearch}\n              label={\"Select Item (Type First Letters to Search)\"}\n              options={options}\n              loading={loading}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n              error={errors.item}\n              placeholder={_.get(values, \"item.name\") || \"search..\"}\n            />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ItemMetafieldEditorForm;\n", "export const productQuery = async ({ graphql, id }) => {\n  const response = await graphql(query, { variables: { id } });\n  return response.json();\n};\n\nconst query = `\n\nquery Product($id: ID!) {\n    product(id: $id) {\n      title\n      id\n      descriptionHtml\n      description\n      properties: metafield(namespace: \"custom\", key: \"properties\") {\n        key\n        value\n      }\n      items: metafield(namespace: \"custom\", key: \"items\") {\n        key\n        value\n      }\n      productProperty: metafield(namespace: \"custom\", key: \"productproperty\") {\n        key\n        value\n      }\n      bom: metafield(namespace: \"custom\", key: \"bom\") {\n        key\n        value\n      }\n      mainMedia: metafield(namespace: \"custom\", key: \"mainmedia\") {\n        key\n        value\n      }\n      additionalmedia: metafield(namespace: \"custom\", key: \"additionalmedia\") {\n        key\n        value\n      }\n      productdescription: metafield(namespace: \"custom\", key: \"productdescription\") {\n        key\n        value\n      }\n    }\n  }\n  `;\n", "import { Box, Button, Modal, Select, TextField } from \"@shopify/polaris\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport SelectField from \"../Fields/SelectField\";\nimport { FIELD_REQUIRED } from \"~/constants\";\nimport { IItemMetafield } from \"~/types\";\nimport { numberGenerator } from \"~/utils\";\n\ninterface Iitem {\n  name: string;\n  id: string;\n  metaobject_type: string;\n}\ninterface IError {\n  name: string;\n  ranking: string;\n  qty: string;\n  item: string;\n}\nconst ItemMetafieldForm = ({ fetcher, activatorTitle, onAdd, values }) => {\n  const [active, setActive] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>(\n    _.get(values, \"item.id\") ? [_.get(values, \"item.id\")] : []\n  );\n  const [ranking, handleSetRanking] = useState(\"Key\");\n  const setRanking = useCallback((value) => handleSetRanking(value), []);\n  const [name, handleSetName] = useState(_.get(values, \"name\", \"\"));\n  const setName = useCallback((value) => handleSetName(value), []);\n  const [qty, setQty] = useState(_.get(values, \"qty\", \"\"));\n  const [errors, handleSetErrors] = useState({} as IError);\n  const setErrors = useCallback((value) => handleSetErrors(value), []);\n  const [item, handleSetItem] = useState(_.get(values, \"item\") as Iitem);\n  const setItem = useCallback((value) => handleSetItem(value), []);\n\n  const onSubmit = () => {\n    setErrors({} as IError);\n    if (!name) {\n      setErrors({ ...errors, name: FIELD_REQUIRED });\n    }\n    if (!ranking) {\n      setErrors({ ...errors, ranking: FIELD_REQUIRED });\n    }\n    if (!qty) {\n      setErrors({ ...errors, qty: FIELD_REQUIRED });\n    }\n    if (!item?.id) {\n      setErrors({ ...errors, item: FIELD_REQUIRED });\n    }\n    if (Object.keys(errors).length) {\n      return;\n    }\n    onAdd({\n      id: _.get(values, \"id\") || numberGenerator(),\n      name,\n      ranking,\n      qty,\n      meta: {},\n      item,\n    } as IItemMetafield);\n    handleChange();\n    setRanking(\"Key\")\n    setName(\"\")\n    setItem({})\n    setQty(\"\")\n  };\n\n  const handleRankingChange = useCallback(\n    (value: string) => setRanking(value),\n    []\n  );\n\n  const handleNameChange = useCallback(\n    (newValue: string) => setName(newValue),\n    []\n  );\n\n  const handleQtyChange = useCallback((newValue: any) => setQty(newValue), []);\n\n  const raking = [\n    { label: \"Key\", value: \"Key\" },\n    { label: \"Main\", value: \"Main\" },\n    { label: \"Details\", value: \"Details\" },\n  ];\n\n  useEffect(() => {\n    if (!_.get(selectedOptions, \"[0]\")) return;\n    const option = _.find(\n      _.get(fetcher.data, \"data.metaobjects.edges\"),\n      (item) => {\n        return _.get(item, \"node.id\") === _.get(selectedOptions, \"[0]\");\n      }\n    );\n    const propertyBase = {\n      name: _.get(option, \"node.displayName\"),\n      id: _.get(option, \"node.id\"),\n      metaobject_type: _.get(option, \"node.id\"),\n    };\n    setItem(propertyBase);\n  }, [selectedOptions]);\n\n  useEffect(() => {\n    setLoading(fetcher.state === \"loading\");\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (fetcher.data) {\n      const o = _.map(_.get(fetcher.data, \"data.metaobjects.edges\"), (item) => {\n        return {\n          value: _.get(item, \"node.id\"),\n          label: _.get(item, \"node.displayName\"),\n        };\n      });\n      setOptions(o);\n    }\n  }, [fetcher.data, loading]);\n  const onSearch = _.debounce(function (data) {\n    try {\n      search(data);\n    } catch (error) {\n      console.log('error :>> ', error);\n    }\n   \n  }, 1000);\n  const search = useCallback((data) => {\n    fetcher.load(\n      `/app/search-metaobjects/item_definition?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`\n    );\n  }, []);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n\n  const activator = (\n    <Button size=\"micro\" onClick={handleChange}>\n      {activatorTitle}\n    </Button>\n  );\n\n  return (\n    <div>\n      <Modal\n        activator={activator}\n        open={active}\n        onClose={handleChange}\n        title=\"Item\"\n        primaryAction={{\n          content: \"Ok\",\n          onAction: onSubmit,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleChange,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            <TextField\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              autoComplete=\"off\"\n              error={errors.name}\n            />\n            <Box padding=\"2\"></Box>\n            <Select\n              label=\"Ranking\"\n              options={raking}\n              onChange={handleRankingChange}\n              value={ranking}\n              error={errors.ranking}\n            />\n            <Box padding=\"2\"></Box>\n            <TextField\n              label=\"Qty\"\n              value={qty}\n              type=\"number\"\n              onChange={handleQtyChange}\n              autoComplete=\"off\"\n              error={errors.qty}\n            />\n            <Box padding=\"2\"></Box>\n            <SelectField\n              onSearch={onSearch}\n              label={\"Select Item (Type First Letters to Search)\"}\n              options={options}\n              loading={loading}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n              error={errors.item}\n              placeholder={_.get(values, \"item.name\") || \"search..\"}\n            />\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ItemMetafieldForm;\n", "export const metafieldSetMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, {\n    variables,\n  });\n  return response.json();\n};\nexport const createVariables = ({\n  ownerId,\n  properties,\n  items,\n  additionalmedia,\n  mainmedia,\n  productdescription,\n}) => {\n  return {\n    metafields: [\n      {\n        namespace: \"custom\",\n        key: \"productdescription\",\n        type: \"json\",\n        value: productdescription,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"properties\",\n        type: \"json\",\n        value: properties,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"items\",\n        type: \"json\",\n        value: items,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"additionalmedia\",\n        type: \"list.url\",\n        value: additionalmedia,\n        ownerId,\n      },\n      {\n        namespace: \"custom\",\n        key: \"mainmedia\",\n        type: \"url\",\n        value: mainmedia,\n        ownerId,\n      },\n    ],\n  };\n};\n\nconst query = `\nmutation MetafieldsSet($metafields: [MetafieldsSetInput!]!) {\n  metafieldsSet(metafields: $metafields) {\n    metafields {\n      id\n      namespace\n      key\n      value\n      __typename\n    }\n    userErrors {\n      field\n      message\n      elementIndex\n      __typename\n    }\n    __typename\n  }\n}\n\n`;\n", "export const productSaveUpdateMutation = async ({ graphql, variables }) => {\n  const response = await graphql(query, { variables });\n  return response.json();\n};\n\nexport const createUpdateProductVariables = ({\n  productId,\n  title,\n  descriptionHtml,\n}) => {\n  return {\n    shouldQueryMarkets: true,\n    shouldQueryMarketsPro: false,\n    shouldQueryB2bCatalogs: true,\n    shouldMutateInventory: true,\n    includeProductPublicationStatus: false,\n\n    product: {\n      title,\n      descriptionHtml,\n      id: productId,\n    },\n    productId,\n    skipProductUpdate: false,\n    shouldBulkUpdateVariants: true,\n    publicationsToPublish: [],\n    publicationsToUnpublish: [],\n    shouldPublish: false,\n    shouldUnpublish: false,\n    inventoryItemAdjustments: [],\n  };\n};\n\nconst query = `\n\n\nmutation ProductSaveUpdate($product: ProductInput!, $productId: ID!, $publicationsToPublish: [PublicationInput!]!, $publicationsToUnpublish: [PublicationInput!]!, $shouldPublish: Boolean!, $shouldUnpublish: Boolean!,  $shouldQueryMarkets: Boolean = false, $shouldQueryMarketsPro: Boolean = false, $shouldQueryB2bCatalogs: Boolean = false, $variantsToBulkUpdate: [ProductVariantsBulkInput!] = [], $shouldBulkUpdateVariants: Boolean!, $skipProductUpdate: Boolean!) {\n  productUpdate(input: $product) @skip(if: $skipProductUpdate) {\n    product {\n      id\n      ...OrganizationCardProductDetails\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n  productVariantsBulkUpdate(\n    productId: $productId\n    variants: $variantsToBulkUpdate\n  ) @include(if: $shouldBulkUpdateVariants) {\n    productVariants {\n      ...VariantsCardVariant\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n  publishablePublish(id: $productId, input: $publicationsToPublish) @include(if: $shouldPublish) {\n    publishable @skip(if: $shouldUnpublish) {\n      ... on Product {\n        id\n        onlineStoreUrl\n        resourceMarketPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: MARKET\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarkets) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceCountryPublications: resourcePublicationsV2(\n          first: 250\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarketsPro) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceMerchantOfRecordPublications: resourcePublicationsV2(\n          first: 1\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarketsPro) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceB2bCatalogPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: COMPANY_LOCATION\n          onlyPublished: false\n        ) @include(if: $shouldQueryB2bCatalogs) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n  publishableUnpublish(id: $productId, input: $publicationsToUnpublish) @include(if: $shouldUnpublish) {\n    publishable {\n      ... on Product {\n        id\n        onlineStoreUrl\n        resourceMarketPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: MARKET\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarkets) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceCountryPublications: resourcePublicationsV2(\n          first: 250\n          onlyPublished: false\n        ) @include(if: $shouldQueryMarketsPro) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        resourceB2bCatalogPublications: resourcePublicationsV2(\n          first: 250\n          catalogType: COMPANY_LOCATION\n          onlyPublished: false\n        ) @include(if: $shouldQueryB2bCatalogs) {\n          nodes {\n            publication {\n              id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    userErrors {\n      field\n      message\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment OrganizationCardProductDetails on Product {\n  tags\n  vendor\n  smartCollections: collections(first: 250, query: \"collection_type:smart\") {\n    ...OrganizationCardCollectionConnection\n    __typename\n  }\n  customCollections: collections(first: 250, query: \"collection_type:custom\") {\n    ...OrganizationCardCollectionConnection\n    __typename\n  }\n  __typename\n}\n\nfragment OrganizationCardCollectionConnection on CollectionConnection {\n  edges {\n    node {\n      id\n      title\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment VariantsCardVariant on ProductVariant {\n  id\n  barcode\n  price\n  compareAtPrice\n  requiresShipping\n  inventoryQuantity\n  position\n  sku\n  taxable\n  weight\n  weightUnit\n  fulfillmentService {\n    serviceName\n    handle\n    id\n    __typename\n  }\n  inventoryItem {\n    id\n    locationsCount\n    __typename\n  }\n  ...InventoryItemVariantWithFirstInventoryLevel\n  inventoryPolicy\n  image {\n    id\n    src: url\n    altText\n    __typename\n  }\n  selectedOptions {\n    name\n    value\n    __typename\n  }\n  taxCode\n  __typename\n}\n\nfragment InventoryItemVariantWithFirstInventoryLevel on ProductVariant {\n  inventoryItem {\n    id\n    tracked\n    trackedEditable {\n      locked\n      reason\n      __typename\n    }\n    unitCost {\n      amount\n      currencyCode\n      __typename\n    }\n    countryCodeOfOrigin\n    provinceCodeOfOrigin\n    harmonizedSystemCode\n    __typename\n  }\n  __typename\n}`", "import {\n  Box,\n  Button,\n  InlineError,\n  Modal,\n  Text,\n  TextField,\n} from \"@shopify/polaris\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { FIELD_REQUIRED } from \"~/constants\";\n\nimport * as _ from \"lodash\";\nimport { useActionData, useLocation, useSubmit } from \"@remix-run/react\";\n\nconst DuplicateForm = ({ modalTitle, product, activatorRef }) => {\n  const actionErrors = useActionData()?.errors || {};\n  const location = useLocation();\n  const [title, setTitle] = useState(`Copy of - ${_.get(product, \"title\")}`);\n  const [errors, setErrors] = useState({} as { title: string });\n  const [laoding, setLoading] = useState(false);\n\n  const handleLoadingChange = useCallback((value) => setLoading(value), []);\n  const handleValueChange = useCallback((value) => setTitle(value), []);\n  const handleSetErrors = useCallback((value) => setErrors(value), []);\n  \n  const [active, setActive] = useState(false);\n  const submit = useSubmit();\n\n  const handleOpen = useCallback(() => setActive(true), []);\n\n  const handleClose = useCallback(() => {\n    setActive(false);\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [active]);\n\n  useEffect(() => {\n    handleClose();\n  }, [location]);\n\n  const handleSubmit = async () => {\n    handleSetErrors({});\n    handleLoadingChange(true);\n    if (!title) {\n      return handleSetErrors({ title: FIELD_REQUIRED });\n    }\n    const data = {\n      title,\n      productId: _.get(product, \"id\"),\n    };\n    await submit(data, { method: \"post\", action: \"/app/product/duplicate\" });\n  };\n\n  return (\n    <div>\n      <div style={{ height: 0, display: \"none\" }} ref={activatorRef}>\n        <Button onClick={handleOpen}>~</Button>\n      </div>\n      <Modal\n        small\n        open={active}\n        onClose={handleClose}\n        title={modalTitle}\n        primaryAction={{\n          content: \"Ok\",\n          onAction: handleSubmit,\n          loading: laoding,\n        }}\n        secondaryActions={[\n          {\n            content: \"Cancel\",\n            onAction: handleClose,\n          },\n        ]}\n      >\n        <Modal.Section>\n          <Box>\n            {Object.keys(actionErrors).length ? (\n              <InlineError\n                message={JSON.stringify(actionErrors)}\n                fieldID=\"errors\"\n              />\n            ) : null}\n            <TextField\n              label=\"Title\"\n              value={title}\n              onChange={handleValueChange}\n              autoComplete=\"off\"\n              error={errors.title}\n            />\n            <Box padding=\"2\"></Box>\n\n            <Text variant=\"bodyLg\" as=\"p\">\n              All product details will be copied from the original product.\n            </Text>\n          </Box>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DuplicateForm;\n", "import type { DragDropManager } from 'dnd-core'\nimport { createContext } from 'react'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n", "import type { Store } from 'redux'\nimport { createStore } from 'redux'\n\nimport { DragDropManagerImpl } from './classes/DragDropManagerImpl.js'\nimport { DragDropMonitorImpl } from './classes/DragDropMonitorImpl.js'\nimport { HandlerRegistryImpl } from './classes/HandlerRegistryImpl.js'\nimport type { BackendFactory, DragDropManager } from './interfaces.js'\nimport type { State } from './reducers/index.js'\nimport { reduce } from './reducers/index.js'\n\nexport function createDragDropManager(\n\tbackendFactory: BackendFactory,\n\tglobalContext: unknown = undefined,\n\tbackendOptions: unknown = {},\n\tdebugMode = false,\n): DragDropManager {\n\tconst store = makeStoreInstance(debugMode)\n\tconst monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store))\n\tconst manager = new DragDropManagerImpl(store, monitor)\n\tconst backend = backendFactory(manager, globalContext, backendOptions)\n\tmanager.receiveBackend(backend)\n\treturn manager\n}\n\nfunction makeStoreInstance(debugMode: boolean): Store<State> {\n\t// TODO: if we ever make a react-native version of this,\n\t// we'll need to consider how to pull off dev-tooling\n\tconst reduxDevTools =\n\t\ttypeof window !== 'undefined' &&\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__\n\treturn createStore(\n\t\treduce,\n\t\tdebugMode &&\n\t\t\treduxDevTools &&\n\t\t\treduxDevTools({\n\t\t\t\tname: 'dnd-core',\n\t\t\t\tinstanceId: 'dnd-core',\n\t\t\t}),\n\t)\n}\n", "/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n", "// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n", "export const INIT_COORDS = 'dnd-core/INIT_COORDS'\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG'\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE'\nexport const HOVER = 'dnd-core/HOVER'\nexport const DROP = 'dnd-core/DROP'\nexport const END_DRAG = 'dnd-core/END_DRAG'\n", "import type { AnyAction } from 'redux'\n\nimport type { XYCoord } from '../../../interfaces.js'\nimport { INIT_COORDS } from '../types.js'\n\nexport function setClientOffset(\n\tclientOffset: XYCoord | null | undefined,\n\tsourceClientOffset?: XYCoord | null | undefined,\n): AnyAction {\n\treturn {\n\t\ttype: INIT_COORDS,\n\t\tpayload: {\n\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\tclientOffset: clientOffset || null,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tBeginDragOptions,\n\tBeginDragPayload,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tXYCoord,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { setClientOffset } from './local/setClientOffset.js'\nimport { BEGIN_DRAG, INIT_COORDS } from './types.js'\n\nconst ResetCoordinatesAction = {\n\ttype: INIT_COORDS,\n\tpayload: {\n\t\tclientOffset: null,\n\t\tsourceClientOffset: null,\n\t},\n}\n\nexport function createBeginDrag(manager: DragDropManager) {\n\treturn function beginDrag(\n\t\tsourceIds: Identifier[] = [],\n\t\toptions: BeginDragOptions = {\n\t\t\tpublishSource: true,\n\t\t},\n\t): Action<BeginDragPayload> | undefined {\n\t\tconst {\n\t\t\tpublishSource = true,\n\t\t\tclientOffset,\n\t\t\tgetSourceClientOffset,\n\t\t}: BeginDragOptions = options\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\n\t\t// Initialize the coordinates using the client offset\n\t\tmanager.dispatch(setClientOffset(clientOffset))\n\n\t\tverifyInvariants(sourceIds, monitor, registry)\n\n\t\t// Get the draggable source\n\t\tconst sourceId = getDraggableSource(sourceIds, monitor)\n\t\tif (sourceId == null) {\n\t\t\tmanager.dispatch(ResetCoordinatesAction)\n\t\t\treturn\n\t\t}\n\n\t\t// Get the source client offset\n\t\tlet sourceClientOffset: XYCoord | null = null\n\t\tif (clientOffset) {\n\t\t\tif (!getSourceClientOffset) {\n\t\t\t\tthrow new Error('getSourceClientOffset must be defined')\n\t\t\t}\n\t\t\tverifyGetSourceClientOffsetIsFunction(getSourceClientOffset)\n\t\t\tsourceClientOffset = getSourceClientOffset(sourceId)\n\t\t}\n\n\t\t// Initialize the full coordinates\n\t\tmanager.dispatch(setClientOffset(clientOffset, sourceClientOffset))\n\n\t\tconst source = registry.getSource(sourceId)\n\t\tconst item = source.beginDrag(monitor, sourceId)\n\t\t// If source.beginDrag returns null, this is an indicator to cancel the drag\n\t\tif (item == null) {\n\t\t\treturn undefined\n\t\t}\n\t\tverifyItemIsObject(item)\n\t\tregistry.pinSource(sourceId)\n\n\t\tconst itemType = registry.getSourceType(sourceId)\n\t\treturn {\n\t\t\ttype: BEGIN_DRAG,\n\t\t\tpayload: {\n\t\t\t\titemType,\n\t\t\t\titem,\n\t\t\t\tsourceId,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t\tsourceClientOffset: sourceClientOffset || null,\n\t\t\t\tisSourcePublic: !!publishSource,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyInvariants(\n\tsourceIds: Identifier[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.')\n\tsourceIds.forEach(function (sourceId) {\n\t\tinvariant(\n\t\t\tregistry.getSource(sourceId),\n\t\t\t'Expected sourceIds to be registered.',\n\t\t)\n\t})\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset: any) {\n\tinvariant(\n\t\ttypeof getSourceClientOffset === 'function',\n\t\t'When clientOffset is provided, getSourceClientOffset must be a function.',\n\t)\n}\n\nfunction verifyItemIsObject(item: any) {\n\tinvariant(isObject(item), 'Item must be an object.')\n}\n\nfunction getDraggableSource(sourceIds: Identifier[], monitor: DragDropMonitor) {\n\tlet sourceId = null\n\tfor (let i = sourceIds.length - 1; i >= 0; i--) {\n\t\tif (monitor.canDragSource(sourceIds[i])) {\n\t\t\tsourceId = sourceIds[i]\n\t\t\tbreak\n\t\t}\n\t}\n\treturn sourceId\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tDropPayload,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { isObject } from '../../utils/js_utils.js'\nimport { DROP } from './types.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tSentinelAction,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n", "import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tAction,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tHoverOptions,\n\tHoverPayload,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { matchesType } from '../../utils/matchesType.js'\nimport { HOVER } from './types.js'\n\nexport function createHover(manager: DragDropManager) {\n\treturn function hover(\n\t\ttargetIdsArg: string[],\n\t\t{ clientOffset }: HoverOptions = {},\n\t): Action<HoverPayload> {\n\t\tverifyTargetIdsIsArray(targetIdsArg)\n\t\tconst targetIds = targetIdsArg.slice(0)\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tconst draggedItemType = monitor.getItemType()\n\t\tremoveNonMatchingTargetIds(targetIds, registry, draggedItemType)\n\t\tcheckInvariants(targetIds, monitor, registry)\n\t\thoverAllTargets(targetIds, monitor, registry)\n\n\t\treturn {\n\t\t\ttype: HOVER,\n\t\t\tpayload: {\n\t\t\t\ttargetIds,\n\t\t\t\tclientOffset: clientOffset || null,\n\t\t\t},\n\t\t}\n\t}\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg: string[]) {\n\tinvariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.')\n}\n\nfunction checkInvariants(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\tinvariant(monitor.isDragging(), 'Cannot call hover while not dragging.')\n\tinvariant(!monitor.didDrop(), 'Cannot call hover after drop.')\n\tfor (let i = 0; i < targetIds.length; i++) {\n\t\tconst targetId = targetIds[i] as string\n\t\tinvariant(\n\t\t\ttargetIds.lastIndexOf(targetId) === i,\n\t\t\t'Expected targetIds to be unique in the passed array.',\n\t\t)\n\n\t\tconst target = registry.getTarget(targetId)\n\t\tinvariant(target, 'Expected targetIds to be registered.')\n\t}\n}\n\nfunction removeNonMatchingTargetIds(\n\ttargetIds: string[],\n\tregistry: HandlerRegistry,\n\tdraggedItemType: Identifier | null,\n) {\n\t// Remove those targetIds that don't match the targetType.  This\n\t// fixes shallow isOver which would only be non-shallow because of\n\t// non-matching targets.\n\tfor (let i = targetIds.length - 1; i >= 0; i--) {\n\t\tconst targetId = targetIds[i] as string\n\t\tconst targetType = registry.getTargetType(targetId)\n\t\tif (!matchesType(targetType, draggedItemType)) {\n\t\t\ttargetIds.splice(i, 1)\n\t\t}\n\t}\n}\n\nfunction hoverAllTargets(\n\ttargetIds: string[],\n\tmonitor: DragDropMonitor,\n\tregistry: HandlerRegistry,\n) {\n\t// Finally call hover on all matching targets.\n\ttargetIds.forEach(function (targetId) {\n\t\tconst target = registry.getTarget(targetId)\n\t\ttarget.hover(monitor, targetId)\n\t})\n}\n", "import type { DragDropManager, SentinelAction } from '../../interfaces.js'\nimport { PUBLISH_DRAG_SOURCE } from './types.js'\n\nexport function createPublishDragSource(manager: DragDropManager) {\n\treturn function publishDragSource(): SentinelAction | undefined {\n\t\tconst monitor = manager.getMonitor()\n\t\tif (monitor.isDragging()) {\n\t\t\treturn { type: PUBLISH_DRAG_SOURCE }\n\t\t}\n\t\treturn\n\t}\n}\n", "import type { DragDropActions, DragDropManager } from '../../interfaces.js'\nimport { createBeginDrag } from './beginDrag.js'\nimport { createDrop } from './drop.js'\nimport { createEndDrag } from './endDrag.js'\nimport { createHover } from './hover.js'\nimport { createPublishDragSource } from './publishDragSource.js'\n\nexport * from './types.js'\n\nexport function createDragDropActions(\n\tmanager: DragDropManager,\n): DragDropActions {\n\treturn {\n\t\tbeginDrag: createBeginDrag(manager),\n\t\tpublishDragSource: createPublishDragSource(manager),\n\t\thover: createHover(manager),\n\t\tdrop: createDrop(manager),\n\t\tendDrag: createEndDrag(manager),\n\t}\n}\n", "import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\nimport type { State } from '../reducers/dragOffset.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n", "import { intersection } from './js_utils.js'\n\nexport const NONE: string[] = []\nexport const ALL: string[] = []\n// Add these flags for debug\n;(NONE as any).__IS_NONE__ = true\n;(ALL as any).__IS_ALL__ = true\n\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(\n\tdirtyIds: string[],\n\thandlerIds: string[] | undefined,\n): boolean {\n\tif (dirtyIds === NONE) {\n\t\treturn false\n\t}\n\n\tif (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n\t\treturn true\n\t}\n\n\tconst commonIds = intersection(handlerIds, dirtyIds)\n\treturn commonIds.length > 0\n}\n", "import { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport type {\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tgetDifferenceFromInitialOffset,\n\tgetSourceClientOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport { matchesType } from '../utils/matchesType.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n", "// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nconst scope = typeof global !== 'undefined' ? global : self\nconst BrowserMutationObserver =\n\t(scope as any).MutationObserver || (scope as any).WebKitMutationObserver\n\nexport function makeRequestCallFromTimer(callback: () => void) {\n\treturn function requestCall() {\n\t\t// We dispatch a timeout with a specified delay of 0 for engines that\n\t\t// can reliably accommodate that request. This will usually be snapped\n\t\t// to a 4 milisecond delay, but once we're flushing, there's no delay\n\t\t// between events.\n\t\tconst timeoutHandle = setTimeout(handleTimer, 0)\n\t\t// However, since this timer gets frequently dropped in Firefox\n\t\t// workers, we enlist an interval handle that will try to fire\n\t\t// an event 20 times per second until it succeeds.\n\t\tconst intervalHandle = setInterval(handleTimer, 50)\n\n\t\tfunction handleTimer() {\n\t\t\t// Whichever timer succeeds will cancel both timers and\n\t\t\t// execute the callback.\n\t\t\tclearTimeout(timeoutHandle)\n\t\t\tclearInterval(intervalHandle)\n\t\t\tcallback()\n\t\t}\n\t}\n}\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback: () => void) {\n\tlet toggle = 1\n\tconst observer = new BrowserMutationObserver(callback)\n\tconst node = document.createTextNode('')\n\tobserver.observe(node, { characterData: true })\n\treturn function requestCall() {\n\t\ttoggle = -toggle\n\t\t;(node as any).data = toggle\n\t}\n}\n\nexport const makeRequestCall =\n\ttypeof BrowserMutationObserver === 'function'\n\t\t? // MutationObservers are desirable because they have high priority and work\n\t\t  // reliably everywhere they are implemented.\n\t\t  // They are implemented in all modern browsers.\n\t\t  //\n\t\t  // - Android 4-4.3\n\t\t  // - Chrome 26-34\n\t\t  // - Firefox 14-29\n\t\t  // - Internet Explorer 11\n\t\t  // - iPad Safari 6-7.1\n\t\t  // - iPhone Safari 7-7.1\n\t\t  // - Safari 6-7\n\t\t  makeRequestCallFromMutationObserver\n\t\t: // MessageChannels are desirable because they give direct access to the HTML\n\t\t  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t\t  // 11-12, and in web workers in many engines.\n\t\t  // Although message channels yield to any queued rendering and IO tasks, they\n\t\t  // would be better than imposing the 4ms delay of timers.\n\t\t  // However, they do not work reliably in Internet Explorer or Safari.\n\n\t\t  // Internet Explorer 10 is the only browser that has setImmediate but does\n\t\t  // not have MutationObservers.\n\t\t  // Although setImmediate yields to the browser's renderer, it would be\n\t\t  // preferrable to falling back to setTimeout since it does not have\n\t\t  // the minimum 4ms penalty.\n\t\t  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t\t  // Desktop to a lesser extent) that renders both setImmediate and\n\t\t  // MessageChannel useless for the purposes of ASAP.\n\t\t  // https://github.com/kriskowal/q/issues/396\n\n\t\t  // Timers are implemented universally.\n\t\t  // We fall back to timers in workers in most engines, and in foreground\n\t\t  // contexts in the following browsers.\n\t\t  // However, note that even this simple case requires nuances to operate in a\n\t\t  // broad spectrum of browsers.\n\t\t  //\n\t\t  // - Firefox 3-13\n\t\t  // - Internet Explorer 6-9\n\t\t  // - iPad Safari 4.3\n\t\t  // - Lynx 2.8.7\n\t\t  makeRequestCallFromTimer\n", "/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */\nimport { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js'\nimport type { Task } from './types.js'\n\nexport class AsapQueue {\n\tprivate queue: Task[] = []\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tprivate pendingErrors: any[] = []\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\t// @ts-ignore\n\tprivate flushing = false\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tprivate requestFlush: () => void\n\n\tprivate requestErrorThrow: () => void\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tprivate index = 0\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tprivate capacity = 1024\n\n\tpublic constructor() {\n\t\t// `requestFlush` requests that the high priority event queue be flushed as\n\t\t// soon as possible.\n\t\t// This is useful to prevent an error thrown in a task from stalling the event\n\t\t// queue if the exception handled by Node.js’s\n\t\t// `process.on(\"uncaughtException\")` or by a domain.\n\n\t\t// `requestFlush` is implemented using a strategy based on data collected from\n\t\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\tthis.requestFlush = makeRequestCall(this.flush)\n\t\tthis.requestErrorThrow = makeRequestCallFromTimer(() => {\n\t\t\t// Throw first error\n\t\t\tif (this.pendingErrors.length) {\n\t\t\t\tthrow this.pendingErrors.shift()\n\t\t\t}\n\t\t})\n\t}\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tpublic enqueueTask(task: Task): void {\n\t\tconst { queue: q, requestFlush } = this\n\t\tif (!q.length) {\n\t\t\trequestFlush()\n\t\t\tthis.flushing = true\n\t\t}\n\t\t// Equivalent to push, but avoids a function call.\n\t\tq[q.length] = task\n\t}\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tprivate flush = () => {\n\t\tconst { queue: q } = this\n\t\twhile (this.index < q.length) {\n\t\t\tconst currentIndex = this.index\n\t\t\t// Advance the index before calling the task. This ensures that we will\n\t\t\t// begin flushing on the next task the task throws an error.\n\t\t\tthis.index++\n\t\t\tq[currentIndex]!.call()\n\t\t\t// Prevent leaking memory for long chains of recursive calls to `asap`.\n\t\t\t// If we call `asap` within tasks scheduled by `asap`, the queue will\n\t\t\t// grow, but to avoid an O(n) walk for every task we execute, we don't\n\t\t\t// shift tasks off the queue after they have been executed.\n\t\t\t// Instead, we periodically shift 1024 tasks off the queue.\n\t\t\tif (this.index > this.capacity) {\n\t\t\t\t// Manually shift all values starting at the index back to the\n\t\t\t\t// beginning of the queue.\n\t\t\t\tfor (\n\t\t\t\t\tlet scan = 0, newLength = q.length - this.index;\n\t\t\t\t\tscan < newLength;\n\t\t\t\t\tscan++\n\t\t\t\t) {\n\t\t\t\t\tq[scan] = q[scan + this.index]!\n\t\t\t\t}\n\t\t\t\tq.length -= this.index\n\t\t\t\tthis.index = 0\n\t\t\t}\n\t\t}\n\t\tq.length = 0\n\t\tthis.index = 0\n\t\tthis.flushing = false\n\t}\n\n\t// In a web browser, exceptions are not fatal. However, to avoid\n\t// slowing down the queue of pending tasks, we rethrow the error in a\n\t// lower priority turn.\n\tpublic registerPendingError = (err: any) => {\n\t\tthis.pendingErrors.push(err)\n\t\tthis.requestErrorThrow()\n\t}\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// // its existence.\n// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n", "// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n", "import { RawTask } from './RawTask.js'\nimport type { Task } from './types.js'\n\nexport class TaskFactory {\n\tprivate freeTasks: RawTask[] = []\n\n\tpublic constructor(private onError: (err: any) => void) {}\n\n\tpublic create(task: () => void): Task {\n\t\tconst tasks = this.freeTasks\n\t\tconst t = tasks.length\n\t\t\t? (tasks.pop() as RawTask)\n\t\t\t: new RawTask(this.onError, (t) => (tasks[tasks.length] = t))\n\t\tt.task = task\n\t\treturn t\n\t}\n}\n", "import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n", "import type { Action, SourceIdPayload, TargetIdPayload } from '../interfaces.js'\n\nexport const ADD_SOURCE = 'dnd-core/ADD_SOURCE'\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET'\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE'\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET'\n\nexport function addSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: ADD_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function addTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: ADD_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n\nexport function removeSource(sourceId: string): Action<SourceIdPayload> {\n\treturn {\n\t\ttype: REMOVE_SOURCE,\n\t\tpayload: {\n\t\t\tsourceId,\n\t\t},\n\t}\n}\n\nexport function removeTarget(targetId: string): Action<TargetIdPayload> {\n\treturn {\n\t\ttype: REMOVE_TARGET,\n\t\tpayload: {\n\t\t\ttargetId,\n\t\t},\n\t}\n}\n", "import { invariant } from '@react-dnd/invariant'\n\nimport type { DragSource, DropTarget, Identifier } from './interfaces.js'\n\nexport function validateSourceContract(source: DragSource): void {\n\tinvariant(\n\t\ttypeof source.canDrag === 'function',\n\t\t'Expected canDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.beginDrag === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof source.endDrag === 'function',\n\t\t'Expected endDrag to be a function.',\n\t)\n}\n\nexport function validateTargetContract(target: DropTarget): void {\n\tinvariant(\n\t\ttypeof target.canDrop === 'function',\n\t\t'Expected canDrop to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.hover === 'function',\n\t\t'Expected hover to be a function.',\n\t)\n\tinvariant(\n\t\ttypeof target.drop === 'function',\n\t\t'Expected beginDrag to be a function.',\n\t)\n}\n\nexport function validateType(\n\ttype: Identifier | Identifier[],\n\tallowArray?: boolean,\n): void {\n\tif (allowArray && Array.isArray(type)) {\n\t\ttype.forEach((t) => validateType(t, false))\n\t\treturn\n\t}\n\n\tinvariant(\n\t\ttypeof type === 'string' || typeof type === 'symbol',\n\t\tallowArray\n\t\t\t? 'Type can only be a string, a symbol, or an array of either.'\n\t\t\t: 'Type can only be a string or a symbol.',\n\t)\n}\n", "export type Identifier = string | symbol\nexport type SourceType = Identifier\nexport type TargetType = Identifier | Identifier[]\nexport type Unsubscribe = () => void\nexport type Listener = () => void\n\nexport interface XYCoord {\n\tx: number\n\ty: number\n}\n\nexport enum HandlerRole {\n\tSOURCE = 'SOURCE',\n\tTARGET = 'TARGET',\n}\n\nexport interface Backend {\n\tsetup(): void\n\tteardown(): void\n\tconnectDragSource(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDragPreview(sourceId: any, node?: any, options?: any): Unsubscribe\n\tconnectDropTarget(targetId: any, node?: any, options?: any): Unsubscribe\n\tprofile(): Record<string, number>\n}\n\nexport interface DragDropMonitor {\n\tsubscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: {\n\t\t\thandlerIds?: Identifier[]\n\t\t},\n\t): Unsubscribe\n\tsubscribeToOffsetChange(listener: Listener): Unsubscribe\n\tcanDragSource(sourceId: Identifier | undefined): boolean\n\tcanDropOnTarget(targetId: Identifier | undefined): boolean\n\n\t/**\n\t * Returns true if a drag operation is in progress, and either the owner initiated the drag, or its isDragging()\n\t * is defined and returns true.\n\t */\n\tisDragging(): boolean\n\tisDraggingSource(sourceId: Identifier | undefined): boolean\n\tisOverTarget(\n\t\ttargetId: Identifier | undefined,\n\t\toptions?: {\n\t\t\tshallow?: boolean\n\t\t},\n\t): boolean\n\n\t/**\n\t * Returns a string or a symbol identifying the type of the current dragged item. Returns null if no item is being dragged.\n\t */\n\tgetItemType(): Identifier | null\n\n\t/**\n\t * Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object\n\t * from its beginDrag() method. Returns null if no item is being dragged.\n\t */\n\tgetItem(): any\n\tgetSourceId(): Identifier | null\n\tgetTargetIds(): Identifier[]\n\t/**\n\t * Returns a plain object representing the last recorded drop result. The drop targets may optionally specify it by returning an\n\t * object from their drop() methods. When a chain of drop() is dispatched for the nested targets, bottom up, any parent that\n\t * explicitly returns its own result from drop() overrides the child drop result previously set by the child. Returns null if\n\t * called outside endDrag().\n\t */\n\tgetDropResult(): any\n\t/**\n\t * Returns true if some drop target has handled the drop event, false otherwise. Even if a target did not return a drop result,\n\t * didDrop() returns true. Use it inside endDrag() to test whether any drop target has handled the drop. Returns false if called\n\t * outside endDrag().\n\t */\n\tdidDrop(): boolean\n\tisSourcePublic(): boolean | null\n\t/**\n\t * Returns the { x, y } client offset of the pointer at the time when the current drag operation has started.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetInitialClientOffset(): XYCoord | null\n\t/**\n\t * Returns the { x, y } client offset of the drag source component's root DOM node at the time when the current drag\n\t * operation has started. Returns null if no item is being dragged.\n\t */\n\tgetInitialSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the last recorded { x, y } client offset of the pointer while a drag operation is in progress.\n\t * Returns null if no item is being dragged.\n\t */\n\tgetClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the projected { x, y } client offset of the drag source component's root DOM node, based on its position at the time\n\t * when the current drag operation has started, and the movement difference. Returns null if no item is being dragged.\n\t */\n\tgetSourceClientOffset(): XYCoord | null\n\n\t/**\n\t * Returns the { x, y } difference between the last recorded client offset of the pointer and the client offset when the current\n\t * drag operation has started. Returns null if no item is being dragged.\n\t */\n\tgetDifferenceFromInitialOffset(): XYCoord | null\n}\n\nexport interface HandlerRegistry {\n\taddSource(type: SourceType, source: DragSource): Identifier\n\taddTarget(type: TargetType, target: DropTarget): Identifier\n\tcontainsHandler(handler: DragSource | DropTarget): boolean\n\tgetSource(sourceId: Identifier, includePinned?: boolean): DragSource\n\tgetSourceType(sourceId: Identifier): SourceType\n\tgetTargetType(targetId: Identifier): TargetType\n\tgetTarget(targetId: Identifier): DropTarget\n\tisSourceId(handlerId: Identifier): boolean\n\tisTargetId(handlerId: Identifier): boolean\n\tremoveSource(sourceId: Identifier): void\n\tremoveTarget(targetId: Identifier): void\n\tpinSource(sourceId: Identifier): void\n\tunpinSource(): void\n}\n\nexport interface Action<Payload> {\n\ttype: Identifier\n\tpayload: Payload\n}\nexport interface SentinelAction {\n\ttype: Identifier\n}\n\nexport type ActionCreator<Payload> = (args: any[]) => Action<Payload>\n\nexport interface BeginDragOptions {\n\tpublishSource?: boolean\n\tclientOffset?: XYCoord\n\tgetSourceClientOffset?: (sourceId: Identifier | undefined) => XYCoord\n}\n\nexport interface InitCoordsPayload {\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n}\n\nexport interface BeginDragPayload {\n\titemType: Identifier\n\titem: any\n\tsourceId: Identifier\n\tclientOffset: XYCoord | null\n\tsourceClientOffset: XYCoord | null\n\tisSourcePublic: boolean\n}\n\nexport interface HoverPayload {\n\ttargetIds: Identifier[]\n\tclientOffset: XYCoord | null\n}\n\nexport interface HoverOptions {\n\tclientOffset?: XYCoord\n}\n\nexport interface DropPayload {\n\tdropResult: any\n}\n\nexport interface TargetIdPayload {\n\ttargetId: Identifier\n}\n\nexport interface SourceIdPayload {\n\tsourceId: Identifier\n}\n\nexport interface DragDropActions {\n\tbeginDrag(\n\t\tsourceIds?: Identifier[],\n\t\toptions?: any,\n\t): Action<BeginDragPayload> | undefined\n\tpublishDragSource(): SentinelAction | undefined\n\thover(targetIds: Identifier[], options?: any): Action<HoverPayload>\n\tdrop(options?: any): void\n\tendDrag(): SentinelAction\n}\n\nexport interface DragDropManager {\n\tgetMonitor(): DragDropMonitor\n\tgetBackend(): Backend\n\tgetRegistry(): HandlerRegistry\n\tgetActions(): DragDropActions\n\tdispatch(action: any): void\n}\n\nexport type BackendFactory = (\n\tmanager: DragDropManager,\n\tglobalContext?: any,\n\tconfiguration?: any,\n) => Backend\n\nexport interface DragSource {\n\tbeginDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tendDrag(monitor: DragDropMonitor, targetId: Identifier): void\n\tcanDrag(monitor: DragDropMonitor, targetId: Identifier): boolean\n\tisDragging(monitor: DragDropMonitor, targetId: Identifier): boolean\n}\n\nexport interface DropTarget {\n\tcanDrop(monitor: DragDropMonitor, targetId: Identifier): boolean\n\thover(monitor: DragDropMonitor, targetId: Identifier): void\n\tdrop(monitor: DragDropMonitor, targetId: Identifier): any\n}\n", "let nextUniqueId = 0\n\nexport function getNextUniqueId(): number {\n\treturn nextUniqueId++\n}\n", "import { asap } from '@react-dnd/asap'\nimport { invariant } from '@react-dnd/invariant'\nimport type { Store } from 'redux'\n\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport type {\n\tDragSource,\n\tDropTarget,\n\tHandlerRegistry,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n} from '../interfaces.js'\nimport { HandlerRole } from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n", "import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\nimport { ALL, NONE } from '../utils/dirtiness.js'\nimport { areArraysEqual } from '../utils/equality.js'\nimport { xor } from '../utils/js_utils.js'\n\nexport type State = string[]\n\nexport interface DirtyHandlerIdPayload {\n\ttargetIds: string[]\n\tprevTargetIds: string[]\n}\n\nexport function reduce(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_state: State = NONE,\n\taction: Action<DirtyHandlerIdPayload>,\n): State {\n\tswitch (action.type) {\n\t\tcase HOVER:\n\t\t\tbreak\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\tcase REMOVE_TARGET:\n\t\tcase REMOVE_SOURCE:\n\t\t\treturn NONE\n\t\tcase BEGIN_DRAG:\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\tdefault:\n\t\t\treturn ALL\n\t}\n\n\tconst { targetIds = [], prevTargetIds = [] } = action.payload\n\tconst result = xor(targetIds, prevTargetIds)\n\tconst didChange =\n\t\tresult.length > 0 || !areArraysEqual(targetIds, prevTargetIds)\n\n\tif (!didChange) {\n\t\treturn NONE\n\t}\n\n\t// Check the target ids at the innermost position. If they are valid, add them\n\t// to the result\n\tconst prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1]\n\tconst innermostTargetId = targetIds[targetIds.length - 1]\n\tif (prevInnermostTargetId !== innermostTargetId) {\n\t\tif (prevInnermostTargetId) {\n\t\t\tresult.push(prevInnermostTargetId)\n\t\t}\n\t\tif (innermostTargetId) {\n\t\t\tresult.push(innermostTargetId)\n\t\t}\n\t}\n\n\treturn result\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tINIT_COORDS,\n} from '../actions/dragDrop/index.js'\nimport type { Action, XYCoord } from '../interfaces.js'\nimport { areCoordsEqual } from '../utils/equality.js'\n\nexport interface State {\n\tinitialSourceClientOffset: XYCoord | null\n\tinitialClientOffset: XYCoord | null\n\tclientOffset: XYCoord | null\n}\n\nconst initialState: State = {\n\tinitialSourceClientOffset: null,\n\tinitialClientOffset: null,\n\tclientOffset: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\tsourceClientOffset: XYCoord\n\t\tclientOffset: XYCoord\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase INIT_COORDS:\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\tinitialSourceClientOffset: payload.sourceClientOffset,\n\t\t\t\tinitialClientOffset: payload.clientOffset,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\tif (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclientOffset: payload.clientOffset,\n\t\t\t}\n\t\tcase END_DRAG:\n\t\tcase DROP:\n\t\t\treturn initialState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tBEGIN_DRAG,\n\tDROP,\n\tEND_DRAG,\n\tHOVER,\n\tPUBLISH_DRAG_SOURCE,\n} from '../actions/dragDrop/index.js'\nimport { REMOVE_TARGET } from '../actions/registry.js'\nimport type { Action, Identifier } from '../interfaces.js'\nimport { without } from '../utils/js_utils.js'\n\nexport interface State {\n\titemType: Identifier | Identifier[] | null\n\titem: any\n\tsourceId: string | null\n\ttargetIds: string[]\n\tdropResult: any\n\tdidDrop: boolean\n\tisSourcePublic: boolean | null\n}\n\nconst initialState: State = {\n\titemType: null,\n\titem: null,\n\tsourceId: null,\n\ttargetIds: [],\n\tdropResult: null,\n\tdidDrop: false,\n\tisSourcePublic: null,\n}\n\nexport function reduce(\n\tstate: State = initialState,\n\taction: Action<{\n\t\titemType: Identifier | Identifier[]\n\t\titem: any\n\t\tsourceId: string\n\t\ttargetId: string\n\t\ttargetIds: string[]\n\t\tisSourcePublic: boolean\n\t\tdropResult: any\n\t}>,\n): State {\n\tconst { payload } = action\n\tswitch (action.type) {\n\t\tcase BEGIN_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: payload.itemType,\n\t\t\t\titem: payload.item,\n\t\t\t\tsourceId: payload.sourceId,\n\t\t\t\tisSourcePublic: payload.isSourcePublic,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t}\n\t\tcase PUBLISH_DRAG_SOURCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSourcePublic: true,\n\t\t\t}\n\t\tcase HOVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: payload.targetIds,\n\t\t\t}\n\t\tcase REMOVE_TARGET:\n\t\t\tif (state.targetIds.indexOf(payload.targetId) === -1) {\n\t\t\t\treturn state\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttargetIds: without(state.targetIds, payload.targetId),\n\t\t\t}\n\t\tcase DROP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdropResult: payload.dropResult,\n\t\t\t\tdidDrop: true,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tcase END_DRAG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titemType: null,\n\t\t\t\titem: null,\n\t\t\t\tsourceId: null,\n\t\t\t\tdropResult: null,\n\t\t\t\tdidDrop: false,\n\t\t\t\tisSourcePublic: null,\n\t\t\t\ttargetIds: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "import {\n\tADD_SOURCE,\n\tADD_TARGET,\n\tREMOVE_SOURCE,\n\tREMOVE_TARGET,\n} from '../actions/registry.js'\nimport type { Action } from '../interfaces.js'\n\nexport type State = number\n\nexport function reduce(state: State = 0, action: Action<any>): State {\n\tswitch (action.type) {\n\t\tcase ADD_SOURCE:\n\t\tcase ADD_TARGET:\n\t\t\treturn state + 1\n\t\tcase REMOVE_SOURCE:\n\t\tcase REMOVE_TARGET:\n\t\t\treturn state - 1\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n", "export type State = number\n\nexport function reduce(state: State = 0): State {\n\treturn state + 1\n}\n", "import type { Action } from '../interfaces.js'\nimport { get } from '../utils/js_utils.js'\nimport type { State as DirtyHandlerIdsState } from './dirtyHandlerIds.js'\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds.js'\nimport type { State as DragOffsetState } from './dragOffset.js'\nimport { reduce as dragOffset } from './dragOffset.js'\nimport type { State as DragOperationState } from './dragOperation.js'\nimport { reduce as dragOperation } from './dragOperation.js'\nimport type { State as RefCountState } from './refCount.js'\nimport { reduce as refCount } from './refCount.js'\nimport type { State as StateIdState } from './stateId.js'\nimport { reduce as stateId } from './stateId.js'\n\nexport interface State {\n\tdirtyHandlerIds: DirtyHandlerIdsState\n\tdragOffset: DragOffsetState\n\trefCount: RefCountState\n\tdragOperation: DragOperationState\n\tstateId: StateIdState\n}\n\nexport function reduce(state: State = {} as State, action: Action<any>): State {\n\treturn {\n\t\tdirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n\t\t\ttype: action.type,\n\t\t\tpayload: {\n\t\t\t\t...action.payload,\n\t\t\t\tprevTargetIds: get<string[]>(state, 'dragOperation.targetIds', []),\n\t\t\t},\n\t\t}),\n\t\tdragOffset: dragOffset(state.dragOffset, action),\n\t\trefCount: refCount(state.refCount, action),\n\t\tdragOperation: dragOperation(state.dragOperation, action),\n\t\tstateId: stateId(state.stateId),\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\nimport { createDragDropManager } from 'dnd-core'\nimport type { FC, ReactNode } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport { DndContext } from './DndContext.js'\n\nexport type DndProviderProps<BackendContext, BackendOptions> =\n\t| {\n\t\t\tchildren?: ReactNode\n\t\t\tmanager: DragDropManager\n\t  }\n\t| {\n\t\t\tbackend: BackendFactory\n\t\t\tchildren?: ReactNode\n\t\t\tcontext?: BackendContext\n\t\t\toptions?: BackendOptions\n\t\t\tdebugMode?: boolean\n\t  }\n\nlet refCount = 0\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__')\n\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider: FC<DndProviderProps<unknown, unknown>> = memo(\n\tfunction DndProvider({ children, ...props }) {\n\t\tconst [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n\t\t/**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */\n\t\tuseEffect(() => {\n\t\t\tif (isGlobalInstance) {\n\t\t\t\tconst context = getGlobalContext()\n\t\t\t\t++refCount\n\n\t\t\t\treturn () => {\n\t\t\t\t\tif (--refCount === 0) {\n\t\t\t\t\t\tcontext[INSTANCE_SYM] = null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}, [])\n\n\t\treturn <DndContext.Provider value={manager}>{children}</DndContext.Provider>\n\t},\n)\n\nfunction getDndContextValue(props: DndProviderProps<unknown, unknown>) {\n\tif ('manager' in props) {\n\t\tconst manager = { dragDropManager: props.manager }\n\t\treturn [manager, false]\n\t}\n\n\tconst manager = createSingletonDndContext(\n\t\tprops.backend,\n\t\tprops.context,\n\t\tprops.options,\n\t\tprops.debugMode,\n\t)\n\tconst isGlobalInstance = !props.context\n\n\treturn [manager, isGlobalInstance]\n}\n\nfunction createSingletonDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext: BackendContext = getGlobalContext(),\n\toptions: BackendOptions,\n\tdebugMode?: boolean,\n) {\n\tconst ctx = context as any\n\tif (!ctx[INSTANCE_SYM]) {\n\t\tctx[INSTANCE_SYM] = {\n\t\t\tdragDropManager: createDragDropManager(\n\t\t\t\tbackend,\n\t\t\t\tcontext,\n\t\t\t\toptions,\n\t\t\t\tdebugMode,\n\t\t\t),\n\t\t}\n\t}\n\treturn ctx[INSTANCE_SYM]\n}\n\ndeclare const global: any\nfunction getGlobalContext() {\n\treturn typeof global !== 'undefined' ? global : (window as any)\n}\n", "// cheap lodash replacements\n\nexport function memoize<T>(fn: () => T): () => T {\n\tlet result: T | null = null\n\tconst memoized = () => {\n\t\tif (result == null) {\n\t\t\tresult = fn()\n\t\t}\n\t\treturn result\n\t}\n\treturn memoized\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T) {\n\treturn items.filter((i) => i !== item)\n}\n\nexport function union<T extends string | number>(itemsA: T[], itemsB: T[]) {\n\tconst set = new Set<T>()\n\tconst insertItem = (item: T) => set.add(item)\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tset.forEach((key) => result.push(key))\n\treturn result\n}\n", "import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n", "import type { DragDropMonitor } from 'dnd-core'\n\nimport type { NativeItemConfig } from './nativeTypesConfig.js'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n", "export const FILE = '__NATIVE_FILE__'\nexport const URL = '__NATIVE_URL__'\nexport const TEXT = '__NATIVE_TEXT__'\nexport const HTML = '__NATIVE_HTML__'\n", "export function getDataFromDataTransfer(\n\tdataTransfer: DataTransfer,\n\ttypesToTry: string[],\n\tdefaultValue: string,\n): string {\n\tconst result = typesToTry.reduce(\n\t\t(resultSoFar, typeToTry) => resultSoFar || dataTransfer.getData(typeToTry),\n\t\t'',\n\t)\n\n\treturn result != null ? result : defaultValue\n}\n", "import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n", "import { NativeDragSource } from './NativeDragSource.js'\nimport { nativeTypesConfig } from './nativeTypesConfig.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n", "import { memoize } from './utils/js_utils.js'\n\ndeclare global {\n\tinterface Window extends HTMLElement {\n\t\tsafari: any\n\t}\n}\n\nexport type Predicate = () => boolean\nexport const isFirefox: Predicate = memoize(() =>\n\t/firefox/i.test(navigator.userAgent),\n)\nexport const isSafari: Predicate = memoize(() => Boolean(window.safari))\n", "export class MonotonicInterpolant {\n\tprivate xs: any\n\tprivate ys: any\n\tprivate c1s: any\n\tprivate c2s: any\n\tprivate c3s: any\n\n\tpublic constructor(xs: number[], ys: number[]) {\n\t\tconst { length } = xs\n\n\t\t// Rearrange xs and ys so that xs is sorted\n\t\tconst indexes = []\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tindexes.push(i)\n\t\t}\n\t\tindexes.sort((a, b) => ((xs[a] as number) < (xs[b] as number) ? -1 : 1))\n\n\t\t// Get consecutive differences and slopes\n\t\tconst dys = []\n\t\tconst dxs = []\n\t\tconst ms = []\n\t\tlet dx\n\t\tlet dy\n\t\tfor (let i = 0; i < length - 1; i++) {\n\t\t\tdx = (xs[i + 1] as number) - (xs[i] as number)\n\t\t\tdy = (ys[i + 1] as number) - (ys[i] as number)\n\t\t\tdxs.push(dx)\n\t\t\tdys.push(dy)\n\t\t\tms.push(dy / dx)\n\t\t}\n\n\t\t// Get degree-1 coefficients\n\t\tconst c1s = [ms[0]]\n\t\tfor (let i = 0; i < dxs.length - 1; i++) {\n\t\t\tconst m2 = ms[i] as number\n\t\t\tconst mNext = ms[i + 1] as number\n\t\t\tif (m2 * mNext <= 0) {\n\t\t\t\tc1s.push(0)\n\t\t\t} else {\n\t\t\t\tdx = dxs[i] as number\n\t\t\t\tconst dxNext = dxs[i + 1] as number\n\t\t\t\tconst common = dx + dxNext\n\t\t\t\tc1s.push(\n\t\t\t\t\t(3 * common) / ((common + dxNext) / m2 + (common + dx) / mNext),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tc1s.push(ms[ms.length - 1])\n\n\t\t// Get degree-2 and degree-3 coefficients\n\t\tconst c2s = []\n\t\tconst c3s = []\n\t\tlet m\n\t\tfor (let i = 0; i < c1s.length - 1; i++) {\n\t\t\tm = ms[i] as number\n\t\t\tconst c1 = c1s[i] as number\n\t\t\tconst invDx = 1 / (dxs[i] as number)\n\t\t\tconst common = c1 + (c1s[i + 1] as number) - m - m\n\t\t\tc2s.push((m - c1 - common) * invDx)\n\t\t\tc3s.push(common * invDx * invDx)\n\t\t}\n\n\t\tthis.xs = xs\n\t\tthis.ys = ys\n\t\tthis.c1s = c1s\n\t\tthis.c2s = c2s\n\t\tthis.c3s = c3s\n\t}\n\n\tpublic interpolate(x: number): number {\n\t\tconst { xs, ys, c1s, c2s, c3s } = this\n\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tlet i = xs.length - 1\n\t\tif (x === xs[i]) {\n\t\t\treturn ys[i]\n\t\t}\n\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tlet low = 0\n\t\tlet high = c3s.length - 1\n\t\tlet mid\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5 * (low + high))\n\t\t\tconst xHere = xs[mid]\n\t\t\tif (xHere < x) {\n\t\t\t\tlow = mid + 1\n\t\t\t} else if (xHere > x) {\n\t\t\t\thigh = mid - 1\n\t\t\t} else {\n\t\t\t\treturn ys[mid]\n\t\t\t}\n\t\t}\n\t\ti = Math.max(0, high)\n\n\t\t// Interpolate\n\t\tconst diff = x - xs[i]\n\t\tconst diffSq = diff * diff\n\t\treturn ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq\n\t}\n}\n", "import type { XYCoord } from 'dnd-core'\n\nimport { isFirefox, isSafari } from './BrowserDetector.js'\nimport { MonotonicInterpolant } from './MonotonicInterpolant.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Node): XYCoord | null {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\n\tif (!el) {\n\t\treturn null\n\t}\n\n\tconst { top, left } = (el as HTMLElement).getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientOffset(e: MouseEvent): XYCoord {\n\treturn {\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t}\n}\n\nfunction isImageNode(node: any) {\n\treturn (\n\t\tnode.nodeName === 'IMG' &&\n\t\t(isFirefox() || !document.documentElement?.contains(node))\n\t)\n}\n\nfunction getDragPreviewSize(\n\tisImage: boolean,\n\tdragPreview: any,\n\tsourceWidth: number,\n\tsourceHeight: number,\n) {\n\tlet dragPreviewWidth = isImage ? dragPreview.width : sourceWidth\n\tlet dragPreviewHeight = isImage ? dragPreview.height : sourceHeight\n\n\t// Work around @2x coordinate discrepancies in browsers\n\tif (isSafari() && isImage) {\n\t\tdragPreviewHeight /= window.devicePixelRatio\n\t\tdragPreviewWidth /= window.devicePixelRatio\n\t}\n\treturn { dragPreviewWidth, dragPreviewHeight }\n}\n\nexport function getDragPreviewOffset(\n\tsourceNode: HTMLElement,\n\tdragPreview: HTMLElement,\n\tclientOffset: XYCoord,\n\tanchorPoint: { anchorX: number; anchorY: number },\n\toffsetPoint: { offsetX: number; offsetY: number },\n): XYCoord {\n\t// The browsers will use the image intrinsic size under different conditions.\n\t// Firefox only cares if it's an image, but WebKit also wants it to be detached.\n\tconst isImage = isImageNode(dragPreview)\n\tconst dragPreviewNode = isImage ? sourceNode : dragPreview\n\tconst dragPreviewNodeOffsetFromClient = getNodeClientOffset(\n\t\tdragPreviewNode,\n\t) as XYCoord\n\tconst offsetFromDragPreview = {\n\t\tx: clientOffset.x - dragPreviewNodeOffsetFromClient.x,\n\t\ty: clientOffset.y - dragPreviewNodeOffsetFromClient.y,\n\t}\n\tconst { offsetWidth: sourceWidth, offsetHeight: sourceHeight } = sourceNode\n\tconst { anchorX, anchorY } = anchorPoint\n\tconst { dragPreviewWidth, dragPreviewHeight } = getDragPreviewSize(\n\t\tisImage,\n\t\tdragPreview,\n\t\tsourceWidth,\n\t\tsourceHeight,\n\t)\n\n\tconst calculateYOffset = () => {\n\t\tconst interpolantY = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the top\n\t\t\t\toffsetFromDragPreview.y,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.y / sourceHeight) * dragPreviewHeight,\n\t\t\t\t// Dock to the bottom\n\t\t\t\toffsetFromDragPreview.y + dragPreviewHeight - sourceHeight,\n\t\t\t],\n\t\t)\n\t\tlet y = interpolantY.interpolate(anchorY)\n\t\t// Work around Safari 8 positioning bug\n\t\tif (isSafari() && isImage) {\n\t\t\t// We'll have to wait for @3x to see if this is entirely correct\n\t\t\ty += (window.devicePixelRatio - 1) * dragPreviewHeight\n\t\t}\n\t\treturn y\n\t}\n\n\tconst calculateXOffset = () => {\n\t\t// Interpolate coordinates depending on anchor point\n\t\t// If you know a simpler way to do this, let me know\n\t\tconst interpolantX = new MonotonicInterpolant(\n\t\t\t[0, 0.5, 1],\n\t\t\t[\n\t\t\t\t// Dock to the left\n\t\t\t\toffsetFromDragPreview.x,\n\t\t\t\t// Align at the center\n\t\t\t\t(offsetFromDragPreview.x / sourceWidth) * dragPreviewWidth,\n\t\t\t\t// Dock to the right\n\t\t\t\toffsetFromDragPreview.x + dragPreviewWidth - sourceWidth,\n\t\t\t],\n\t\t)\n\t\treturn interpolantX.interpolate(anchorX)\n\t}\n\n\t// Force offsets if specified in the options.\n\tconst { offsetX, offsetY } = offsetPoint\n\tconst isManualOffsetX = offsetX === 0 || offsetX\n\tconst isManualOffsetY = offsetY === 0 || offsetY\n\treturn {\n\t\tx: isManualOffsetX ? offsetX : calculateXOffset(),\n\t\ty: isManualOffsetY ? offsetY : calculateYOffset(),\n\t}\n}\n", "import type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport class OptionsReader {\n\tpublic ownerDocument: Document | null = null\n\tprivate globalContext: HTML5BackendContext\n\tprivate optionsArgs: HTML5BackendOptions | undefined\n\n\tpublic constructor(\n\t\tglobalContext: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.globalContext = globalContext\n\t\tthis.optionsArgs = options\n\t}\n\n\tpublic get window(): Window | undefined {\n\t\tif (this.globalContext) {\n\t\t\treturn this.globalContext\n\t\t} else if (typeof window !== 'undefined') {\n\t\t\treturn window\n\t\t}\n\t\treturn undefined\n\t}\n\n\tpublic get document(): Document | undefined {\n\t\tif (this.globalContext?.document) {\n\t\t\treturn this.globalContext.document\n\t\t} else if (this.window) {\n\t\t\treturn this.window.document\n\t\t} else {\n\t\t\treturn undefined\n\t\t}\n\t}\n\n\tpublic get rootElement(): Node | undefined {\n\t\treturn this.optionsArgs?.rootElement || this.window\n\t}\n}\n", "import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n", "import type { BackendFactory, DragDropManager } from 'dnd-core'\n\nimport { HTML5BackendImpl } from './HTML5BackendImpl.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\nexport { getEmptyImage } from './getEmptyImage.js'\nexport * as NativeTypes from './NativeTypes.js'\nexport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\nexport const HTML5Backend: BackendFactory = function createBackend(\n\tmanager: DragDropManager,\n\tcontext?: HTML5BackendContext,\n\toptions?: HTML5BackendOptions,\n): HTML5BackendImpl {\n\treturn new HTML5BackendImpl(manager, context, options)\n}\n", "import {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  VerticalStack,\n} from \"@shopify/polaris\";\n\nexport default function AdditionalPage() {\n  return (\n    <Page>\n      <ui-title-bar title=\"Additional page\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <VerticalStack gap=\"3\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                The app template comes with an additional page which\n                demonstrates how to create multiple pages within app navigation\n                using{\" \"}\n                <Link\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                  target=\"_blank\"\n                >\n                  App Bridge\n                </Link>\n                .\n              </Text>\n              <Text as=\"p\" variant=\"bodyMd\">\n                To create your own page and have it show up in the app\n                navigation, add a page inside <Code>app/routes</Code>, and a\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\n                found in <Code>app/routes/app.jsx</Code>.\n              </Text>\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n          <Card>\n            <VerticalStack gap=\"2\">\n              <Text as=\"h2\" variant=\"headingMd\">\n                Resources\n              </Text>\n              <List spacing=\"extraTight\">\n                <List.Item>\n                  <Link\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\n                    target=\"_blank\"\n                  >\n                    App nav best practices\n                  </Link>\n                </List.Item>\n              </List>\n            </VerticalStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"1\"\n      paddingInlineEnd=\"1\"\n      background=\"bg-subdued\"\n      borderWidth=\"1\"\n      borderColor=\"border\"\n      borderRadius=\"1\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { Layout, Page, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseDefinitionType } from \"~/utils\";\nimport { IPageInfo } from \"~/types\";\nimport PageLoader from \"~/components/Loaders/PageLoader\";\nimport ItemMetaObjects from \"~/components/Tables/ItemMetaObjects\";\nimport SiteMapMetaObjects from \"~/components/Tables/SiteMapMetaObjects\";\n\nexport async function loader({ request, params }) {\n  const { admin, session } = await authenticate.admin(request);\n\n  return json({\n    type: \"site_map\",\n    graphql: admin.graphql,\n  });\n}\nexport default function MetaobjectsPage() {\n  const { type } = useLoaderData();\n\n  const [edges, setEdges] = useState([]);\n  const [pageInfo, setPageInfo] = useState({} as IPageInfo);\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n  const [pageLoading, setPageLoading] = useState(true);\n\n  const onSearch = async (data) => {\n    fetcher.load(\n      `/app/search-metaobjects/${type}?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.metaobjects.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.metaobjects.pageInfo\", {}));\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (fetcher.state !== \"loading\" && pageLoading) {\n      setPageLoading(false);\n    }\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (!fetcher.data) {\n      setPageLoading(true);\n      onSearch({});\n    }\n  }, []);\n\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app\" }}\n      title={\"Sites\"}\n      subtitle=\"\"\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          {pageLoading ? <PageLoader /> : null}\n          {!pageLoading ? (\n            <VerticalStack gap=\"3\">\n              <SiteMapMetaObjects\n                edges={edges}\n                pageInfo={pageInfo}\n                type={type}\n                onSearch={onSearch}\n                loading={loading}\n              />\n            </VerticalStack>\n          ) : null}\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n", "import { Link, useNavigate } from \"@remix-run/react\";\nimport {\n  IndexTable,\n  LegacyCard,\n  useIndexResourceState,\n  Text,\n  Badge,\n  Pagination,\n  VerticalStack,\n  HorizontalGrid,\n  IndexFilters,\n  useSetIndexFiltersMode,\n} from \"@shopify/polaris\";\nimport { IMetaobjectResponse } from \"~/types\";\nimport { dateFormatter, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst SiteMapMetaObjects = ({\n  edges,\n  pageInfo,\n  type,\n  onSearch,\n  loading: isLoading,\n}: IMetaobjectResponse) => {\n  const navigate = useNavigate();\n\n  const resourceName = {\n    singular: \"site\",\n    plural: \"sites\",\n  };\n  const [loading, setLoading] = useState(false);\n\n  const handleNavigation = (next: boolean) => {\n    let rest = {};\n    setLoading(true);\n    if (next) {\n      rest[\"after\"] = pageInfo.endCursor;\n    } else {\n      rest[\"before\"] = pageInfo.startCursor;\n    }\n\n    if (queryValue !== undefined && queryValue !== null) {\n      rest[\"query\"] = queryValue;\n    }\n    onSearch(rest);\n  };\n  const [queryValue, setQueryValue] = useState(null);\n  const handleFiltersQueryChange = useCallback(\n    (value: string) => setQueryValue(value),\n    []\n  );\n\n  useEffect(() => {\n    if (queryValue !== undefined && queryValue !== null) {\n      onSearch({ query: queryValue });\n    }\n  }, [queryValue]);\n  const [selected] = useState(0);\n  const onHandleCancel = () => {};\n\n  const { mode, setMode } = useSetIndexFiltersMode();\n\n  useEffect(() => {\n    setLoading(false);\n  }, [edges]);\n  const rowMarkup = edges.map(\n    (\n      {\n        node: {\n          id,\n          definition,\n          capabilities,\n          displayName,\n          handle,\n          type,\n          updatedAt,\n        },\n      },\n      index\n    ) => (\n      <IndexTable.Row onNavigation={() => {}} id={id} key={id} position={index}>\n        <IndexTable.Cell>\n          <Text variant=\"bodyMd\" as=\"span\">\n            <Link to={`/app/site-map/${handle}`}>{truncate(displayName)}</Link>\n          </Text>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{definition.name}</IndexTable.Cell>\n        <IndexTable.Cell>{definition.access.storefront}</IndexTable.Cell>\n\n        <IndexTable.Cell>\n          <Badge size=\"small\">{capabilities.publishable.status}</Badge>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{dateFormatter(updatedAt)}</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <VerticalStack>\n        <IndexFilters\n          selected={selected}\n          filters={[]}\n          onClearAll={() => {}}\n          cancelAction={{\n            onAction: onHandleCancel,\n            disabled: false,\n            loading: false,\n          }}\n          tabs={[]}\n          queryValue={queryValue || \"\"}\n          queryPlaceholder=\"Search ...\"\n          onQueryChange={handleFiltersQueryChange}\n          onQueryClear={() => {\n            setQueryValue(\"\");\n          }}\n          mode={mode}\n          setMode={setMode}\n          hideFilters\n        />\n        <IndexTable\n          resourceName={resourceName}\n          itemCount={edges.length}\n          selectable={false}\n          headings={[\n            { title: \"Display Name\" },\n            { title: \"Definition\" },\n            { title: \"Storefront access\" },\n            { title: \"Status\" },\n            { title: \"Last updated\" },\n          ]}\n        >\n          {rowMarkup}\n        </IndexTable>\n        <HorizontalGrid>\n          <div className=\"grid-container\">\n            <div\n              className=\"pagination-wrapper\"\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                padding: 20,\n              }}\n            >\n              <Pagination\n                hasPrevious={pageInfo.hasPreviousPage}\n                onPrevious={() => {\n                  handleNavigation(false);\n                }}\n                hasNext={pageInfo.hasNextPage}\n                onNext={() => {\n                  handleNavigation(true);\n                }}\n              />\n            </div>\n          </div>\n        </HorizontalGrid>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default SiteMapMetaObjects;\n", "import { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { Layout, Page, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { authenticate } from \"~/shopify.server\";\nimport { parseDefinitionType } from \"~/utils\";\nimport { IPageInfo } from \"~/types\";\nimport PageLoader from \"~/components/Loaders/PageLoader\";\nimport ItemMetaObjects from \"~/components/Tables/ItemMetaObjects\";\nimport SiteMapMetaObjects from \"~/components/Tables/SiteMapMetaObjects\";\nimport Articles from \"~/components/Tables/Articles\";\n\nexport async function loader({ request, params }) {\n  const { admin, session } = await authenticate.admin(request);\n\n  return json({\n    type: \"article\",\n    graphql: admin.graphql,\n  });\n}\nexport default function MetaobjectsPage() {\n  const { type } = useLoaderData();\n\n  const [edges, setEdges] = useState([]);\n  const [pageInfo, setPageInfo] = useState({} as IPageInfo);\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n  const [pageLoading, setPageLoading] = useState(true);\n\n  const onSearch = async (data) => {\n    fetcher.load(\n      `/app/search-metaobjects/${type}?query=${_.get(\n        data,\n        \"query\"\n      )}&after=${_.get(data, \"after\")}&before=${_.get(data, \"before\")}`\n    );\n  };\n\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.metaobjects.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.metaobjects.pageInfo\", {}));\n    }\n  }, [fetcher]);\n\n  useEffect(() => {\n    if (fetcher.state !== \"loading\" && pageLoading) {\n      setPageLoading(false);\n    }\n  }, [fetcher.state]);\n\n  useEffect(() => {\n    if (!fetcher.data) {\n      setPageLoading(true);\n      onSearch({});\n    }\n  }, []);\n\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app\" }}\n      title={\"Articles\"}\n      subtitle=\"\"\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          {pageLoading ? <PageLoader /> : null}\n          {!pageLoading ? (\n            <VerticalStack gap=\"3\">\n              <Articles\n                edges={edges}\n                pageInfo={pageInfo}\n                type={type}\n                onSearch={onSearch}\n                loading={loading}\n              />\n            </VerticalStack>\n          ) : null}\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n", "import { Link, useNavigate } from \"@remix-run/react\";\nimport {\n  IndexTable,\n  LegacyCard,\n  useIndexResourceState,\n  Text,\n  Badge,\n  Pagination,\n  VerticalStack,\n  HorizontalGrid,\n  IndexFilters,\n  useSetIndexFiltersMode,\n} from \"@shopify/polaris\";\nimport { IMetaobjectResponse } from \"~/types\";\nimport { dateFormatter, truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst Articles = ({\n  edges,\n  pageInfo,\n  type,\n  onSearch,\n  loading: isLoading,\n}: IMetaobjectResponse) => {\n  const navigate = useNavigate();\n\n  const resourceName = {\n    singular: \"article\",\n    plural: \"articles\",\n  };\n  const [loading, setLoading] = useState(false);\n\n  const handleNavigation = (next: boolean) => {\n    let rest = {};\n    setLoading(true);\n    if (next) {\n      rest[\"after\"] = pageInfo.endCursor;\n    } else {\n      rest[\"before\"] = pageInfo.startCursor;\n    }\n\n    if (queryValue !== undefined && queryValue !== null) {\n      rest[\"query\"] = queryValue;\n    }\n    onSearch(rest);\n  };\n  const [queryValue, setQueryValue] = useState(null);\n  const handleFiltersQueryChange = useCallback(\n    (value: string) => setQueryValue(value),\n    []\n  );\n\n  useEffect(() => {\n    if (queryValue !== undefined && queryValue !== null) {\n      onSearch({ query: queryValue });\n    }\n  }, [queryValue]);\n  const [selected] = useState(0);\n  const onHandleCancel = () => {};\n\n  const { mode, setMode } = useSetIndexFiltersMode();\n\n  useEffect(() => {\n    setLoading(false);\n  }, [edges]);\n  const rowMarkup = edges.map(\n    (\n      {\n        node: {\n          id,\n          definition,\n          capabilities,\n          displayName,\n          handle,\n          type,\n          updatedAt,\n        },\n      },\n      index\n    ) => (\n      <IndexTable.Row\n        onNavigation={() => {}}\n        id={id}\n        key={id}\n        position={index}\n      >\n        <IndexTable.Cell>\n          <Text variant=\"bodyMd\" as=\"span\">\n            <Link to={`/app/article/${handle}`}>{truncate(displayName)}</Link>\n          </Text>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{definition.name}</IndexTable.Cell>\n        <IndexTable.Cell>{definition.access.storefront}</IndexTable.Cell>\n\n        <IndexTable.Cell>\n          <Badge size=\"small\">{capabilities.publishable.status}</Badge>\n        </IndexTable.Cell>\n        <IndexTable.Cell>{dateFormatter(updatedAt)}</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <VerticalStack>\n        <IndexFilters\n          selected={selected}\n          filters={[]}\n          onClearAll={() => {}}\n          cancelAction={{\n            onAction: onHandleCancel,\n            disabled: false,\n            loading: false,\n          }}\n          tabs={[]}\n          queryValue={queryValue || \"\"}\n          queryPlaceholder=\"Search ...\"\n          onQueryChange={handleFiltersQueryChange}\n          onQueryClear={() => {\n            setQueryValue(\"\");\n          }}\n          mode={mode}\n          setMode={setMode}\n          hideFilters\n        />\n        <IndexTable\n          resourceName={resourceName}\n          itemCount={edges.length}\n          selectable={false}\n          headings={[\n            { title: \"Display Name\" },\n            { title: \"Definition\" },\n            { title: \"Storefront access\" },\n            { title: \"Status\" },\n            { title: \"Last updated\" },\n          ]}\n        >\n          {rowMarkup}\n        </IndexTable>\n        <HorizontalGrid>\n          <div className=\"grid-container\">\n            <div\n              className=\"pagination-wrapper\"\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                padding: 20,\n              }}\n            >\n              <Pagination\n                hasPrevious={pageInfo.hasPreviousPage}\n                onPrevious={() => {\n                  handleNavigation(false);\n                }}\n                hasNext={pageInfo.hasNextPage}\n                onNext={() => {\n                  handleNavigation(true);\n                }}\n              />\n            </div>\n          </div>\n        </HorizontalGrid>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default Articles;\n", "import { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { Layout, Page, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport PageLoader from \"~/components/Loaders/PageLoader\";\nimport Products from \"~/components/Tables/Products\";\nimport { IPageInfo } from \"~/types\";\n\nexport async function loader({ request, params }) {\n  return json({\n    type: params.type,\n  });\n}\n\nexport default function ProductsPage() {\n  const { definitionType, type } = useLoaderData();\n\n  const [edges, setEdges] = useState([]);\n  const [pageInfo, setPageInfo] = useState({} as IPageInfo);\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n  const [pageLoading, setPageLoading] = useState(true);\n\n  useEffect(() => {\n    if (fetcher.state !== \"loading\" && pageLoading) {\n      setPageLoading(false);\n    }\n  }, [fetcher.state]);\n\n  const handleFetch = async (data) => {\n    fetcher.load(\n      `/app/search-products/?query=${_.get(data, \"query\")}&after=${_.get(\n        data,\n        \"after\",\n        null\n      )}&before=${_.get(data, \"before\", null)}`\n    );\n  };\n\n  useEffect(() => {\n    if (!fetcher.data) {\n      setPageLoading(true);\n      handleFetch({});\n    }\n  }, []);\n\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.products.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.products.pageInfo\", {}));\n    }\n  }, [fetcher]);\n\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app\" }}\n      title={'Products'}\n      subtitle=\"\"\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          <VerticalStack gap=\"3\">\n            {pageLoading ? <PageLoader /> : null}\n            {!pageLoading ? (\n              <Products\n                edges={edges}\n                pageInfo={pageInfo}\n                type={type}\n                onSearch={handleFetch}\n                loading={loading}\n              />\n            ) : null}\n          </VerticalStack>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n", "import {\n  IndexTable,\n  LegacyCard,\n  Pagination,\n  VerticalStack,\n  HorizontalGrid,\n  IndexFilters,\n  useSetIndexFiltersMode,\n  Thumbnail,\n  Text,\n} from \"@shopify/polaris\";\nimport { IProductResponse } from \"~/types\";\nimport { truncate } from \"~/utils\";\nimport Loader from \"../Loaders\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { IMAGE_PLACEHOLDER, getProductIDNumber } from \"~/constants\";\nimport { Link } from \"@remix-run/react\";\n\nconst Products = ({\n  edges,\n  pageInfo,\n  onSearch,\n  loading: isLoading,\n}: IProductResponse) => {\n  const resourceName = {\n    singular: \"product\",\n    plural: \"products\",\n  };\n  const [loading, setLoading] = useState(false);\n\n  const handleNavigation = (next: boolean) => {\n    let rest = {};\n    setLoading(true);\n    if (next) {\n      rest[\"after\"] = pageInfo.endCursor;\n    } else {\n      rest[\"before\"] = pageInfo.startCursor;\n    }\n\n    if (queryValue !== undefined && queryValue !== null) {\n      rest[\"query\"] = queryValue;\n    }\n    onSearch(rest);\n  };\n  const [queryValue, setQueryValue] = useState(null);\n  const handleFiltersQueryChange = useCallback(\n    (value: string) => setQueryValue(value),\n    []\n  );\n\n  useEffect(() => {\n    if (queryValue !== undefined && queryValue !== null) {\n      onSearch({ query: queryValue });\n    }\n  }, [queryValue]);\n  const [selected] = useState(0);\n  const onHandleCancel = () => {};\n\n  const { mode, setMode } = useSetIndexFiltersMode();\n\n  useEffect(() => {\n    setLoading(false);\n  }, [edges]);\n  const rowMarkup = edges.map(\n    (\n      {\n        node: {\n          id,\n          title,\n          status,\n          totalInventory,\n          featuredImage,\n          featuredMedia,\n        },\n      },\n      index\n    ) => (\n      <IndexTable.Row onNavigation={() => {}} id={id} key={id} position={index}>\n        <IndexTable.Cell>\n          <Thumbnail\n            source={\n              featuredImage?.transformedSrc ||\n              featuredMedia?.preview?.transformedSrc ||\n              IMAGE_PLACEHOLDER\n            }\n            size=\"small\"\n            alt={title}\n          />\n        </IndexTable.Cell>\n        <IndexTable.Cell>\n          <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"span\">\n            <Link to={`/app/product/${getProductIDNumber(id)}`}>\n              {truncate(title)}\n            </Link>\n          </Text>\n        </IndexTable.Cell>\n\n        <IndexTable.Cell>{status}</IndexTable.Cell>\n        <IndexTable.Cell>{totalInventory} in stock</IndexTable.Cell>\n      </IndexTable.Row>\n    )\n  );\n\n  return (\n    <LegacyCard>\n      {loading || isLoading ? <Loader /> : null}\n      <VerticalStack>\n        <IndexFilters\n          selected={selected}\n          filters={[]}\n          onClearAll={() => {}}\n          cancelAction={{\n            onAction: onHandleCancel,\n            disabled: false,\n            loading: false,\n          }}\n          tabs={[]}\n          queryValue={queryValue || \"\"}\n          queryPlaceholder=\"Search ...\"\n          onQueryChange={handleFiltersQueryChange}\n          onQueryClear={() => {\n            setQueryValue(\"\");\n          }}\n          mode={mode}\n          setMode={setMode}\n          hideFilters\n        />\n        <IndexTable\n          resourceName={resourceName}\n          itemCount={edges.length}\n          selectable={false}\n          headings={[\n            { title: \"Product\" },\n            { title: \"Title\" },\n            { title: \"Status\" },\n            { title: \"Inventory\" },\n          ]}\n        >\n          {rowMarkup}\n        </IndexTable>\n        <HorizontalGrid>\n          <div className=\"grid-container\">\n            <div\n              className=\"pagination-wrapper\"\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                padding: 20,\n              }}\n            >\n              <Pagination\n                hasPrevious={pageInfo.hasPreviousPage}\n                onPrevious={() => {\n                  handleNavigation(false);\n                }}\n                hasNext={pageInfo.hasNextPage}\n                onNext={() => {\n                  handleNavigation(true);\n                }}\n              />\n            </div>\n          </div>\n        </HorizontalGrid>\n      </VerticalStack>\n    </LegacyCard>\n  );\n};\n\nexport default Products;\nfunction getProductNumber(id: string) {\n  throw new Error(\"Function not implemented.\");\n}\n", "import { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { Layout, Page, VerticalStack } from \"@shopify/polaris\";\nimport * as _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport PageLoader from \"~/components/Loaders/PageLoader\";\nimport Products from \"~/components/Tables/Products\";\nimport { IPageInfo } from \"~/types\";\n\nexport async function loader({ request, params }) {\n  return json({\n    type: params.type,\n  });\n}\n\nexport default function ProductsPage() {\n  const { definitionType, type } = useLoaderData();\n\n  const [edges, setEdges] = useState([]);\n  const [pageInfo, setPageInfo] = useState({} as IPageInfo);\n  const fetcher = useFetcher();\n  const [loading, setLoading] = useState(fetcher.state === \"loading\");\n  const [pageLoading, setPageLoading] = useState(true);\n\n  useEffect(() => {\n    if (fetcher.state !== \"loading\" && pageLoading) {\n      setPageLoading(false);\n    }\n  }, [fetcher.state]);\n\n  const handleFetch = async (data) => {\n    fetcher.load(\n      `/app/search-products/?query=${_.get(data, \"query\")}&after=${_.get(\n        data,\n        \"after\",\n        null\n      )}&before=${_.get(data, \"before\", null)}`\n    );\n  };\n\n  useEffect(() => {\n    if (!fetcher.data) {\n      setPageLoading(true);\n      handleFetch({});\n    }\n  }, []);\n\n  useEffect(() => {\n    if (fetcher.state === \"loading\") {\n      setLoading(true);\n    } else {\n      setLoading(false);\n    }\n    if (fetcher.data) {\n      setEdges(_.get(fetcher.data, \"data.products.edges\", []));\n      setPageInfo(_.get(fetcher.data, \"data.products.pageInfo\", {}));\n    }\n  }, [fetcher]);\n\n  return (\n    <Page\n      backAction={{ content: \"Products\", url: \"/app\" }}\n      title={definitionType}\n      subtitle=\"Products\"\n      compactTitle\n    >\n      <Layout>\n        <Layout.Section>\n          <VerticalStack gap=\"3\">\n            {pageLoading ? <PageLoader /> : null}\n            {!pageLoading ? (\n              <Products\n                edges={edges}\n                pageInfo={pageInfo}\n                type={type}\n                onSearch={handleFetch}\n                loading={loading}\n              />\n            ) : null}\n          </VerticalStack>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n", "import { useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport {\n  AppProvider as PolarisAppProvider,\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  Text,\n  TextField } from\n\"@shopify/polaris\";\n\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\n\nimport { login } from \"../../shopify.server\";\nimport { loginErrorMessage } from \"./error.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport async function loader({ request }) {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors,\n    polarisTranslations: require(`@shopify/polaris/locales/en.json`)\n  });\n}\n\nexport async function action({ request }) {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors\n  });\n}\n\nexport default function Auth() {\n  const { polarisTranslations } = useLoaderData();\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const [shop, setShop] = useState(\"\");\n  const { errors } = actionData || loaderData;\n\n  return (\n    <PolarisAppProvider i18n={polarisTranslations}>\n      <Page>\n        <Card>\n          <Form method=\"post\">\n            <FormLayout>\n              <Text variant=\"headingMd\" as=\"h2\">\n                Log in\n              </Text>\n              <TextField\n                type=\"text\"\n                name=\"shop\"\n                label=\"Shop domain\"\n                helpText=\"example.myshopify.com\"\n                value={shop}\n                onChange={setShop}\n                autoComplete=\"on\"\n                error={errors.shop} />\n\n              <Button submit>Log in</Button>\n            </FormLayout>\n          </Form>\n        </Card>\n      </Page>\n    </PolarisAppProvider>);\n\n}", "import { LoginErrorType } from \"@shopify/shopify-app-remix/server\";\n\nexport function loginErrorMessage(loginErrors) {\n  if (loginErrors?.shop === LoginErrorType.MissingShop) {\n    return { shop: \"Please enter your shop domain to log in\" };\n  } else if (loginErrors?.shop === LoginErrorType.InvalidShop) {\n    return { shop: \"Please enter a valid shop domain to log in\" };\n  }\n\n  return {};\n}\n", "import { authenticate } from \"../shopify.server\";\nimport db from \"../db.server\";\n\nexport const action = async ({ request }) => {\n  const { topic, shop, session } = await authenticate.webhook(request);\n\n  switch (topic) {\n    case \"APP_UNINSTALLED\":\n      if (session) {\n        await db.session.deleteMany({ where: { shop } });\n      }\n      break;\n    case \"CUSTOMERS_DATA_REQUEST\":\n    case \"CUSTOMERS_REDACT\":\n    case \"SHOP_REDACT\":\n    default:\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\n  }\n\n  throw new Response();\n};\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\n\nimport { login } from \"../../shopify.server\";\n\nimport indexStyles from \"./style.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: indexStyles }];\n\nexport async function loader({ request }) {\n  const url = new URL(request.url);\n\n  if (url.searchParams.get(\"shop\")) {\n    throw redirect(`/app?${url.searchParams.toString()}`);\n  }\n\n  return json({ showForm: Boolean(login) });\n}\n\nexport default function App() {\n  const { showForm } = useLoaderData();\n\n  return (\n    <div className=\"index\">\n      <div className=\"content\">\n        <h1>A short heading about [your app]</h1>\n        <p>A tagline about [your app] that describes your value proposition.</p>\n        {showForm &&\n        <Form method=\"post\" action=\"/auth/login\">\n            <label>\n              <span>Shop domain</span>\n              <input type=\"text\" name=\"shop\" />\n              <span>e.g: my-shop-domain.myshopify.com</span>\n            </label>\n            <button type=\"submit\">Log in</button>\n          </Form>}\n\n        <ul>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n        </ul>\n      </div>\n    </div>);\n\n}", "import { authenticate } from \"../shopify.server\";\n\nexport async function loader({ request }) {\n  await authenticate.admin(request);\n\n  return null;\n}\n", "import { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { boundary } from \"@shopify/shopify-app-remix/server\";\nimport { AppProvider } from \"@shopify/shopify-app-remix/react\";\n\nimport { authenticate } from \"../shopify.server\";\nimport { Frame } from \"@shopify/polaris\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport async function loader({ request }) {\n  await authenticate.admin(request);\n\n  return json({ apiKey: process.env.SHOPIFY_API_KEY });\n}\n\nexport default function App() {\n  const { apiKey } = useLoaderData();\n\n  return (\n    <AppProvider isEmbeddedApp apiKey={apiKey}>\n       <Frame>\n\n        \n      <ui-nav-menu>\n        <Link to=\"/app\" rel=\"home\">\n          Home\n        </Link>       \n        <Link to=\"/app/products\">Products</Link>\n        <Link to=\"/app/items/item_definition\">Items</Link>\n        <Link to=\"/app/site-maps\">Sites</Link>\n         <Link to=\"/app/articles\">Articles</Link>\n         <Link to=\"/app/metaobjects\">Metaobjects</Link>\n      </ui-nav-menu>\n      <Outlet />\n      </Frame>\n    </AppProvider>);\n\n}\n\n// Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\nexport function ErrorBoundary() {\n  return boundary.error(useRouteError());\n}\n\nexport const headers = (headersArgs) => {\n  return boundary.headers(headersArgs);\n};", "export default {'entry':{'module':'/build/entry.client-673E7ZUG.js','imports':['/build/_shared/chunk-JXHNNPNR.js','/build/_shared/chunk-H36SQQE5.js','/build/_shared/chunk-WEVALTTY.js','/build/_shared/chunk-JKUASME7.js','/build/_shared/chunk-UUM35YD6.js','/build/_shared/chunk-N4FG5RPV.js','/build/_shared/chunk-TVZC3ZTX.js','/build/_shared/chunk-RODUX5XG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-Y2JKRLDL.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-727D4MNS.js','imports':['/build/_shared/chunk-2L7VYSCH.js','/build/_shared/chunk-TMJLOEVS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app-JMG5QCD7.js','imports':['/build/_shared/chunk-Z4WZKCUW.js','/build/_shared/chunk-WQFJ2CRD.js','/build/_shared/chunk-TMJLOEVS.js','/build/_shared/chunk-3FUCSJLB.js','/build/_shared/chunk-FPZ7L3CR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/app._index copy':{'id':'routes/app._index copy','parentId':'routes/app','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/app._index copy-ILQF3OKM.js','imports':['/build/_shared/chunk-TDGSKHMC.js','/build/_shared/chunk-KCL6SWIQ.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/app._index-D5YD7TRB.js','imports':['/build/_shared/chunk-MI5N6LOS.js','/build/_shared/chunk-I3XSTOLI.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.additional':{'id':'routes/app.additional','parentId':'routes/app','path':'additional','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.additional-T2F666YN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.article.$handle':{'id':'routes/app.article.$handle','parentId':'routes/app','path':'article/:handle','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.article.$handle-VCLIIX7W.js','imports':['/build/_shared/chunk-EDXGPGNJ.js','/build/_shared/chunk-AHPLIXZP.js','/build/_shared/chunk-YMF6HLSR.js','/build/_shared/chunk-54DZ43JQ.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.articles':{'id':'routes/app.articles','parentId':'routes/app','path':'articles','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.articles-MH67SANU.js','imports':['/build/_shared/chunk-I3XSTOLI.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.item.$handle':{'id':'routes/app.item.$handle','parentId':'routes/app','path':'item/:handle','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.item.$handle-R7QCI3BM.js','imports':['/build/_shared/chunk-4NINSXQV.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-VZP5GZ3W.js','/build/_shared/chunk-EDXGPGNJ.js','/build/_shared/chunk-YMF6HLSR.js','/build/_shared/chunk-54DZ43JQ.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.item.duplicate':{'id':'routes/app.item.duplicate','parentId':'routes/app','path':'item/duplicate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.item.duplicate-LXGN3DMA.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.items.$type':{'id':'routes/app.items.$type','parentId':'routes/app','path':'items/:type','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.items.$type-QLV7Q6CU.js','imports':['/build/_shared/chunk-I3XSTOLI.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.metaobject.$type':{'id':'routes/app.metaobject.$type','parentId':'routes/app','path':'metaobject/:type','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.metaobject.$type-5UL2Y2TM.js','imports':['/build/_shared/chunk-KCL6SWIQ.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.metaobjects':{'id':'routes/app.metaobjects','parentId':'routes/app','path':'metaobjects','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.metaobjects-VVHV37XS.js','imports':['/build/_shared/chunk-TDGSKHMC.js','/build/_shared/chunk-KCL6SWIQ.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.product.$id':{'id':'routes/app.product.$id','parentId':'routes/app','path':'product/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.product.$id-6HTOZDSR.js','imports':['/build/_shared/chunk-4NINSXQV.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-VZP5GZ3W.js','/build/_shared/chunk-EDXGPGNJ.js','/build/_shared/chunk-54DZ43JQ.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.product.duplicate':{'id':'routes/app.product.duplicate','parentId':'routes/app','path':'product/duplicate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.product.duplicate-4KPDXDOO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.products':{'id':'routes/app.products','parentId':'routes/app','path':'products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.products-BHXOJNCP.js','imports':['/build/_shared/chunk-MI5N6LOS.js','/build/_shared/chunk-I3XSTOLI.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.search-collections':{'id':'routes/app.search-collections','parentId':'routes/app','path':'search-collections','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.search-collections-H5TZFVDI.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.search-metaobjects.$type':{'id':'routes/app.search-metaobjects.$type','parentId':'routes/app','path':'search-metaobjects/:type','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.search-metaobjects.$type-3SNQBDN4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.search-products':{'id':'routes/app.search-products','parentId':'routes/app','path':'search-products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.search-products-6AIRR33V.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.site-map.$handle':{'id':'routes/app.site-map.$handle','parentId':'routes/app','path':'site-map/:handle','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.site-map.$handle-72EFAFWR.js','imports':['/build/_shared/chunk-VZP5GZ3W.js','/build/_shared/chunk-AHPLIXZP.js','/build/_shared/chunk-YMF6HLSR.js','/build/_shared/chunk-54DZ43JQ.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.site-maps':{'id':'routes/app.site-maps','parentId':'routes/app','path':'site-maps','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.site-maps-ZAIX6YBI.js','imports':['/build/_shared/chunk-I3XSTOLI.js','/build/_shared/chunk-Q5N6DXQA.js','/build/_shared/chunk-E7A3J4TI.js','/build/_shared/chunk-W333RDEB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.$':{'id':'routes/auth.$','parentId':'root','path':'auth/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.$-7PY6ZHS6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.login':{'id':'routes/auth.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.login-554FYP5P.js','imports':['/build/_shared/chunk-Z4WZKCUW.js','/build/_shared/chunk-2L7VYSCH.js','/build/_shared/chunk-TMJLOEVS.js','/build/_shared/chunk-3FUCSJLB.js','/build/_shared/chunk-FPZ7L3CR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-AKIH6B3Q.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'5b8319a7','hmr':{'runtime':'/build/_shared/chunk-UUM35YD6.js','timestamp':1713757680480},'url':'/build/manifest-5B8319A7.js'};", "\nimport * as entryServer from \"/Users/leonlishenga/Documents/code/wifey/shopify-backened-metaobjects/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/app.search-metaobjects.$type.tsx\";\nimport * as route2 from \"./routes/app.search-collections.tsx\";\nimport * as route3 from \"./routes/app.product.duplicate.tsx\";\nimport * as route4 from \"./routes/app.metaobject.$type.tsx\";\nimport * as route5 from \"./routes/app.site-map.$handle.tsx\";\nimport * as route6 from \"./routes/app.article.$handle.tsx\";\nimport * as route7 from \"./routes/app.search-products.tsx\";\nimport * as route8 from \"./routes/app.item.duplicate.tsx\";\nimport * as route9 from \"./routes/app.item.$handle.tsx\";\nimport * as route10 from \"./routes/app._index copy.jsx\";\nimport * as route11 from \"./routes/app.items.$type.tsx\";\nimport * as route12 from \"./routes/app.metaobjects.tsx\";\nimport * as route13 from \"./routes/app.product.$id.tsx\";\nimport * as route14 from \"./routes/app.additional.jsx\";\nimport * as route15 from \"./routes/app.site-maps.tsx\";\nimport * as route16 from \"./routes/app.articles.tsx\";\nimport * as route17 from \"./routes/app.products.tsx\";\nimport * as route18 from \"./routes/app._index.tsx\";\nimport * as route19 from \"./routes/auth.login/route.jsx\";\nimport * as route20 from \"./routes/webhooks.jsx\";\nimport * as route21 from \"./routes/_index/route.jsx\";\nimport * as route22 from \"./routes/auth.$.jsx\";\nimport * as route23 from \"./routes/app.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":{\"port\":\"53187\"},\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.search-metaobjects.$type\": {\n      id: \"routes/app.search-metaobjects.$type\",\n      parentId: \"routes/app\",\n      path: \"search-metaobjects/:type\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.search-collections\": {\n      id: \"routes/app.search-collections\",\n      parentId: \"routes/app\",\n      path: \"search-collections\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/app.product.duplicate\": {\n      id: \"routes/app.product.duplicate\",\n      parentId: \"routes/app\",\n      path: \"product/duplicate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/app.metaobject.$type\": {\n      id: \"routes/app.metaobject.$type\",\n      parentId: \"routes/app\",\n      path: \"metaobject/:type\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/app.site-map.$handle\": {\n      id: \"routes/app.site-map.$handle\",\n      parentId: \"routes/app\",\n      path: \"site-map/:handle\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/app.article.$handle\": {\n      id: \"routes/app.article.$handle\",\n      parentId: \"routes/app\",\n      path: \"article/:handle\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/app.search-products\": {\n      id: \"routes/app.search-products\",\n      parentId: \"routes/app\",\n      path: \"search-products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/app.item.duplicate\": {\n      id: \"routes/app.item.duplicate\",\n      parentId: \"routes/app\",\n      path: \"item/duplicate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/app.item.$handle\": {\n      id: \"routes/app.item.$handle\",\n      parentId: \"routes/app\",\n      path: \"item/:handle\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/app._index copy\": {\n      id: \"routes/app._index copy\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/app.items.$type\": {\n      id: \"routes/app.items.$type\",\n      parentId: \"routes/app\",\n      path: \"items/:type\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/app.metaobjects\": {\n      id: \"routes/app.metaobjects\",\n      parentId: \"routes/app\",\n      path: \"metaobjects\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/app.product.$id\": {\n      id: \"routes/app.product.$id\",\n      parentId: \"routes/app\",\n      path: \"product/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/app.additional\": {\n      id: \"routes/app.additional\",\n      parentId: \"routes/app\",\n      path: \"additional\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/app.site-maps\": {\n      id: \"routes/app.site-maps\",\n      parentId: \"routes/app\",\n      path: \"site-maps\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/app.articles\": {\n      id: \"routes/app.articles\",\n      parentId: \"routes/app\",\n      path: \"articles\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/app.products\": {\n      id: \"routes/app.products\",\n      parentId: \"routes/app\",\n      path: \"products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/auth.login\": {\n      id: \"routes/auth.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/auth.$\": {\n      id: \"routes/auth.$\",\n      parentId: \"root\",\n      path: \"auth/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    }\n  };"],
  "mappings": "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",
  "names": ["import_server", "import_node", "isbot", "import_react", "import_jsx_dev_runtime", "import_node", "query", "get", "map", "find", "_a", "query", "loader", "import_node", "loader", "query", "_", "import_node", "loader", "import_node", "import_react", "import_polaris", "_", "import_react", "import_polaris", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "type", "import_jsx_dev_runtime", "loader", "_a", "query", "active", "action", "loader", "import_node", "import_react", "import_polaris", "_", "import_polaris", "import_jsx_dev_runtime", "_", "query", "import_polaris", "import_react", "import_react", "import_jsx_dev_runtime", "_a", "get", "import_polaris", "import_react", "import_jsx_dev_runtime", "_a", "get", "import_polaris", "import_react", "import_react", "import_jsx_dev_runtime", "MDEditor", "get", "import_polaris", "import_react", "import_polaris", "import_jsx_dev_runtime", "import_polaris_icons", "import_polaris", "import_jsx_dev_runtime", "import_react_sortable_hoc", "_", "import_polaris", "import_polaris_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_polaris", "import_react", "_", "import_polaris", "import_react", "import_polaris_icons", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_polaris", "import_react", "_", "import_polaris", "import_react", "import_jsx_dev_runtime", "map", "find", "_a", "options", "titleCase", "import_react", "import_jsx_dev_runtime", "MDEditor", "get", "import_jsx_dev_runtime", "import_react", "add", "get", "import_jsx_dev_runtime", "open", "get", "_a", "import_polaris", "import_react", "import_jsx_dev_runtime", "active", "message", "import_jsx_dev_runtime", "get", "_a", "map", "import_jsx_dev_runtime", "get", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_polaris", "import_react", "import_react", "import_polaris_icons", "import_jsx_dev_runtime", "get", "map", "React", "import_jsx_dev_runtime", "get", "import_polaris", "import_polaris_icons", "import_jsx_dev_runtime", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_react", "_", "import_polaris", "import_polaris", "import_polaris_icons", "import_react", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "get", "import_jsx_dev_runtime", "get", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_react", "_", "import_polaris", "import_jsx_dev_runtime", "get", "import_jsx_dev_runtime", "get", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_react", "_", "import_polaris", "import_jsx_dev_runtime", "get", "import_jsx_dev_runtime", "get", "import_jsx_dev_runtime", "loader", "action", "values", "get", "action", "links", "loader", "import_node", "import_react", "import_polaris", "_", "import_formik", "import_polaris", "import_react", "import_jsx_dev_runtime", "value", "import_polaris", "_", "import_jsx_dev_runtime", "import_polaris", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "MDEditor", "links", "loader", "action", "_a", "values", "get", "loader", "import_node", "query", "loader", "action", "_", "import_node", "query", "action", "action", "links", "loader", "import_node", "import_react", "import_polaris", "_", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_polaris", "import_react", "_", "import_react", "import_jsx_dev_runtime", "values", "propertyBase", "import_jsx_dev_runtime", "get", "import_polaris", "import_react", "_", "import_react", "import_jsx_dev_runtime", "propertyBase", "import_polaris", "import_react", "_", "import_react", "import_jsx_dev_runtime", "_a", "action", "import_formik", "import_jsx_dev_runtime", "links", "MDEditor", "loader", "action", "_a", "get", "MetaobjectsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_react", "import_polaris", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "MetaobjectsPage", "active", "MetaobjectsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_polaris", "import_jsx_dev_runtime", "import_react", "import_polaris", "import_react", "import_jsx_dev_runtime", "type", "import_jsx_dev_runtime", "loader", "MetaobjectsPage", "MetaobjectsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_jsx_dev_runtime", "loader", "MetaobjectsPage", "active", "action", "ProductPage", "links", "loader", "import_node", "import_react", "import_polaris", "_", "import_polaris", "import_react", "import_react_sortable_hoc", "_", "import_polaris", "import_react", "_", "import_jsx_dev_runtime", "item", "import_jsx_dev_runtime", "get", "item", "query", "import_polaris", "import_react", "_", "import_jsx_dev_runtime", "item", "query", "query", "import_polaris", "import_react", "_", "import_react", "import_jsx_dev_runtime", "_a", "import_formik", "import_react", "DndContext", "createContext", "dragDropManager", "undefined", "invariant", "condition", "format", "args", "isProduction", "undefined", "Error", "error", "argIndex", "replace", "name", "framesToPop", "process", "get", "obj", "path", "defaultValue", "split", "reduce", "a", "c", "without", "items", "item", "filter", "i", "isObject", "input", "xor", "itemsA", "itemsB", "map", "Map", "insertItem", "item", "set", "has", "get", "forEach", "result", "count", "key", "push", "intersection", "filter", "t", "indexOf", "INIT_COORDS", "BEGIN_DRAG", "PUBLISH_DRAG_SOURCE", "HOVER", "DROP", "END_DRAG", "setClientOffset", "clientOffset", "sourceClientOffset", "type", "INIT_COORDS", "payload", "ResetCoordinatesAction", "type", "INIT_COORDS", "payload", "clientOffset", "sourceClientOffset", "createBeginDrag", "manager", "sourceIds", "options", "publishSource", "getSourceClientOffset", "monitor", "getMonitor", "registry", "getRegistry", "dispatch", "setClientOffset", "verifyInvariants", "sourceId", "getDraggableSource", "Error", "verifyGetSourceClientOffsetIsFunction", "item", "getSource", "beginDrag", "verifyItemIsObject", "pinSource", "itemType", "getSourceType", "BEGIN_DRAG", "isSourcePublic", "invariant", "isDragging", "forEach", "isObject", "i", "length", "canDragSource", "createDrop", "manager", "options", "monitor", "getMonitor", "registry", "getRegistry", "verifyInvariants", "getDroppableTargets", "forEach", "targetId", "index", "dropResult", "determineDropResult", "action", "type", "DROP", "payload", "dispatch", "invariant", "isDragging", "didDrop", "target", "getTarget", "drop", "undefined", "verifyDropResultType", "getDropResult", "isObject", "targetIds", "getTargetIds", "filter", "canDropOnTarget", "reverse", "createEndDrag", "manager", "monitor", "getMonitor", "registry", "getRegistry", "verifyIsDragging", "sourceId", "getSourceId", "getSource", "endDrag", "unpinSource", "type", "END_DRAG", "invariant", "isDragging", "matchesType", "targetType", "draggedItemType", "Array", "isArray", "some", "t", "createHover", "manager", "targetIdsArg", "clientOffset", "verifyTargetIdsIsArray", "targetIds", "slice", "monitor", "getMonitor", "registry", "getRegistry", "draggedItemType", "getItemType", "removeNonMatchingTargetIds", "checkInvariants", "hoverAllTargets", "type", "HOVER", "payload", "invariant", "Array", "isArray", "isDragging", "didDrop", "i", "length", "targetId", "lastIndexOf", "target", "getTarget", "targetType", "getTargetType", "matchesType", "splice", "forEach", "hover", "createPublishDragSource", "manager", "getMonitor", "isDragging", "type", "PUBLISH_DRAG_SOURCE", "createDragDropActions", "manager", "beginDrag", "createBeginDrag", "publishDragSource", "createPublishDragSource", "hover", "createHover", "drop", "createDrop", "endDrag", "createEndDrag", "DragDropManagerImpl", "receiveBackend", "backend", "getMonitor", "monitor", "getBackend", "getRegistry", "registry", "getActions", "manager", "dispatch", "store", "bindActionCreator", "actionCreator", "args", "action", "apply", "actions", "createDragDropActions", "Object", "keys", "reduce", "boundActions", "key", "isSetUp", "handleRefCountChange", "shouldSetUp", "getState", "refCount", "setup", "teardown", "subscribe", "add", "a", "b", "x", "y", "subtract", "getSourceClientOffset", "state", "clientOffset", "initialClientOffset", "initialSourceClientOffset", "getDifferenceFromInitialOffset", "NONE", "ALL", "__IS_NONE__", "__IS_ALL__", "areDirty", "dirtyIds", "handlerIds", "intersection", "length", "DragDropMonitorImpl", "subscribeToStateChange", "listener", "options", "handlerIds", "invariant", "Array", "isArray", "prevStateId", "store", "getState", "stateId", "handleChange", "state", "currentStateId", "areDirty", "dirtyHandlerIds", "subscribe", "subscribeToOffsetChange", "previousState", "dragOffset", "nextState", "canDragSource", "sourceId", "source", "registry", "getSource", "isDragging", "canDrag", "canDropOnTarget", "targetId", "target", "getTarget", "didDrop", "targetType", "getTargetType", "draggedItemType", "getItemType", "matchesType", "canDrop", "Boolean", "isDraggingSource", "isSourcePublic", "sourceType", "getSourceType", "isOverTarget", "shallow", "targetIds", "getTargetIds", "length", "index", "indexOf", "dragOperation", "itemType", "getItem", "item", "getSourceId", "getDropResult", "dropResult", "getInitialClientOffset", "initialClientOffset", "getInitialSourceClientOffset", "initialSourceClientOffset", "getClientOffset", "clientOffset", "getSourceClientOffset", "getDifferenceFromInitialOffset", "scope", "global", "self", "BrowserMutationObserver", "MutationObserver", "WebKitMutationObserver", "makeRequestCallFromTimer", "callback", "timeoutHandle", "setTimeout", "handleTimer", "intervalHandle", "setInterval", "clearTimeout", "clearInterval", "makeRequestCallFromMutationObserver", "toggle", "observer", "node", "document", "createTextNode", "observe", "characterData", "data", "makeRequestCall", "AsapQueue", "enqueueTask", "task", "queue", "q", "requestFlush", "length", "flushing", "pendingErrors", "index", "capacity", "flush", "currentIndex", "call", "scan", "newLength", "registerPendingError", "err", "push", "requestErrorThrow", "makeRequestCall", "makeRequestCallFromTimer", "shift", "RawTask", "call", "task", "error", "onError", "release", "TaskFactory", "create", "task", "tasks", "freeTasks", "t", "length", "pop", "RawTask", "onError", "asapQueue", "AsapQueue", "taskFactory", "TaskFactory", "registerPendingError", "asap", "task", "enqueueTask", "create", "ADD_SOURCE", "ADD_TARGET", "REMOVE_SOURCE", "REMOVE_TARGET", "addSource", "sourceId", "type", "payload", "addTarget", "targetId", "removeSource", "removeTarget", "validateSourceContract", "source", "invariant", "canDrag", "beginDrag", "endDrag", "validateTargetContract", "target", "canDrop", "hover", "drop", "validateType", "type", "allowArray", "Array", "isArray", "forEach", "t", "HandlerRole", "SOURCE", "TARGET", "nextUniqueId", "getNextUniqueId", "getNextHandlerId", "role", "id", "getNextUniqueId", "toString", "HandlerRole", "SOURCE", "TARGET", "Error", "parseRoleFromHandlerId", "handlerId", "mapContainsValue", "map", "searchValue", "entries", "isDone", "done", "value", "next", "HandlerRegistryImpl", "addSource", "type", "source", "validateType", "validateSourceContract", "sourceId", "addHandler", "store", "dispatch", "addTarget", "target", "validateTargetContract", "targetId", "containsHandler", "handler", "dragSources", "dropTargets", "getSource", "includePinned", "invariant", "isSourceId", "pinnedSourceId", "pinnedSource", "get", "getTarget", "isTargetId", "getSourceType", "types", "getTargetType", "removeSource", "asap", "delete", "removeTarget", "pinSource", "unpinSource", "set", "Map", "strictEquality", "a", "b", "areCoordsEqual", "offsetA", "offsetB", "x", "y", "areArraysEqual", "isEqual", "length", "i", "reduce", "_state", "NONE", "action", "type", "HOVER", "ADD_SOURCE", "ADD_TARGET", "REMOVE_TARGET", "REMOVE_SOURCE", "BEGIN_DRAG", "PUBLISH_DRAG_SOURCE", "END_DRAG", "DROP", "ALL", "targetIds", "prevTargetIds", "payload", "result", "xor", "length", "areArraysEqual", "prevInnermostTargetId", "innermostTargetId", "push", "_defineProperty", "initialState", "initialSourceClientOffset", "initialClientOffset", "clientOffset", "reduce", "state", "action", "payload", "type", "INIT_COORDS", "BEGIN_DRAG", "sourceClientOffset", "HOVER", "areCoordsEqual", "_objectSpread", "END_DRAG", "DROP", "_defineProperty", "initialState", "itemType", "item", "sourceId", "targetIds", "dropResult", "didDrop", "isSourcePublic", "reduce", "state", "action", "payload", "type", "BEGIN_DRAG", "_objectSpread", "PUBLISH_DRAG_SOURCE", "HOVER", "REMOVE_TARGET", "indexOf", "targetId", "without", "DROP", "END_DRAG", "reduce", "state", "action", "type", "ADD_SOURCE", "ADD_TARGET", "REMOVE_SOURCE", "REMOVE_TARGET", "reduce", "state", "_defineProperty", "reduce", "state", "action", "dirtyHandlerIds", "type", "payload", "_objectSpread", "prevTargetIds", "get", "dragOffset", "refCount", "dragOperation", "stateId", "createDragDropManager", "backendFactory", "globalContext", "undefined", "backendOptions", "debugMode", "store", "makeStoreInstance", "monitor", "DragDropMonitorImpl", "HandlerRegistryImpl", "manager", "DragDropManagerImpl", "backend", "receiveBackend", "reduxDevTools", "window", "__REDUX_DEVTOOLS_EXTENSION__", "createStore", "reduce", "name", "instanceId", "import_react", "refCount", "INSTANCE_SYM", "Symbol", "for", "DndProvider", "memo", "children", "props", "manager", "isGlobalInstance", "getDndContextValue", "useEffect", "context", "getGlobalContext", "_jsx", "DndContext", "Provider", "value", "getDndContextValue", "props", "dragDropManager", "manager", "createSingletonDndContext", "backend", "context", "options", "debugMode", "isGlobalInstance", "getGlobalContext", "ctx", "INSTANCE_SYM", "createDragDropManager", "global", "window", "memoize", "fn", "result", "without", "items", "item", "filter", "i", "union", "itemsA", "itemsB", "set", "Set", "insertItem", "add", "forEach", "key", "push", "EnterLeaveCounter", "enter", "enteringNode", "previousLength", "entered", "length", "isNodeEntered", "node", "isNodeInDocument", "contains", "union", "filter", "leave", "leavingNode", "without", "reset", "NativeDragSource", "initializeExposedProperties", "Object", "keys", "config", "exposeProperties", "forEach", "property", "defineProperty", "item", "configurable", "enumerable", "get", "console", "warn", "loadDataTransfer", "dataTransfer", "newProperties", "propertyFn", "value", "matchesTypes", "defineProperties", "canDrag", "beginDrag", "isDragging", "monitor", "handle", "getSourceId", "endDrag", "URL", "FILE", "TEXT", "HTML", "getDataFromDataTransfer", "dataTransfer", "typesToTry", "defaultValue", "result", "reduce", "resultSoFar", "typeToTry", "getData", "nativeTypesConfig", "FILE", "exposeProperties", "files", "dataTransfer", "Array", "prototype", "slice", "call", "items", "matchesTypes", "HTML", "html", "getDataFromDataTransfer", "URL", "urls", "split", "TEXT", "text", "createNativeDragSource", "type", "dataTransfer", "config", "nativeTypesConfig", "Error", "result", "NativeDragSource", "loadDataTransfer", "matchNativeItemType", "dataTransferTypes", "Array", "prototype", "slice", "call", "types", "Object", "keys", "filter", "nativeItemType", "typeConfig", "matchesTypes", "some", "t", "indexOf", "isFirefox", "memoize", "test", "navigator", "userAgent", "isSafari", "Boolean", "window", "safari", "MonotonicInterpolant", "interpolate", "x", "xs", "ys", "c1s", "c2s", "c3s", "i", "length", "low", "high", "mid", "Math", "floor", "xHere", "max", "diff", "diffSq", "indexes", "push", "sort", "a", "b", "dys", "dxs", "ms", "dx", "dy", "m2", "mNext", "dxNext", "common", "m", "c1", "invDx", "ELEMENT_NODE", "getNodeClientOffset", "node", "el", "nodeType", "parentElement", "top", "left", "getBoundingClientRect", "x", "y", "getEventClientOffset", "e", "clientX", "clientY", "isImageNode", "document", "nodeName", "isFirefox", "documentElement", "contains", "getDragPreviewSize", "isImage", "dragPreview", "sourceWidth", "sourceHeight", "dragPreviewWidth", "width", "dragPreviewHeight", "height", "isSafari", "window", "devicePixelRatio", "getDragPreviewOffset", "sourceNode", "clientOffset", "anchorPoint", "offsetPoint", "dragPreviewNodeOffsetFromClient", "offsetFromDragPreview", "offsetWidth", "offsetHeight", "anchorX", "anchorY", "calculateYOffset", "MonotonicInterpolant", "interpolate", "calculateXOffset", "offsetX", "offsetY", "isManualOffsetX", "isManualOffsetY", "OptionsReader", "window", "globalContext", "document", "rootElement", "optionsArgs", "options", "ownerDocument", "_defineProperty", "HTML5BackendImpl", "profile", "sourcePreviewNodes", "size", "sourcePreviewNodeOptions", "sourceNodeOptions", "sourceNodes", "dragStartSourceIds", "length", "dropTargetIds", "dragEnterTargetIds", "dragOverTargetIds", "window", "options", "document", "rootElement", "setup", "root", "undefined", "__isReactDndBackendSetUp", "Error", "addEventListeners", "teardown", "removeEventListeners", "clearCurrentDragSourceNode", "asyncEndDragFrameId", "cancelAnimationFrame", "connectDragPreview", "sourceId", "node", "set", "delete", "connectDragSource", "handleDragStart", "e", "handleSelectStart", "setAttribute", "addEventListener", "removeEventListener", "connectDropTarget", "targetId", "handleDragEnter", "handleDragOver", "handleDrop", "target", "handleTopDragStart", "handleTopDragStartCapture", "handleTopDragEndCapture", "handleTopDragEnter", "handleTopDragEnterCapture", "handleTopDragLeaveCapture", "handleTopDragOver", "handleTopDragOverCapture", "handleTopDrop", "handleTopDropCapture", "getCurrentSourceNodeOptions", "monitor", "getSourceId", "get", "_objectSpread", "dropEffect", "altKeyPressed", "getCurrentDropEffect", "isDraggingNativeItem", "getCurrentSourcePreviewNodeOptions", "anchorX", "anchorY", "captureDraggingState", "itemType", "getItemType", "Object", "keys", "NativeTypes", "some", "key", "beginDragNativeItem", "type", "dataTransfer", "currentNativeSource", "createNativeDragSource", "currentNativeHandle", "registry", "addSource", "actions", "beginDrag", "setCurrentDragSourceNode", "currentDragSourceNode", "MOUSE_MOVE_TIMEOUT", "mouseMoveTimeoutTimer", "setTimeout", "endDragIfSourceWasRemovedFromDOM", "clearTimeout", "defaultPrevented", "unshift", "_e", "manager", "globalContext", "Map", "lastClientOffset", "hoverRafId", "getSourceClientOffset", "source", "getNodeClientOffset", "endDragNativeItem", "endDrag", "removeSource", "isNodeInDocument", "Boolean", "body", "contains", "isDragging", "cancelHover", "scheduleHover", "requestAnimationFrame", "hover", "clientOffset", "getEventClientOffset", "publishSource", "nativeType", "matchNativeItemType", "setDragImage", "sourceNode", "dragPreview", "offsetX", "offsetY", "dragPreviewOffset", "getDragPreviewOffset", "x", "y", "setData", "publishDragSource", "types", "hasAttribute", "preventDefault", "loadDataTransfer", "enterLeaveCounter", "enter", "altKey", "canDropOnTarget", "leave", "reset", "drop", "dragDrop", "tagName", "isContentEditable", "OptionsReader", "getActions", "getMonitor", "getRegistry", "EnterLeaveCounter", "HTML5Backend", "manager", "context", "options", "HTML5BackendImpl", "import_jsx_dev_runtime", "MDEditor", "links", "loader", "action", "ProductPage", "_a", "get", "import_polaris", "import_jsx_dev_runtime", "MetaobjectsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_react", "import_polaris", "import_react", "import_jsx_dev_runtime", "type", "import_jsx_dev_runtime", "loader", "MetaobjectsPage", "MetaobjectsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_react", "import_polaris", "import_react", "import_jsx_dev_runtime", "type", "import_jsx_dev_runtime", "loader", "MetaobjectsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_polaris", "import_react", "import_react", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "loader", "ProductsPage", "loader", "import_node", "import_react", "import_polaris", "_", "import_jsx_dev_runtime", "loader", "ProductsPage", "action", "links", "loader", "import_react", "import_node", "import_polaris", "import_server", "import_jsx_dev_runtime", "links", "styles_default", "loader", "action", "PolarisAppProvider", "action", "action", "route_exports", "App", "links", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "loader", "loader", "App", "links", "loader", "import_node", "import_react", "import_server", "import_react", "import_polaris", "import_jsx_dev_runtime", "links", "styles_default", "loader", "App", "route_exports"]
}
