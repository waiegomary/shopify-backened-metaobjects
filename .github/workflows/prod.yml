name: GraphQl Shopify App MetaObjects for OVES
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: shopify-app-metaobjects
  AWS_ACCESS_KEY_ID: ${{ secrets.PROD_CODEDEPLOY_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_CODEDEPLOY_AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-central-1
  S3_BUCKET: ${{ secrets.PROD_CODEDEPLOY_S3_BUCKET }}
  APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}
  DEPLOYMENT_GROUP: ${{ secrets.PROD_DEPLOYMENT_GROUP }}
  DOCKER_USERNAME: lishenga

jobs:
  build:
    runs-on: ubuntu-latest
    name: build and deploy on staging
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/checkout@v2
      - run: |
          rm -rf .git

  build-push-image-and-codedeploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Push to AWS
        run: |
          npm i  --f
          npm run build
          zip -r build.zip .
      # - uses: actions/checkout@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build image
      #   run: docker buildx build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" --platform linux/arm64/v8 --build-arg SHOPIFY_APP_URL=https://shopify-app-metaobjects.omnivoltaic.com

      # - name: Log into registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Push image
      #   run: |
      #     IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

      #     # Change all uppercase to lowercase
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
      #     # Strip git ref prefix from version
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #     # Use Docker `latest` tag convention
      #     [ "$VERSION" == "master" ] && VERSION=latest
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION

      #     docker buildx build . --file Dockerfile --tag $IMAGE_ID:prod --platform linux/arm64/v8 --build-arg SHOPIFY_APP_URL=https://shopify-app-metaobjects.omnivoltaic.com --push

      #     npm i --f
      #     zip -r build.zip .

      - name: Upload
        id: upload
        uses: prabodhtiwari/aws-code-deploy@v1
        with:
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          APPLICATION_NAME: ${{ env.APPLICATION_NAME }}
          S3_BUCKET: ${{ env.S3_BUCKET }}
          COMMAND: 'upload'
          ZIP_FILE: 'build.zip'
      - name: Deploy
        id: deploy
        uses: prabodhtiwari/aws-code-deploy@v1
        with:
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          APPLICATION_NAME: ${{ env.APPLICATION_NAME }}
          DEPLOYMENT_GROUP: ${{ env.DEPLOYMENT_GROUP }}
          S3_BUCKET: ${{ env.S3_BUCKET }}
          COMMAND: 'deploy'
          WAIT: 'true'
          IGNORE_APPLICATION_STOP_FAILURES: 'true'
          FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
              