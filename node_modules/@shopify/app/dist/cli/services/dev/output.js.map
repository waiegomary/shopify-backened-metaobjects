{"version":3,"file":"output.js","sourceRoot":"","sources":["../../../../src/cli/services/dev/output.ts"],"names":[],"mappings":"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","sourcesContent":["import {PartnersURLs} from './urls.js'\nimport {fetchAppFromApiKey} from './fetch.js'\nimport {AppInterface, isCurrentAppSchema} from '../../models/app/app.js'\nimport {OrganizationApp} from '../../models/organization.js'\nimport {getAppConfigurationShorthand} from '../../models/app/loader.js'\nimport {developerPreviewUpdate, enableDeveloperPreview} from '../context.js'\nimport {partnersFqdn} from '@shopify/cli-kit/node/context/fqdn'\nimport {FooterContext, renderConcurrent, RenderConcurrentOptions, renderInfo} from '@shopify/cli-kit/node/ui'\nimport {openURL} from '@shopify/cli-kit/node/system'\nimport {basename} from '@shopify/cli-kit/node/path'\nimport {outputContent, outputDebug, outputToken} from '@shopify/cli-kit/node/output'\nimport {AbortController} from '@shopify/cli-kit/node/abort'\n\nexport async function outputUpdateURLsResult(\n  updated: boolean,\n  urls: PartnersURLs,\n  remoteApp: Omit<OrganizationApp, 'apiSecretKeys' | 'apiKey'> & {apiSecret?: string},\n  localApp: AppInterface,\n) {\n  const dashboardURL = await partnersURL(remoteApp.organizationId, remoteApp.id)\n  if (remoteApp.newApp) {\n    renderInfo({\n      headline: `For your convenience, we've given your app a default URL: ${urls.applicationUrl}.`,\n      body: [\n        \"You can update your app's URL anytime in the\",\n        dashboardURL,\n        'But once your app is live, updating its URL will disrupt user access.',\n      ],\n    })\n  } else if (!updated) {\n    if (isCurrentAppSchema(localApp.configuration)) {\n      const fileName = basename(localApp.configurationPath)\n      const configName = getAppConfigurationShorthand(fileName)\n      renderInfo({\n        body: [\n          `To update URLs manually, add the following URLs to ${fileName} under auth > redirect_urls and run\\n`,\n          {\n            command: `npm run shopify app config push -- --config=${configName}`,\n          },\n          '\\n\\n',\n          {list: {items: urls.redirectUrlWhitelist}},\n        ],\n      })\n    } else {\n      renderInfo({\n        body: [\n          'To make URL updates manually, you can add the following URLs as redirects in your',\n          dashboardURL,\n          {char: ':'},\n          '\\n\\n',\n          {list: {items: urls.redirectUrlWhitelist}},\n        ],\n      })\n    }\n  }\n}\n\nexport async function renderDev(\n  renderConcurrentOptions: RenderConcurrentOptions,\n  previewUrl: string,\n  app: {\n    canEnablePreviewMode: boolean\n    developmentStorePreviewEnabled?: boolean\n    apiKey: string\n    token: string\n  },\n) {\n  let options = renderConcurrentOptions\n\n  const {apiKey, token, canEnablePreviewMode, developmentStorePreviewEnabled} = app\n\n  const shortcuts = []\n  if (canEnablePreviewMode) {\n    // Enable dev preview on app dev start\n    const enablingDevPreviewSucceeds = await enableDeveloperPreview({apiKey, token})\n\n    const devPreviewStatus = enablingDevPreviewSucceeds ? true : developmentStorePreviewEnabled\n\n    buildDevPreviewShortcut({devPreviewStatus, apiKey, token})\n\n    shortcuts.push(buildDevPreviewShortcut({devPreviewStatus, apiKey, token}))\n  }\n\n  const subTitle = `Preview URL: ${previewUrl}`\n\n  if (previewUrl) {\n    options = {\n      ...options,\n      onInputAsync: async (input, _key, exit, footerContext) => {\n        if (input === 'p' && previewUrl) {\n          await openURL(previewUrl)\n        } else if (input === 'q') {\n          exit()\n        } else if (input === 'd' && canEnablePreviewMode) {\n          if (!footerContext) return\n          const currentShortcutAction = footerContext.footer?.shortcuts.find((shortcut) => shortcut.key === 'd')\n          if (!currentShortcutAction) return\n          const newDevPreviewStatus = !currentShortcutAction.state?.devPreviewStatus\n          const newShortcutAction = buildDevPreviewShortcut({devPreviewStatus: newDevPreviewStatus, apiKey, token})\n          const developerPreviewUpdateValue = await developerPreviewUpdate({\n            apiKey,\n            token,\n            enabled: newDevPreviewStatus,\n          })\n          if (developerPreviewUpdateValue) {\n            footerContext.updateShortcut(currentShortcutAction, newShortcutAction)\n            footerContext.updateSubTitle(subTitle)\n          } else {\n            const newSubTitle = outputContent`${subTitle}\\n\\n${outputToken.errorText(\n              'There was an error turning on developer preview mode',\n            )}`.value\n            footerContext.updateSubTitle(newSubTitle)\n          }\n        }\n      },\n      footer: {\n        shortcuts: [\n          ...shortcuts,\n          {\n            key: 'p',\n            action: 'preview in your browser',\n          },\n          {\n            key: 'q',\n            action: 'quit',\n          },\n        ],\n        subTitle,\n      },\n    }\n  }\n  return renderConcurrent({...options, keepRunningAfterProcessesResolve: true})\n}\n\nfunction buildDevPreviewShortcut({\n  devPreviewStatus,\n  apiKey,\n  token,\n}: {\n  devPreviewStatus?: boolean\n  apiKey: string\n  token: string\n}) {\n  const outputStatus = devPreviewStatus ? outputToken.green('✔ on') : outputToken.errorText('✖ off')\n  return {\n    key: 'd',\n    action: outputContent`development store preview: ${outputStatus}`.value,\n    state: {\n      devPreviewStatus,\n    },\n    syncer: buildPollForDevPreviewMode(apiKey, token),\n  }\n}\n\nasync function partnersURL(organizationId: string, appId: string) {\n  return {\n    link: {\n      label: 'Partners Dashboard',\n      url: `https://${await partnersFqdn()}/${organizationId}/apps/${appId}/edit`,\n    },\n  }\n}\n\nfunction buildPollForDevPreviewMode(apiKey: string, token: string, interval = 5) {\n  return (footerContext: FooterContext, abortController: AbortController) => {\n    const currentIntervalInSeconds = interval\n\n    return new Promise<void>((_resolve, _reject) => {\n      const onPoll = async () => {\n        const app = await fetchAppFromApiKey(apiKey, token)\n        const currentShortcutAction = footerContext.footer?.shortcuts.find((shortcut) => shortcut.key === 'd')\n        if (!currentShortcutAction) return\n        const newShortcutAction = buildDevPreviewShortcut({\n          devPreviewStatus: app?.developmentStorePreviewEnabled ?? false,\n          apiKey,\n          token,\n        })\n        footerContext.updateShortcut(currentShortcutAction, newShortcutAction)\n      }\n\n      const startPolling = () => {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        return setInterval(onPoll, currentIntervalInSeconds * 1000)\n      }\n\n      const pollId = startPolling()\n\n      abortController.signal.addEventListener('abort', async () => {\n        outputDebug('Stopping poll for dev preview mode...')\n        clearInterval(pollId)\n      })\n    })\n  }\n}\n"]}