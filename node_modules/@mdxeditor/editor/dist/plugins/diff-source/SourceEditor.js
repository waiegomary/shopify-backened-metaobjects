import { markdown } from "@codemirror/lang-markdown";
import { SandpackProvider, CodeEditor } from "@codesandbox/sandpack-react";
import React__default from "react";
import { diffSourcePluginHooks } from "./index.js";
import { corePluginHooks } from "../core/index.js";
import { EditorView } from "@codemirror/view";
const SourceEditor = () => {
  const [markdown$1, readOnly] = corePluginHooks.useEmitterValues("markdown", "readOnly");
  const updateMarkdown = diffSourcePluginHooks.usePublisher("markdownSourceEditorValue");
  const codeMirrorRef = React__default.useRef(null);
  return /* @__PURE__ */ React__default.createElement("div", null, /* @__PURE__ */ React__default.createElement(React__default.Suspense, { fallback: null }, /* @__PURE__ */ React__default.createElement(SandpackProvider, null, /* @__PURE__ */ React__default.createElement(
    CodeEditor,
    {
      readOnly,
      extensions: [EditorView.lineWrapping],
      showLineNumbers: true,
      additionalLanguages: [{ name: "markdown", extensions: ["md"], language: markdown() }],
      initMode: "lazy",
      filePath: `file.md`,
      code: markdown$1,
      onCodeUpdate: updateMarkdown,
      ref: codeMirrorRef
    }
  ))));
};
export {
  SourceEditor
};
